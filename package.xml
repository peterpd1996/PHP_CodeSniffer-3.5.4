<?xml version="1.0" encoding="UTF-8"?>
<package packagerversion="1.10.10" version="2.0" xmlns="http://pear.php.net/dtd/package-2.0" xmlns:tasks="http://pear.php.net/dtd/tasks-1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://pear.php.net/dtd/tasks-1.0 http://pear.php.net/dtd/tasks-1.0.xsd http://pear.php.net/dtd/package-2.0 http://pear.php.net/dtd/package-2.0.xsd">
 <name>PHP_CodeSniffer</name>
 <channel>pear.php.net</channel>
 <summary>PHP_CodeSniffer tokenizes PHP, JavaScript and CSS files to detect and fix violations of a defined set of coding standards.</summary>
 <description>PHP_CodeSniffer is a set of two PHP scripts; the main phpcs script that tokenizes PHP, JavaScript and CSS files to detect violations of a defined coding standard, and a second phpcbf script to automatically correct coding standard violations. PHP_CodeSniffer is an essential development tool that ensures your code remains clean and consistent.</description>
 <lead>
  <name>Greg Sherwood</name>
  <user>squiz</user>
  <email>gsherwood@squiz.net</email>
  <active>yes</active>
 </lead>
 <date>2020-01-30</date>
 <time>22:13:06</time>
 <version>
  <release>3.5.4</release>
  <api>3.5.4</api>
 </version>
 <stability>
  <release>stable</release>
  <api>stable</api>
 </stability>
 <license uri="https://github.com/squizlabs/PHP_CodeSniffer/blob/master/licence.txt">BSD 3-Clause License</license>
 <notes>
- The PHP 7.4 numeric separator backfill now works correctly for more float formats
  -- Thanks to Juliette Reinders Folmer for the patch
- The PHP 7.4 numeric separator backfill is no longer run on PHP version 7.4.0 or greater
- File::getCondition() now accepts a 3rd argument that allows for the closest matching token to be returned
  -- By default, it continues to return the first matched token found from the top of the file
- Fixed detection of array return types for arrow functions
- Added Generic.PHP.DisallowRequestSuperglobal to ban the use of the $_REQUEST superglobal
  -- Thanks to Morerice for the contribution
- Generic.ControlStructures.InlineControlStructure no longer shows errors for WHILE and FOR statements without a body
  -- Previously it required these to have curly braces, but there were no statements to enclose in them
  -- Thanks to Juliette Reinders Folmer for the patch
- PSR12.ControlStructures.BooleanOperatorPlacement can now be configured to enforce a specific operator position
  -- By default, the sniff ensures that operators are all at the begining or end of lines, but not a mix of both
  -- Set the allowOnly property to &quot;first&quot; to enforce all boolean operators to be at the start of a line
  -- Set the allowOnly property to &quot;last&quot; to enforce all boolean operators to be at the end of a line
  -- Thanks to Vincent Langlet for the patch
- PSR12.Files.ImportStatement now auto-fixes import statements by removing the leading slash
  -- Thanks to Michał Bundyra for the patch
- Squiz.ControlStructures.ForLoopDeclaration now has a setting to ignore newline characters
  -- Default remains FALSE, so newlines are not allowed within FOR definitions
  -- Override the &quot;ignoreNewlines&quot; setting in a ruleset.xml file to change
- Squiz.PHP.InnerFunctions now handles multiple nested anon classes correctly
- Fixed bug #2497 : Sniff properties not set when referencing a sniff using relative paths or non-native slashes
  -- Thanks to Juliette Reinders Folmer for the patch
- Fixed bug #2657 : Squiz.WhiteSpace.FunctionSpacing can remove spaces between comment and first/last method during auto-fixing
  -- Thanks to Juliette Reinders Folmer for the patch
- Fixed bug #2688 : Case statements not tokenized correctly when switch is contained within ternary
- Fixed bug #2698 : PHPCS throws errors determining auto report width when shell_exec is disabled
  -- Thanks to Matthew Peveler for the patch
- Fixed bug #2730 : PSR12.ControlStructures.ControlStructureSpacing does not ignore comments between conditions
  -- Thanks to Juliette Reinders Folmer for the patch
- Fixed bug #2732 : PSR12.Files.FileHeader misidentifies file header in mixed content file
- Fixed bug #2745 : AbstractArraySniff wrong indices when mixed coalesce and ternary values
  -- Thanks to Michał Bundyra for the patch
- Fixed bug #2748 : Wrong end of statement for fn closures
  -- Thanks to Michał Bundyra for the patch
- Fixed bug #2751 : Autoload relative paths first to avoid confusion with files from the global include path
  -- Thanks to Klaus Purer for the patch
- Fixed bug #2763 : PSR12 standard reports errors for multi-line FOR definitions
- Fixed bug #2768 : Generic.Files.LineLength false positive for non-breakable strings at exactly the soft limit
  -- Thanks to Alex Miles for the patch
- Fixed bug #2773 : PSR2.Methods.FunctionCallSignature false positive when arrow function has array return type
- Fixed bug #2790 : PSR12.Traits.UseDeclaration ignores block comments
  -- Thanks to Vincent Langlet for the patch
- Fixed bug #2791 : PSR12.Functions.NullableTypeDeclaration false positive when ternary operator used with instanceof
  -- Thanks to Juliette Reinders Folmer for the patch
- Fixed bug #2802 : Can&apos;t specify a report file path using the tilde shortcut
- Fixed bug #2804 : PHP4-style typed properties not tokenized correctly
  -- Thanks to Juliette Reinders Folmer for the patch
- Fixed bug #2805 : Undefined Offset notice during live coding of arrow functions
  -- Thanks to Juliette Reinders Folmer for the patch
- Fixed bug #2843 : Tokenizer does not support alternative syntax for declare statements
  -- Thanks to Juliette Reinders Folmer for the patch
 </notes>
 <contents>
  <dir name="/">
   <file baseinstalldir="" md5sum="e7ced778ff49137c740ec9e97246e4b4" name="bin/phpcbf" role="script">
    <tasks:replace from="/usr/bin/env php" to="php_bin" type="pear-config" />
   </file>
   <file baseinstalldir="" md5sum="cf0e83a421d28cfd3c2fb95ec87b1444" name="bin/phpcs" role="script">
    <tasks:replace from="/usr/bin/env php" to="php_bin" type="pear-config" />
   </file>
   <file baseinstalldir="" md5sum="cba6256981a14cdba70ade18f6c74280" name="bin/phpcs.bat" role="script">
    <tasks:replace from="@php_bin@" to="php_bin" type="pear-config" />
    <tasks:replace from="@bin_dir@" to="bin_dir" type="pear-config" />
   </file>
   <file baseinstalldir="" md5sum="8b242e092b22151d42ffdf7afe8ca50e" name="bin/phpcbf.bat" role="script">
    <tasks:replace from="@php_bin@" to="php_bin" type="pear-config" />
    <tasks:replace from="@bin_dir@" to="bin_dir" type="pear-config" />
   </file>
   <file baseinstalldir="" md5sum="3f09dc3fb861d037d6d9f1d0307957c1" name="tests/Core/File/FindEndOfStatementTest.inc" role="test" />
   <file baseinstalldir="" md5sum="960542ea99b292a497c4f4864fcde65c" name="tests/Core/File/FindEndOfStatementTest.php" role="test" />
   <file baseinstalldir="" md5sum="686ea1ad1f3a7d12dfc9d82a12287eb8" name="tests/Core/File/FindExtendedClassNameTest.inc" role="test" />
   <file baseinstalldir="" md5sum="16430cb4daec1029e4d9118416350ca0" name="tests/Core/File/FindExtendedClassNameTest.php" role="test" />
   <file baseinstalldir="" md5sum="2e1e02dd942bcccea8d33ea7fdd9698d" name="tests/Core/File/FindImplementedInterfaceNamesTest.inc" role="test" />
   <file baseinstalldir="" md5sum="83a1d5f46aca1c922c8b43153b79c8b2" name="tests/Core/File/FindImplementedInterfaceNamesTest.php" role="test" />
   <file baseinstalldir="" md5sum="00b97754b774c5deed73d964ab3445b2" name="tests/Core/File/GetMemberPropertiesTest.inc" role="test" />
   <file baseinstalldir="" md5sum="0ab3b46d0479d4c867dc9030610bad5a" name="tests/Core/File/GetMemberPropertiesTest.php" role="test" />
   <file baseinstalldir="" md5sum="6c83236e73c373d96bc83b28a96335ea" name="tests/Core/File/GetMethodParametersTest.inc" role="test" />
   <file baseinstalldir="" md5sum="246f7cacb1449a9ab48894d2471a63a7" name="tests/Core/File/GetMethodParametersTest.php" role="test" />
   <file baseinstalldir="" md5sum="f09c0b1592778e142ee7c73500891eb9" name="tests/Core/File/GetMethodPropertiesTest.inc" role="test" />
   <file baseinstalldir="" md5sum="e8940c05351f73a4ae95e5cd80ce86e9" name="tests/Core/File/GetMethodPropertiesTest.php" role="test" />
   <file baseinstalldir="" md5sum="7dedb89a649609b31be7397ad9ee3c93" name="tests/Core/File/IsReferenceTest.inc" role="test" />
   <file baseinstalldir="" md5sum="8388d943a84850a083b35b8ecb526faa" name="tests/Core/File/IsReferenceTest.php" role="test" />
   <file baseinstalldir="" md5sum="bec322408e0f026ac4727d06a9c65a49" name="tests/Core/Filters/Filter/AcceptTest.xml" role="test" />
   <file baseinstalldir="" md5sum="db7ff608d56e96f6b2646585fb91e9bb" name="tests/Core/Filters/Filter/AcceptTest.php" role="test" />
   <file baseinstalldir="" md5sum="1576c0298115e434edc23c5a2a256bd4" name="tests/Core/Ruleset/RuleInclusionTest.php" role="test" />
   <file baseinstalldir="" md5sum="941a78ca8522b73c3f32ac352273996d" name="tests/Core/Ruleset/RuleInclusionTest.xml" role="test" />
   <file baseinstalldir="" md5sum="2ca2516437053a55bac1217d7bd96d19" name="tests/Core/Ruleset/RuleInclusionTest-include.xml" role="test" />
   <file baseinstalldir="" md5sum="04961cb369ba24e61bb9d55a104b204a" name="tests/Core/Ruleset/RuleInclusionAbsoluteLinuxTest.php" role="test" />
   <file baseinstalldir="" md5sum="a966523fd3025c5dee5043e74bb3e522" name="tests/Core/Ruleset/RuleInclusionAbsoluteLinuxTest.xml" role="test" />
   <file baseinstalldir="" md5sum="cbbfa1f73429cc16696dbbd69850bf21" name="tests/Core/Ruleset/RuleInclusionAbsoluteWindowsTest.php" role="test" />
   <file baseinstalldir="" md5sum="955d6b18e416d94f5e5412c4a8089222" name="tests/Core/Ruleset/RuleInclusionAbsoluteWindowsTest.xml" role="test" />
   <file baseinstalldir="" md5sum="50fc6db5989321dd866ffe0c312b9f53" name="tests/Core/Sniffs/AbstractArraySniffTest.inc" role="test" />
   <file baseinstalldir="" md5sum="614a9c08d5e057ac75c1c9ca48596e06" name="tests/Core/Sniffs/AbstractArraySniffTest.php" role="test" />
   <file baseinstalldir="" md5sum="9c17bddeb57b2aa2cdf7a9485e362f7b" name="tests/Core/Sniffs/AbstractArraySniffTestable.php" role="test" />
   <file baseinstalldir="" md5sum="0e892a5fd455fc650452b013a6ee8980" name="tests/Core/Tokenizer/AnonClassParenthesisOwnerTest.inc" role="test" />
   <file baseinstalldir="" md5sum="60e8482e91018a41bb9029de3faee349" name="tests/Core/Tokenizer/AnonClassParenthesisOwnerTest.php" role="test" />
   <file baseinstalldir="" md5sum="f12643c969b7b6059e8ae872082608b9" name="tests/Core/Tokenizer/BackfillFnTokenTest.inc" role="test" />
   <file baseinstalldir="" md5sum="c9bbfc6d97a07ce641dbd55ed584323f" name="tests/Core/Tokenizer/BackfillFnTokenTest.php" role="test" />
   <file baseinstalldir="" md5sum="b8ef65f3c70bffd3f919cc1cad379220" name="tests/Core/Tokenizer/BackfillNumericSeparatorTest.inc" role="test" />
   <file baseinstalldir="" md5sum="bb0932265fb145bea69a66ec944cd817" name="tests/Core/Tokenizer/BackfillNumericSeparatorTest.php" role="test" />
   <file baseinstalldir="" md5sum="b8180afcaabf39dd8457ffbbc7603773" name="tests/Core/AbstractMethodUnitTest.php" role="test" />
   <file baseinstalldir="" md5sum="0f9e6f774d4f5ce4db190f47a2aff893" name="tests/Core/AllTests.php" role="test" />
   <file baseinstalldir="" md5sum="ec5a79ff34a4812e2e77124a7aa1d2d1" name="tests/Core/ErrorSuppressionTest.php" role="test" />
   <file baseinstalldir="" md5sum="f21b0427c53218e5f32514bc8fcb13a2" name="tests/Core/IsCamelCapsTest.php" role="test" />
   <file baseinstalldir="" md5sum="66ea001b5e609c561edd60d1ce0cf95b" name="tests/Standards/AbstractSniffUnitTest.php" role="test" />
   <file baseinstalldir="" md5sum="d0233dc8d2e2598d6cccb5fda1e136ff" name="tests/Standards/AllSniffs.php" role="test" />
   <file baseinstalldir="" md5sum="31a419c39aa8b50c6d8fee4fc58dcf97" name="tests/AllTests.php" role="test" />
   <file baseinstalldir="" md5sum="1adfa57c05cb745af5a36e6285fc72c4" name="tests/bootstrap.php" role="test" />
   <file baseinstalldir="" md5sum="05d9ea029371af0c6647e5c0f22a2cb3" name="tests/FileList.php" role="test" />
   <file baseinstalldir="" md5sum="bf02c7f06105a1032bdf174c028b2b78" name="tests/TestSuite.php" role="test" />
   <file baseinstalldir="" md5sum="b72b6168ed30035e6d9990315e15b372" name="tests/TestSuite7.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="087c91243bfc17c6716c2c43d54873c2" name="src/Exceptions/DeepExitException.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="148feadc5cbdd94f0d28070dbdffa6ab" name="src/Exceptions/RuntimeException.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="2128bf7554e305a20afa360d86fe0919" name="src/Exceptions/TokenizerException.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="ea46a2aa43c29af9701e9396b5636e4f" name="src/Files/DummyFile.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="491ba8641e75b5b200476125e84ad300" name="src/Files/File.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="6918e39ddc6574c30d4a7b1de35183e1" name="src/Files/FileList.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="607d49a9750e14a3edc966e69e14f6e4" name="src/Files/LocalFile.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="d9078f4300143706ea8c3cc91126d72f" name="src/Filters/ExactMatch.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="a0add846eecba4c1125f5a37256679e7" name="src/Filters/Filter.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="4f2aebb42c0359a3eb5244b18ae973b0" name="src/Filters/GitModified.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="645508efd82cb52aa53677db3f8f471d" name="src/Filters/GitStaged.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="2fd85d8829b4c9671a1e3030693d2828" name="src/Generators/Generator.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="c8c3e1f2fd21dd4486f97d6ee3e7948d" name="src/Generators/HTML.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="a7ca668de825128f97acdff6930b374a" name="src/Generators/Markdown.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="df5c21ae1d8dc19a9ed724733163b1ac" name="src/Generators/Text.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="01d58f01843a6c137f2f66d32b4535e3" name="src/Reports/Cbf.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="35bb8f3c0faf569ec27a6de5517bbee4" name="src/Reports/Checkstyle.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="83fea7f09ac1b1e1ebdb7efb274afc11" name="src/Reports/Code.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="499aa4a33153f4cbea55065d4f6a3aa2" name="src/Reports/Csv.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="b2beee5a0605924ac6c21ad7fcac7366" name="src/Reports/Diff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="bd8e5d8b97646ce3a8c34aba9d2cd80a" name="src/Reports/Emacs.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="a8e57dca0919e1c6322bf4a6b4c065c0" name="src/Reports/Full.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="aa80ff4674e905f4bd0135758d6093ce" name="src/Reports/Gitblame.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="588a29e55149a33bcb2834eac2aa2968" name="src/Reports/Hgblame.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="495cd502e745137a9a5a06c8d017c3a3" name="src/Reports/Info.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="023e29df964fe6c1d89f864f20c259fe" name="src/Reports/Json.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="18d42be722aeee84faff837a8f14a974" name="src/Reports/Junit.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="10f60036719c714d0c43356a6c690b3b" name="src/Reports/Notifysend.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="235fd489804de8f2ea3843a522cf7a8c" name="src/Reports/Report.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="96c1bd59509ded30b39fbb0c210ee312" name="src/Reports/Source.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="16ad946eca01fa00b37d785872bcdaea" name="src/Reports/Summary.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="8fa85e2a9c30d3a08697e15909f3d139" name="src/Reports/Svnblame.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="71e2562322c63dc4d500399423419e09" name="src/Reports/VersionControl.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="a4b225e1a16ec25ae4715551e479c1ec" name="src/Reports/Xml.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="941f993db27f35e1c7575d74f7ab74a8" name="src/Sniffs/AbstractArraySniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="58dfcfc03b038243a42f5e4ab75c7ed0" name="src/Sniffs/AbstractPatternSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="352b15ca1b91867fc254ae8f18da010a" name="src/Sniffs/AbstractScopeSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="b4d554ab2e27b4a97dacb9ff390dd48e" name="src/Sniffs/AbstractVariableSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="45f0b2c6ec6b79dd3bb7446ac68658c2" name="src/Sniffs/Sniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="62a8c0e417bb5aaaa76044592b51fe49" name="src/Standards/Generic/Docs/Arrays/DisallowLongArraySyntaxStandard.xml" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="be9bdb42be9b84a915392dfaa13472b4" name="src/Standards/Generic/Docs/Arrays/DisallowShortArraySyntaxStandard.xml" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="09ce1ee2e667e285e0bc6f12c6b16eae" name="src/Standards/Generic/Docs/Classes/DuplicateClassNameStandard.xml" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="66d42eef4d0a5b13accd228ec38c0dfd" name="src/Standards/Generic/Docs/Classes/OpeningBraceSameLineStandard.xml" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="ba59a6b43ae935db6c23434ee65b676e" name="src/Standards/Generic/Docs/Debug/CSSLintStandard.xml" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="b2cd9c46f2bc007d81272d324b25f333" name="src/Standards/Generic/Docs/Debug/ClosureLinterStandard.xml" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="3a5efd9d84e677fc3bd05ac5d414a22b" name="src/Standards/Generic/Docs/Debug/JSHintStandard.xml" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="e8e65239cafed8ebf18621d6b5602dc1" name="src/Standards/Generic/Docs/Commenting/FixmeStandard.xml" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="0cc4f95f8f7a3883300743bb88850013" name="src/Standards/Generic/Docs/Commenting/TodoStandard.xml" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="abbc0419b5ddbd094d5b6d69a26f72ac" name="src/Standards/Generic/Docs/CodeAnalysis/JumbledIncrementerStandard.xml" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="78c7daf9578d2624de66f5172f3af5c5" name="src/Standards/Generic/Docs/CodeAnalysis/UnusedFunctionParameterStandard.xml" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="e4d1a22e3a777532c2654a62c6235a22" name="src/Standards/Generic/Docs/ControlStructures/DisallowYodaConditionsStandard.xml" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="f6049fa662dbed93aacb719c79225592" name="src/Standards/Generic/Docs/ControlStructures/InlineControlStructureStandard.xml" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="3e67ab60d510410f8504175108dd2565" name="src/Standards/Generic/Docs/CodeAnalysis/AssignmentInConditionStandard.xml" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="dd1e8e78d5fd132c488682442a9f4993" name="src/Standards/Generic/Docs/CodeAnalysis/EmptyStatementStandard.xml" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="5fca871f5bfd3d3e117b2455e4885662" name="src/Standards/Generic/Docs/CodeAnalysis/ForLoopShouldBeWhileLoopStandard.xml" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="1968d3305bc8940872beef2ded3c4f72" name="src/Standards/Generic/Docs/CodeAnalysis/ForLoopWithTestFunctionCallStandard.xml" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="1dac87dae57656578fa8b1ba782189bb" name="src/Standards/Generic/Docs/CodeAnalysis/UnconditionalIfStatementStandard.xml" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="74ed244fa9d088197a068e8de61e9a4f" name="src/Standards/Generic/Docs/CodeAnalysis/UnnecessaryFinalModifierStandard.xml" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="4bc3a1be74cf86956c395c61f49b3a5e" name="src/Standards/Generic/Docs/CodeAnalysis/UselessOverridingMethodStandard.xml" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="b137c1376a2664010fdda00645ba52a4" name="src/Standards/Generic/Docs/Files/ByteOrderMarkStandard.xml" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="b03178b04285d4a12dc253753552a7d0" name="src/Standards/Generic/Docs/Files/EndFileNewlineStandard.xml" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="443cfd71e7194e09ad00f6ce79ce6d67" name="src/Standards/Generic/Docs/Files/EndFileNoNewlineStandard.xml" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="67037f0aa01d602cab1dc766e8a2138e" name="src/Standards/Generic/Docs/Files/ExecutableFileStandard.xml" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="70eb8afbb2b964437d0d8ef76059b76f" name="src/Standards/Generic/Docs/Files/InlineHTMLStandard.xml" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="2b5ae42cdcc266ea919e65b1183dbe4b" name="src/Standards/Generic/Docs/Files/LineEndingsStandard.xml" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="5d6ef4a4de5a13c34e0813bbfb34cc1b" name="src/Standards/Generic/Docs/Files/LineLengthStandard.xml" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="268e378573427e71991bca18907d18a9" name="src/Standards/Generic/Docs/Files/LowercasedFilenameStandard.xml" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="bc717d744854037a100dbce2c482ddc4" name="src/Standards/Generic/Docs/Files/OneClassPerFileStandard.xml" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="85b5b9f411af797487fcd569a238638b" name="src/Standards/Generic/Docs/Files/OneInterfacePerFileStandard.xml" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="290b88a97913a56dc819defc95c6a0a9" name="src/Standards/Generic/Docs/Files/OneObjectStructurePerFileStandard.xml" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="c20fb91516461f73c8bc3ff4853c322e" name="src/Standards/Generic/Docs/Files/OneTraitPerFileStandard.xml" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="645c798d2c00fac7036e7a6e6c8d3466" name="src/Standards/Generic/Docs/Formatting/DisallowMultipleStatementsStandard.xml" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="73e2a5300ce5d23395635b42086f56f4" name="src/Standards/Generic/Docs/Formatting/MultipleStatementAlignmentStandard.xml" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="9aba38605e1ef11f846b614055e7e02e" name="src/Standards/Generic/Docs/Formatting/NoSpaceAfterCastStandard.xml" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="7b75c5b04193a312260f03779705714e" name="src/Standards/Generic/Docs/Formatting/SpaceAfterCastStandard.xml" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="5f0c495b6920d101d611828526663751" name="src/Standards/Generic/Docs/Formatting/SpaceAfterNotStandard.xml" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="db368fdd693d9b10290c734c02e1859e" name="src/Standards/Generic/Docs/Functions/CallTimePassByReferenceStandard.xml" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="c649b370eee7429572a8abb283363b30" name="src/Standards/Generic/Docs/Functions/FunctionCallArgumentSpacingStandard.xml" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="72e2b9b475a809e76fd9ca90bd5d8d9a" name="src/Standards/Generic/Docs/Functions/OpeningFunctionBraceBsdAllmanStandard.xml" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="4488d3c4648045eceebdbd102d6645a0" name="src/Standards/Generic/Docs/Functions/OpeningFunctionBraceKernighanRitchieStandard.xml" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="e6f564da68adaf4ba9ef330ae9090133" name="src/Standards/Generic/Docs/Metrics/CyclomaticComplexityStandard.xml" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="abb8f4e2e3681c96a6be26de1482769c" name="src/Standards/Generic/Docs/Metrics/NestingLevelStandard.xml" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="a132b1e5f691bafab3ac6ac589582102" name="src/Standards/Generic/Docs/NamingConventions/CamelCapsFunctionNameStandard.xml" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="15d11a08a93c27be384ebffd88a14ac5" name="src/Standards/Generic/Docs/NamingConventions/ConstructorNameStandard.xml" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="92ab09457475cb363e4c16564700682e" name="src/Standards/Generic/Docs/NamingConventions/UpperCaseConstantNameStandard.xml" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="442be3c8ee6d95e3e6a49756e3c58b23" name="src/Standards/Generic/Docs/PHP/BacktickOperatorStandard.xml" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="643f4a24c9fd9f0a3e9ddc2fb01b1454" name="src/Standards/Generic/Docs/PHP/CharacterBeforePHPOpeningTagStandard.xml" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="2b1998ff7bfe27550b3545ab493fb451" name="src/Standards/Generic/Docs/PHP/ClosingPHPTagStandard.xml" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="a07b3389c1392b1fb8a8fdf56456c2d3" name="src/Standards/Generic/Docs/PHP/DeprecatedFunctionsStandard.xml" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="b62c48449691f536534b4eb6aca7e378" name="src/Standards/Generic/Docs/PHP/DisallowAlternativePHPTagsStandard.xml" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="03ca0636ab39841d299a67db625e8aef" name="src/Standards/Generic/Docs/PHP/DisallowRequestSuperglobalStandard.xml" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="1a934313b977708b83f932787395cc7b" name="src/Standards/Generic/Docs/PHP/DisallowShortOpenTagStandard.xml" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="21f1e6f02388b0841ec9b5e2cde5e4f2" name="src/Standards/Generic/Docs/PHP/DiscourageGotoStandard.xml" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="56c1aa1d971883d75f2fad3eea8c14be" name="src/Standards/Generic/Docs/PHP/ForbiddenFunctionsStandard.xml" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="b20d23ee15f54cbbcd64a987b27aed7d" name="src/Standards/Generic/Docs/PHP/LowerCaseConstantStandard.xml" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="7b9a8104c185c6de35d9d59a0d41ba0e" name="src/Standards/Generic/Docs/PHP/LowerCaseKeywordStandard.xml" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="b365b7555a44d1e853c16d297caa4e17" name="src/Standards/Generic/Docs/PHP/LowerCaseTypeStandard.xml" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="4587e7de5431c46dcaa9153c20e223d3" name="src/Standards/Generic/Docs/PHP/NoSilencedErrorsStandard.xml" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="2354242590f88b89aafdd52e9a254b52" name="src/Standards/Generic/Docs/PHP/SAPIUsageStandard.xml" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="118c2cac2afa2c01cb5801e71617a974" name="src/Standards/Generic/Docs/PHP/UpperCaseConstantStandard.xml" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="dbf7a1b01e799ba2fbc6ce8288af2afa" name="src/Standards/Generic/Docs/Strings/UnnecessaryStringConcatStandard.xml" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="9bbed11883b0ea004b0bc823a145a7d0" name="src/Standards/Generic/Docs/VersionControl/SubversionPropertiesStandard.xml" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="e00662cbd91bdfe3f86b161a5a1702b2" name="src/Standards/Generic/Docs/WhiteSpace/ArbitraryParenthesesSpacingStandard.xml" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="72862f24ee2c5fbf1adce94ea182e5d0" name="src/Standards/Generic/Docs/WhiteSpace/DisallowSpaceIndentStandard.xml" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="9b6f8015f2c468e83f8fdd6c3b365ca8" name="src/Standards/Generic/Docs/WhiteSpace/DisallowTabIndentStandard.xml" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="e9569d4b81b45d746ab8217ee8f87136" name="src/Standards/Generic/Docs/WhiteSpace/ScopeIndentStandard.xml" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="80363fdec4d7b44d4c212124eadc28da" name="src/Standards/Generic/Docs/WhiteSpace/SpreadOperatorSpacingAfterStandard.xml" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="c83358e7e3190306de4e2b1e50737fe0" name="src/Standards/Generic/Sniffs/Arrays/ArrayIndentSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="3d2de65beffd8fa14ef89566e5fc0400" name="src/Standards/Generic/Sniffs/Arrays/DisallowLongArraySyntaxSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="4eaad9bb28633815ba2ae9351e692b41" name="src/Standards/Generic/Sniffs/Arrays/DisallowShortArraySyntaxSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="d323a49a6da6467919067fb95454a2da" name="src/Standards/Generic/Sniffs/Classes/DuplicateClassNameSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="c114bd7731323e67ea4b32a07fca7ff6" name="src/Standards/Generic/Sniffs/Classes/OpeningBraceSameLineSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="9edb8e2673b4d4e4e2a12af86b5d975d" name="src/Standards/Generic/Sniffs/CodeAnalysis/AssignmentInConditionSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="0a4907e4222d57d09817b6f4ae7de41e" name="src/Standards/Generic/Sniffs/CodeAnalysis/EmptyPHPStatementSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="25536ae2ec4c3a57197736c4a98ce61c" name="src/Standards/Generic/Sniffs/CodeAnalysis/EmptyStatementSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="b729885307c373ff5fd868cdb3513fe6" name="src/Standards/Generic/Sniffs/CodeAnalysis/ForLoopShouldBeWhileLoopSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="46920114051aac8fd941e6b9267e4a47" name="src/Standards/Generic/Sniffs/CodeAnalysis/ForLoopWithTestFunctionCallSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="c10ea379216930da24591da8b6a993b8" name="src/Standards/Generic/Sniffs/CodeAnalysis/JumbledIncrementerSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="ddfdaca34dafbbde07359d0eab39b524" name="src/Standards/Generic/Sniffs/CodeAnalysis/UnconditionalIfStatementSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="78064a530c0895d0d0995211263c1aab" name="src/Standards/Generic/Sniffs/CodeAnalysis/UnnecessaryFinalModifierSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="3a7d41eb7e99ab47bddfb3e36676a6fc" name="src/Standards/Generic/Sniffs/CodeAnalysis/UnusedFunctionParameterSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="726db1a1a43b4110a3d38b9fa813035d" name="src/Standards/Generic/Sniffs/CodeAnalysis/UselessOverridingMethodSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="c9d4cd839e1c551725f69c015886f26b" name="src/Standards/Generic/Sniffs/Commenting/DocCommentSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="fb86460b01a4588947175c6046f6bd67" name="src/Standards/Generic/Sniffs/Commenting/FixmeSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="ae8ee83c64d658a36d095ef958381cbc" name="src/Standards/Generic/Sniffs/Commenting/TodoSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="3497e5b2e4b54cd175a0fac23bffb1ba" name="src/Standards/Generic/Sniffs/ControlStructures/DisallowYodaConditionsSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="ef165d6e9a5cfea306319af3d865a883" name="src/Standards/Generic/Sniffs/ControlStructures/InlineControlStructureSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="61187acea018c217871f2d69b4944462" name="src/Standards/Generic/Sniffs/Debug/ClosureLinterSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="8408f704c085ccb06ba6c26a1af5667a" name="src/Standards/Generic/Sniffs/Debug/CSSLintSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="2ab3a645795b37082aad38f7b42e6829" name="src/Standards/Generic/Sniffs/Debug/ESLintSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="2f54afeb46d6142fe284336adace7906" name="src/Standards/Generic/Sniffs/Debug/JSHintSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="33fdd870f972183c5aa61be4c61c37cc" name="src/Standards/Generic/Sniffs/Files/ByteOrderMarkSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="49c5346819ee5d330fd5fc2b9d2d83f8" name="src/Standards/Generic/Sniffs/Files/EndFileNewlineSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="4d8453f9ea323f8d1475196f9e317c50" name="src/Standards/Generic/Sniffs/Files/EndFileNoNewlineSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="a83bab6b0895b5cd30d36853c4fa7482" name="src/Standards/Generic/Sniffs/Files/ExecutableFileSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="5b27cabd888f5a3ac8a4aad820409991" name="src/Standards/Generic/Sniffs/Files/InlineHTMLSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="b94884e3b561a01c84a6a9b715ae303c" name="src/Standards/Generic/Sniffs/Files/LineEndingsSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="77ea2e7825849c77910397f53d6cea34" name="src/Standards/Generic/Sniffs/Files/LineLengthSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="9c813c1cc613b125f7a4408609c0b789" name="src/Standards/Generic/Sniffs/Files/LowercasedFilenameSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="7c2e367551d5d590dff1725f1db143f1" name="src/Standards/Generic/Sniffs/Files/OneClassPerFileSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="55d51f7bd2334e233474985ae0c087da" name="src/Standards/Generic/Sniffs/Files/OneInterfacePerFileSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="7f73fc1b04741012236eeec67430637d" name="src/Standards/Generic/Sniffs/Files/OneObjectStructurePerFileSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="64679b7fbb45da54ea70725979e3bad2" name="src/Standards/Generic/Sniffs/Files/OneTraitPerFileSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="12dfe9110125db1a770ed1daf83ba7c1" name="src/Standards/Generic/Sniffs/Formatting/DisallowMultipleStatementsSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="eb268d3f4f4714c75dfabbdfc898e365" name="src/Standards/Generic/Sniffs/Formatting/MultipleStatementAlignmentSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="a17abb6ac1e8053cfd867432574b3f5a" name="src/Standards/Generic/Sniffs/Formatting/NoSpaceAfterCastSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="2b237f65cea4b6d696022821d90cd3c1" name="src/Standards/Generic/Sniffs/Formatting/SpaceAfterCastSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="e697d7150df2260b05cd5aa44c74dc38" name="src/Standards/Generic/Sniffs/Formatting/SpaceAfterNotSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="43a43ffcd3f065d1add23244c9c120cc" name="src/Standards/Generic/Sniffs/Formatting/SpaceBeforeCastSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="5315145d34c1ea8ba155b06690d1d3c6" name="src/Standards/Generic/Sniffs/Functions/CallTimePassByReferenceSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="ff7a0043095b2a48c80c3e148114a2cb" name="src/Standards/Generic/Sniffs/Functions/FunctionCallArgumentSpacingSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="fe3d34c83810b130e35814a88c624459" name="src/Standards/Generic/Sniffs/Functions/OpeningFunctionBraceBsdAllmanSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="b4072a37c934037194832f6a3afd1f8e" name="src/Standards/Generic/Sniffs/Functions/OpeningFunctionBraceKernighanRitchieSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="f7108a80cc0219dffa466a6a67dffd82" name="src/Standards/Generic/Sniffs/Metrics/CyclomaticComplexitySniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="b59164c732f27cc5f60dc3935c2a508b" name="src/Standards/Generic/Sniffs/Metrics/NestingLevelSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="c3546611bd627d249d98559e09d66f58" name="src/Standards/Generic/Sniffs/NamingConventions/CamelCapsFunctionNameSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="87d66b879a36931951125fa7fc9fcce2" name="src/Standards/Generic/Sniffs/NamingConventions/ConstructorNameSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="453d3950fc6e5d66432882fc666c32c2" name="src/Standards/Generic/Sniffs/NamingConventions/UpperCaseConstantNameSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="c224a406d022c99336b0b75af33578d8" name="src/Standards/Generic/Sniffs/PHP/BacktickOperatorSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="c5b71d1c581bb67f391a73b3fd0b96b6" name="src/Standards/Generic/Sniffs/PHP/CharacterBeforePHPOpeningTagSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="67268b1211f647ecffc05e6c4524b101" name="src/Standards/Generic/Sniffs/PHP/ClosingPHPTagSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="fe3cc609960f8b31dec098324038f91f" name="src/Standards/Generic/Sniffs/PHP/DeprecatedFunctionsSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="a0aac902a7b60fcaa5972a33d30e6d71" name="src/Standards/Generic/Sniffs/PHP/DisallowRequestSuperglobalSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="25976988ba6e4e0411da85c30b5a28af" name="src/Standards/Generic/Sniffs/PHP/DisallowShortOpenTagSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="612f452268f223f1c94f4cdfd12731b6" name="src/Standards/Generic/Sniffs/PHP/DisallowAlternativePHPTagsSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="cefb9ba4a794fc5e2e9c79949e352985" name="src/Standards/Generic/Sniffs/PHP/DiscourageGotoSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="e1268ef25a823029b608f978be44de45" name="src/Standards/Generic/Sniffs/PHP/ForbiddenFunctionsSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="2eef5c305274f98ba4cad4d69b7efe83" name="src/Standards/Generic/Sniffs/PHP/LowerCaseConstantSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="a969f9084a4bc72002c710411701d247" name="src/Standards/Generic/Sniffs/PHP/LowerCaseKeywordSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="b82e3a7c4757c4c251e52446bbc7a89d" name="src/Standards/Generic/Sniffs/PHP/LowerCaseTypeSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="54cd94a2e69301b03b511f3d4e1866fe" name="src/Standards/Generic/Sniffs/PHP/NoSilencedErrorsSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="221462ce9409a31a0a87d345e66f5c5a" name="src/Standards/Generic/Sniffs/PHP/RequireStrictTypesSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="5c3348a48f554c549b16dcb2f70415ca" name="src/Standards/Generic/Sniffs/PHP/SAPIUsageSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="2f673bd60f4500996af5630b44b79474" name="src/Standards/Generic/Sniffs/PHP/SyntaxSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="e7858401757b87ed0e099a8074e3bd06" name="src/Standards/Generic/Sniffs/PHP/UpperCaseConstantSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="b33dec988a969e11d5eddcc54ce9d3f6" name="src/Standards/Generic/Sniffs/Strings/UnnecessaryStringConcatSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="9c7286be999a6d07810cd8021dc1d961" name="src/Standards/Generic/Sniffs/VersionControl/GitMergeConflictSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="e28cf8206ea208e52ce94420a46e3853" name="src/Standards/Generic/Sniffs/VersionControl/SubversionPropertiesSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="fa35ddb8e23752ed2315a1821493382b" name="src/Standards/Generic/Sniffs/WhiteSpace/ArbitraryParenthesesSpacingSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="a2043e1de71f46cf643e4c13a2f9d8fb" name="src/Standards/Generic/Sniffs/WhiteSpace/DisallowSpaceIndentSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="8dc33c07cb40168fd6f6c71d5f78679b" name="src/Standards/Generic/Sniffs/WhiteSpace/DisallowTabIndentSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="399d09c74c621f553e2a159b8fa5c650" name="src/Standards/Generic/Sniffs/WhiteSpace/IncrementDecrementSpacingSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="9bf7b52a63f881ea3c5bce868abd4b8f" name="src/Standards/Generic/Sniffs/WhiteSpace/LanguageConstructSpacingSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="45a23f7854406ca905861477cc3bd1eb" name="src/Standards/Generic/Sniffs/WhiteSpace/ScopeIndentSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="759c8c8f213f6b4a660ee1b2c8c92014" name="src/Standards/Generic/Sniffs/WhiteSpace/SpreadOperatorSpacingAfterSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="558674345395fae6dc8fc1a0766d7e8c" name="src/Standards/Generic/Tests/Arrays/ArrayIndentUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="f871f4bdd2735e2d0ddf0fd7bc1cf496" name="src/Standards/Generic/Tests/Arrays/ArrayIndentUnitTest.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="c616d1875977849c5dc53ca396b6c122" name="src/Standards/Generic/Tests/Arrays/ArrayIndentUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="10d7d9ce2b7c7534280e5fc85286e163" name="src/Standards/Generic/Tests/Arrays/DisallowLongArraySyntaxUnitTest.1.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="c6d75c8a9f27c1a5d3d3c3ecfb7bb11a" name="src/Standards/Generic/Tests/Arrays/DisallowLongArraySyntaxUnitTest.1.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="fe3ee440c4cd584724d6353e48402671" name="src/Standards/Generic/Tests/Arrays/DisallowLongArraySyntaxUnitTest.2.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="0b08cc7521e33f85f7b8831d2b01de7e" name="src/Standards/Generic/Tests/Arrays/DisallowLongArraySyntaxUnitTest.2.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="fb9bc7376352bf88c623052b407e3b48" name="src/Standards/Generic/Tests/Arrays/DisallowLongArraySyntaxUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="08972a2104ae1d187b1ff74c638d72ab" name="src/Standards/Generic/Tests/Arrays/DisallowShortArraySyntaxUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="74ae0e3d8c6c0c9eb292e74145d4dc5c" name="src/Standards/Generic/Tests/Arrays/DisallowShortArraySyntaxUnitTest.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="b567646659a8faa1d18187af6ea778fe" name="src/Standards/Generic/Tests/Arrays/DisallowShortArraySyntaxUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="beb1501030fdbfe7637468b878f47284" name="src/Standards/Generic/Tests/Classes/DuplicateClassNameUnitTest.1.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="fa98affac91d30cc96c3235bc70a9a97" name="src/Standards/Generic/Tests/Classes/DuplicateClassNameUnitTest.2.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="2e0f589e2d30dd4325cc536616a2460f" name="src/Standards/Generic/Tests/Classes/DuplicateClassNameUnitTest.3.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="f114e6645580059a6fbc7ed353686d4a" name="src/Standards/Generic/Tests/Classes/DuplicateClassNameUnitTest.4.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="1d4bbe2495ee071974bc185b0893c87d" name="src/Standards/Generic/Tests/Classes/DuplicateClassNameUnitTest.5.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="32a4826c503a05ea90bec8e6e4f48650" name="src/Standards/Generic/Tests/Classes/DuplicateClassNameUnitTest.6.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="9b751e14f6c1162ae81c60c85fad7785" name="src/Standards/Generic/Tests/Classes/DuplicateClassNameUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="a983b828e596d939507f91cf9068b71a" name="src/Standards/Generic/Tests/Classes/OpeningBraceSameLineUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="9c14da780e3c01fb18c1543dec334d5a" name="src/Standards/Generic/Tests/Classes/OpeningBraceSameLineUnitTest.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="670be93f46a002a4ae99ade2aff422c9" name="src/Standards/Generic/Tests/Classes/OpeningBraceSameLineUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="8755a5dbf0b98e72ec36a6b8ce4055ad" name="src/Standards/Generic/Tests/CodeAnalysis/AssignmentInConditionUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="4e13d31954d79ed8f6044a03eb86f37f" name="src/Standards/Generic/Tests/CodeAnalysis/AssignmentInConditionUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="d798d02373e20f9015b1dd6ecd3ba250" name="src/Standards/Generic/Tests/CodeAnalysis/EmptyPHPStatementUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="0a3d32d37705eca227b79dbddb9ef77d" name="src/Standards/Generic/Tests/CodeAnalysis/EmptyPHPStatementUnitTest.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="343b84e19cd2ee25031b63c3bbe9b6e0" name="src/Standards/Generic/Tests/CodeAnalysis/EmptyPHPStatementUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="aad2102f34aa87e1c9d163f4400f5234" name="src/Standards/Generic/Tests/CodeAnalysis/EmptyStatementUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="9764bf6dd2a15d0d23abe76d56b4e396" name="src/Standards/Generic/Tests/CodeAnalysis/EmptyStatementUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="cd250b382988b6d8f3864584cf2eefe4" name="src/Standards/Generic/Tests/CodeAnalysis/ForLoopShouldBeWhileLoopUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="097e54e741f65201bdc6b5860911fc1f" name="src/Standards/Generic/Tests/CodeAnalysis/ForLoopShouldBeWhileLoopUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="d7d4e3e907bc786a44fc6076fd2a2f07" name="src/Standards/Generic/Tests/CodeAnalysis/ForLoopWithTestFunctionCallUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="c50e5a4a4df5b7201a88594e06578a9d" name="src/Standards/Generic/Tests/CodeAnalysis/ForLoopWithTestFunctionCallUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="87db1143c085d7d0f8b4655298be51e3" name="src/Standards/Generic/Tests/CodeAnalysis/JumbledIncrementerUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="27754915ba67e38e1dba75c52be998ab" name="src/Standards/Generic/Tests/CodeAnalysis/JumbledIncrementerUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="f56a715301e26dbbdd34adc065824582" name="src/Standards/Generic/Tests/CodeAnalysis/UnconditionalIfStatementUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="400a5c2b57adaeed25acc0ddc00f8c32" name="src/Standards/Generic/Tests/CodeAnalysis/UnconditionalIfStatementUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="3966ffabf4bf84a051b666712367ed74" name="src/Standards/Generic/Tests/CodeAnalysis/UnnecessaryFinalModifierUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="cfbdda12d24a1bc7a9be0b18cea9821a" name="src/Standards/Generic/Tests/CodeAnalysis/UnnecessaryFinalModifierUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="b562216cf657a7f71fb458586ec175f3" name="src/Standards/Generic/Tests/CodeAnalysis/UnusedFunctionParameterUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="59a8d506abdd3f2df8fda5a7a43da001" name="src/Standards/Generic/Tests/CodeAnalysis/UnusedFunctionParameterUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="4ac4e65167bbf6e7009751e652d9e8ec" name="src/Standards/Generic/Tests/CodeAnalysis/UselessOverridingMethodUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="1701aef10e11a65ef4bf5e2e4a4ea6e1" name="src/Standards/Generic/Tests/CodeAnalysis/UselessOverridingMethodUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="565aeff6bc5ab7eb5777859a378a1ea4" name="src/Standards/Generic/Tests/Commenting/DocCommentUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="8e8133e846781eaef1339986ada89cc6" name="src/Standards/Generic/Tests/Commenting/DocCommentUnitTest.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="3d5371b0721dd2ec3f9202c47b0526ed" name="src/Standards/Generic/Tests/Commenting/DocCommentUnitTest.js" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="b3da82974103b3e8f47b214e7f173c50" name="src/Standards/Generic/Tests/Commenting/DocCommentUnitTest.js.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="2f55cf60d72cef2e11f338be154ea078" name="src/Standards/Generic/Tests/Commenting/DocCommentUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="7738fcf27869e0fe9e8c6f511e582ec6" name="src/Standards/Generic/Tests/Commenting/FixmeUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="2cfa202f38dc04b877e20042b9f2652b" name="src/Standards/Generic/Tests/Commenting/FixmeUnitTest.js" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="e1aa83d7a6d6f0ee81ba02e8c5f1bc40" name="src/Standards/Generic/Tests/Commenting/FixmeUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="725d85a64b54cd61051a69bcd18d9177" name="src/Standards/Generic/Tests/Commenting/TodoUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="c938880a9402d86f9e9cfd95b3b4f05c" name="src/Standards/Generic/Tests/Commenting/TodoUnitTest.js" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="91d2a986ddb2386f2488f9ed9087318d" name="src/Standards/Generic/Tests/Commenting/TodoUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="b31bd5150ce3c2d6bb9e69313f3c9fba" name="src/Standards/Generic/Tests/ControlStructures/DisallowYodaConditionsUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="214f9cb296fcbe973ba18c49f88ac25e" name="src/Standards/Generic/Tests/ControlStructures/DisallowYodaConditionsUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="d67aeeb1e2e48fa87c568ac8273ee6ab" name="src/Standards/Generic/Tests/ControlStructures/InlineControlStructureUnitTest.1.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="7b158988af0fe2a37cbf0e7eea6170b8" name="src/Standards/Generic/Tests/ControlStructures/InlineControlStructureUnitTest.1.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="1f40d33e75b678bb50049d223745cc5f" name="src/Standards/Generic/Tests/ControlStructures/InlineControlStructureUnitTest.2.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="ace6525f9089201322e48dff2ce612af" name="src/Standards/Generic/Tests/ControlStructures/InlineControlStructureUnitTest.3.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="f943f8239ad6357e229624faac800720" name="src/Standards/Generic/Tests/ControlStructures/InlineControlStructureUnitTest.4.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="a2a9d454f856dcddead24fb23fff81f4" name="src/Standards/Generic/Tests/ControlStructures/InlineControlStructureUnitTest.5.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="ff497f64de94b138f75e709bdca15639" name="src/Standards/Generic/Tests/ControlStructures/InlineControlStructureUnitTest.6.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="8fb8f9fea35010c9ddabeddfe7ed5a83" name="src/Standards/Generic/Tests/ControlStructures/InlineControlStructureUnitTest.7.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="3fe3065101a5790cb470a41b17b54d88" name="src/Standards/Generic/Tests/ControlStructures/InlineControlStructureUnitTest.js" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="e51fd1c20280d379b9e6cec8b323d115" name="src/Standards/Generic/Tests/ControlStructures/InlineControlStructureUnitTest.js.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="aa427d6206cd59f8e12b887c5229c968" name="src/Standards/Generic/Tests/ControlStructures/InlineControlStructureUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="97c4634324dfe22e5c17861afbdb5049" name="src/Standards/Generic/Tests/Debug/ClosureLinterUnitTest.js" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="b86446914019ef7d3c120ae816b3474f" name="src/Standards/Generic/Tests/Debug/ClosureLinterUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="9194c1779a1f92c74a26984e642d3ea3" name="src/Standards/Generic/Tests/Debug/CSSLintUnitTest.css" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="16a0dfdfabcece6d591bf8cf6af8bd48" name="src/Standards/Generic/Tests/Debug/CSSLintUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="32db9953cbc6cda0b5f48516baae561c" name="src/Standards/Generic/Tests/Debug/ESLintUnitTest.js" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="280a8825ba7cd89bea26d812d12b2afd" name="src/Standards/Generic/Tests/Debug/ESLintUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="849fbc28d2a16d9fe3473a3e4f889086" name="src/Standards/Generic/Tests/Debug/JSHintUnitTest.js" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="1b31d524d671d9f4252083a7740ed7dd" name="src/Standards/Generic/Tests/Debug/JSHintUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="957d5b81d1a30ceb3642fac1e80607ad" name="src/Standards/Generic/Tests/Files/ByteOrderMarkUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="b22cc0439b358b9abf4b023427c5a20b" name="src/Standards/Generic/Tests/Files/ByteOrderMarkUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="a5b74ae516e9d6324a9dd85567a66f69" name="src/Standards/Generic/Tests/Files/EndFileNewlineUnitTest.1.css" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="eda83915096e8d140260fb0c2701f14b" name="src/Standards/Generic/Tests/Files/EndFileNewlineUnitTest.1.js" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="c1744f97606da40062f2695cd0b6b6bf" name="src/Standards/Generic/Tests/Files/EndFileNewlineUnitTest.1.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="d1294f87da9de636f6e615fb2a67730c" name="src/Standards/Generic/Tests/Files/EndFileNewlineUnitTest.2.css" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="f2401fef5f078517a5238cf4aee87bae" name="src/Standards/Generic/Tests/Files/EndFileNewlineUnitTest.2.js" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="53a11a4f5f66fcba7560107dfef6fff9" name="src/Standards/Generic/Tests/Files/EndFileNewlineUnitTest.2.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="29de380ea5fdb1bb9ebbee3ad39f0c52" name="src/Standards/Generic/Tests/Files/EndFileNewlineUnitTest.3.css" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="d1294f87da9de636f6e615fb2a67730c" name="src/Standards/Generic/Tests/Files/EndFileNewlineUnitTest.3.css.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="c660b8f5f06b75f45656db43ac1a75e3" name="src/Standards/Generic/Tests/Files/EndFileNewlineUnitTest.3.js" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="4e3f71129c199a15e4a711ccf9c6e23d" name="src/Standards/Generic/Tests/Files/EndFileNewlineUnitTest.3.js.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="d2ae4c2f14d3f88b23af87f94c780689" name="src/Standards/Generic/Tests/Files/EndFileNewlineUnitTest.3.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="53a11a4f5f66fcba7560107dfef6fff9" name="src/Standards/Generic/Tests/Files/EndFileNewlineUnitTest.3.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="fd396408a7445ef81e4099f2f78f6cca" name="src/Standards/Generic/Tests/Files/EndFileNewlineUnitTest.4.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="30af188f45de08d446cb7dc1dc342609" name="src/Standards/Generic/Tests/Files/EndFileNewlineUnitTest.4.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="30af188f45de08d446cb7dc1dc342609" name="src/Standards/Generic/Tests/Files/EndFileNewlineUnitTest.5.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="b9d08086a3a220dbf43dcff45eeea5ac" name="src/Standards/Generic/Tests/Files/EndFileNewlineUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="a5b74ae516e9d6324a9dd85567a66f69" name="src/Standards/Generic/Tests/Files/EndFileNoNewlineUnitTest.1.css" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="29de380ea5fdb1bb9ebbee3ad39f0c52" name="src/Standards/Generic/Tests/Files/EndFileNoNewlineUnitTest.1.css.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="eda83915096e8d140260fb0c2701f14b" name="src/Standards/Generic/Tests/Files/EndFileNoNewlineUnitTest.1.js" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="fb95a9a486d19135fe4541a1dfafefc9" name="src/Standards/Generic/Tests/Files/EndFileNoNewlineUnitTest.1.js.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="c1744f97606da40062f2695cd0b6b6bf" name="src/Standards/Generic/Tests/Files/EndFileNoNewlineUnitTest.1.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="d2ae4c2f14d3f88b23af87f94c780689" name="src/Standards/Generic/Tests/Files/EndFileNoNewlineUnitTest.1.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="d1294f87da9de636f6e615fb2a67730c" name="src/Standards/Generic/Tests/Files/EndFileNoNewlineUnitTest.2.css" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="29de380ea5fdb1bb9ebbee3ad39f0c52" name="src/Standards/Generic/Tests/Files/EndFileNoNewlineUnitTest.2.css.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="f2401fef5f078517a5238cf4aee87bae" name="src/Standards/Generic/Tests/Files/EndFileNoNewlineUnitTest.2.js" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="fb95a9a486d19135fe4541a1dfafefc9" name="src/Standards/Generic/Tests/Files/EndFileNoNewlineUnitTest.2.js.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="70abec0a06baabebe2e8b19151494828" name="src/Standards/Generic/Tests/Files/EndFileNoNewlineUnitTest.2.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="69f07df4908e815525c9c4ec00e6a18f" name="src/Standards/Generic/Tests/Files/EndFileNoNewlineUnitTest.2.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="29de380ea5fdb1bb9ebbee3ad39f0c52" name="src/Standards/Generic/Tests/Files/EndFileNoNewlineUnitTest.3.css" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="c660b8f5f06b75f45656db43ac1a75e3" name="src/Standards/Generic/Tests/Files/EndFileNoNewlineUnitTest.3.js" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="d2ae4c2f14d3f88b23af87f94c780689" name="src/Standards/Generic/Tests/Files/EndFileNoNewlineUnitTest.3.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="69f07df4908e815525c9c4ec00e6a18f" name="src/Standards/Generic/Tests/Files/EndFileNoNewlineUnitTest.4.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="fd396408a7445ef81e4099f2f78f6cca" name="src/Standards/Generic/Tests/Files/EndFileNoNewlineUnitTest.5.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="30af188f45de08d446cb7dc1dc342609" name="src/Standards/Generic/Tests/Files/EndFileNoNewlineUnitTest.6.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="fd396408a7445ef81e4099f2f78f6cca" name="src/Standards/Generic/Tests/Files/EndFileNoNewlineUnitTest.6.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="017eccdb35eb14f299e91fab57db2359" name="src/Standards/Generic/Tests/Files/EndFileNoNewlineUnitTest.7.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="448cfd8cfc9700055f39dec030cc38a3" name="src/Standards/Generic/Tests/Files/EndFileNoNewlineUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="ce407ff5715c837d02b1aba7975bf512" name="src/Standards/Generic/Tests/Files/ExecutableFileUnitTest.1.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="ce407ff5715c837d02b1aba7975bf512" name="src/Standards/Generic/Tests/Files/ExecutableFileUnitTest.2.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="269f1a187852d37be46d643eeb04a0f9" name="src/Standards/Generic/Tests/Files/ExecutableFileUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="c1744f97606da40062f2695cd0b6b6bf" name="src/Standards/Generic/Tests/Files/InlineHTMLUnitTest.1.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="70abec0a06baabebe2e8b19151494828" name="src/Standards/Generic/Tests/Files/InlineHTMLUnitTest.2.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="2dfcec73ad7448f097136726290efdf9" name="src/Standards/Generic/Tests/Files/InlineHTMLUnitTest.3.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="a2b80dd6e56bba40735b42a1c91431d8" name="src/Standards/Generic/Tests/Files/InlineHTMLUnitTest.4.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="2a2f357e442cdf0814bc7fa193a58f1f" name="src/Standards/Generic/Tests/Files/InlineHTMLUnitTest.5.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="64a39e496d8734c07a6549d532e42c07" name="src/Standards/Generic/Tests/Files/InlineHTMLUnitTest.6.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="6692af1930477d42edfc104684cd8d05" name="src/Standards/Generic/Tests/Files/InlineHTMLUnitTest.7.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="73ea02a0b7c5ad5ebc81868124b07f47" name="src/Standards/Generic/Tests/Files/InlineHTMLUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="cc370bc1ef78b1669e47bf1666703ca7" name="src/Standards/Generic/Tests/Files/LineEndingsUnitTest.css" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="a397e94b40f291166956ab7b3ca3ad70" name="src/Standards/Generic/Tests/Files/LineEndingsUnitTest.css.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="7d41c8f61e01e58b54b44ed7067230b8" name="src/Standards/Generic/Tests/Files/LineEndingsUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="c7396fcab93ceb7251fac5cce33946ad" name="src/Standards/Generic/Tests/Files/LineEndingsUnitTest.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="8810f939a03bd3f8b37d1bc750a98297" name="src/Standards/Generic/Tests/Files/LineEndingsUnitTest.js" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="daffce702eba0b9b916ac21f74cfe4df" name="src/Standards/Generic/Tests/Files/LineEndingsUnitTest.js.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="ec7fe354d1338f95fc9974c8b479ae7d" name="src/Standards/Generic/Tests/Files/LineEndingsUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="590e3356f19e7cd29866c616eaf86b9a" name="src/Standards/Generic/Tests/Files/LineLengthUnitTest.1.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="8a9d05c2e6069c7a15ac46acb34952a0" name="src/Standards/Generic/Tests/Files/LineLengthUnitTest.2.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="8f27213594b509b60e912d365d614c4f" name="src/Standards/Generic/Tests/Files/LineLengthUnitTest.3.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="b6e34dca7e299d8a837024c8f0257261" name="src/Standards/Generic/Tests/Files/LineLengthUnitTest.4.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="7d58dfa5ed9a37dd25a6154009de80bb" name="src/Standards/Generic/Tests/Files/LineLengthUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="587ea91a0de920abca377c34fde76be0" name="src/Standards/Generic/Tests/Files/LowercasedFilenameUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="22bdbc190fd5901da0a88ab60ecc2d34" name="src/Standards/Generic/Tests/Files/LowercasedFilenameUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="6aa93b86087f0a3b7c511d814425a7e9" name="src/Standards/Generic/Tests/Files/OneClassPerFileUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="36d52c55046376afa9fb1a2a4745c728" name="src/Standards/Generic/Tests/Files/OneClassPerFileUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="a32a2239c59c442b4057a4b57b0c8c48" name="src/Standards/Generic/Tests/Files/OneInterfacePerFileUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="eb061dda8f9a8dae1d6ca0a78b03a9ca" name="src/Standards/Generic/Tests/Files/OneInterfacePerFileUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="d034146c8214063980ab9884959faf08" name="src/Standards/Generic/Tests/Files/OneObjectStructurePerFileUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="37b0ea9274de2fc436a36f8064b22d05" name="src/Standards/Generic/Tests/Files/OneObjectStructurePerFileUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="7a755764c9d1f9b54a2b7840101403df" name="src/Standards/Generic/Tests/Files/OneTraitPerFileUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="41b8b5b78c2b5ad54847eb359124afc6" name="src/Standards/Generic/Tests/Files/OneTraitPerFileUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="2d3deda26ee79c5974c620da273d7138" name="src/Standards/Generic/Tests/Formatting/DisallowMultipleStatementsUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="4889e71a366bf7264e527364c74d197f" name="src/Standards/Generic/Tests/Formatting/DisallowMultipleStatementsUnitTest.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="969e456a09e322c76094f1b2f19e343c" name="src/Standards/Generic/Tests/Formatting/DisallowMultipleStatementsUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="45af1d3be797c5943ab3989cd1d330ac" name="src/Standards/Generic/Tests/Formatting/MultipleStatementAlignmentUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="b99bdc9efe8b260734081111e910c527" name="src/Standards/Generic/Tests/Formatting/MultipleStatementAlignmentUnitTest.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="1d360239f6969bb933f91c5418c29cea" name="src/Standards/Generic/Tests/Formatting/MultipleStatementAlignmentUnitTest.js" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="a79321863d40b40ac6ce495f4ec1f6a9" name="src/Standards/Generic/Tests/Formatting/MultipleStatementAlignmentUnitTest.js.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="df35e28238f909c04d0257889e8374af" name="src/Standards/Generic/Tests/Formatting/MultipleStatementAlignmentUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="5760171ed253ed7a6909dd7db2fb6f05" name="src/Standards/Generic/Tests/Formatting/NoSpaceAfterCastUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="616ec08798c490a52b5b171dcf624f07" name="src/Standards/Generic/Tests/Formatting/NoSpaceAfterCastUnitTest.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="9bcbbdaa766038b3be46c502bc8d93bd" name="src/Standards/Generic/Tests/Formatting/NoSpaceAfterCastUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="3e900855e466b1d56f8481e0b6732796" name="src/Standards/Generic/Tests/Formatting/SpaceAfterCastUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="dfd9c01ea3efc6782000ba773d157688" name="src/Standards/Generic/Tests/Formatting/SpaceAfterCastUnitTest.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="1310c3a7cceb3379affd5d21675a82df" name="src/Standards/Generic/Tests/Formatting/SpaceAfterCastUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="b6324ab656039e532d46ad1d42cbac6f" name="src/Standards/Generic/Tests/Formatting/SpaceAfterNotUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="f25362cd2e84d7ce446ae84b1a3f455c" name="src/Standards/Generic/Tests/Formatting/SpaceAfterNotUnitTest.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="b3fd9e5d13a6194ecf535f0ec79d3b24" name="src/Standards/Generic/Tests/Formatting/SpaceAfterNotUnitTest.js" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="dea6227d93ac802459bf7b53bbd8292c" name="src/Standards/Generic/Tests/Formatting/SpaceAfterNotUnitTest.js.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="a5069c84938e8d25c78f54085b48f0f1" name="src/Standards/Generic/Tests/Formatting/SpaceAfterNotUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="986dc73ba4f10c5e89b6776dce5dcea1" name="src/Standards/Generic/Tests/Formatting/SpaceBeforeCastUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="27e360563ffc7e743bc205369b9a7b40" name="src/Standards/Generic/Tests/Formatting/SpaceBeforeCastUnitTest.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="3434191893f9fd51c052c502628e38ee" name="src/Standards/Generic/Tests/Formatting/SpaceBeforeCastUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="d40c9638f5748a42d479c04ad9e9cc0a" name="src/Standards/Generic/Tests/Functions/CallTimePassByReferenceUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="b78b366988520472ba3b7a199a490fe1" name="src/Standards/Generic/Tests/Functions/CallTimePassByReferenceUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="acecf87ced0236da2256e7557b8db725" name="src/Standards/Generic/Tests/Functions/FunctionCallArgumentSpacingUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="30339a7d136b9bc8c57bde9b30fafb74" name="src/Standards/Generic/Tests/Functions/FunctionCallArgumentSpacingUnitTest.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="755df101b27c3919f961a6b974da8eff" name="src/Standards/Generic/Tests/Functions/FunctionCallArgumentSpacingUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="23554d039f7e6cdbf43a1fee37797950" name="src/Standards/Generic/Tests/Functions/OpeningFunctionBraceBsdAllmanUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="5139589c63df040211687c06ed0ee6e0" name="src/Standards/Generic/Tests/Functions/OpeningFunctionBraceBsdAllmanUnitTest.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="32614cb49cc4d28028f9b84a5d759c5e" name="src/Standards/Generic/Tests/Functions/OpeningFunctionBraceBsdAllmanUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="a3f8aa614b6867bc5a3e77f11b4d6485" name="src/Standards/Generic/Tests/Functions/OpeningFunctionBraceKernighanRitchieUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="f52fd21b31d3ce9b1c51838b9b06fd47" name="src/Standards/Generic/Tests/Functions/OpeningFunctionBraceKernighanRitchieUnitTest.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="1957cc2427e022b731a4531592c8162e" name="src/Standards/Generic/Tests/Functions/OpeningFunctionBraceKernighanRitchieUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="947003cc73d2f8e3ac400a3fbe71a6e0" name="src/Standards/Generic/Tests/Metrics/CyclomaticComplexityUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="f0437eae83d2efcd28fd226997a848d2" name="src/Standards/Generic/Tests/Metrics/CyclomaticComplexityUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="1296e80dda4168b3c2e874afcd62bca2" name="src/Standards/Generic/Tests/Metrics/NestingLevelUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="ee04eb09a1e0f1f1b64980684dedc0c6" name="src/Standards/Generic/Tests/Metrics/NestingLevelUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="05646ce663938942d04dffc8bd7e0869" name="src/Standards/Generic/Tests/NamingConventions/CamelCapsFunctionNameUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="04b96df24668b11d491b95088702d97a" name="src/Standards/Generic/Tests/NamingConventions/CamelCapsFunctionNameUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="6e63a8a1d3ac34f52943de3572b7826b" name="src/Standards/Generic/Tests/NamingConventions/ConstructorNameUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="ab11f7556fdcebc5d9e7f793dce0b63a" name="src/Standards/Generic/Tests/NamingConventions/ConstructorNameUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="73497bc7172760b4ac9e8e1c4df2b415" name="src/Standards/Generic/Tests/NamingConventions/UpperCaseConstantNameUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="dc8cf55e9687be8b8f627c1e2395fd79" name="src/Standards/Generic/Tests/NamingConventions/UpperCaseConstantNameUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="cf65fedeaad671be63498e907d81c94f" name="src/Standards/Generic/Tests/PHP/BacktickOperatorUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="593d9104395d0b14669413d5baf91978" name="src/Standards/Generic/Tests/PHP/BacktickOperatorUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="0a2172b0b6d08519bf76b3ba94a5bd23" name="src/Standards/Generic/Tests/PHP/CharacterBeforePHPOpeningTagUnitTest.1.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="5b21e289b66801dd438ac01f585207ef" name="src/Standards/Generic/Tests/PHP/CharacterBeforePHPOpeningTagUnitTest.2.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="15bf897f96acb3ed1a94f17457a21655" name="src/Standards/Generic/Tests/PHP/CharacterBeforePHPOpeningTagUnitTest.3.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="334bb28f95be5c2d79aa77a044dafd2d" name="src/Standards/Generic/Tests/PHP/CharacterBeforePHPOpeningTagUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="01431a2e42cd307134826e8c0c8e0838" name="src/Standards/Generic/Tests/PHP/ClosingPHPTagUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="ffecf297c937303b2aa02c858a7da440" name="src/Standards/Generic/Tests/PHP/ClosingPHPTagUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="f412799f2a097089c454f099f4b8560a" name="src/Standards/Generic/Tests/PHP/DeprecatedFunctionsUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="6d5bbf496636bbe41667d3e2bd4243b0" name="src/Standards/Generic/Tests/PHP/DeprecatedFunctionsUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="a2db6b04de7d93bc6d7de8bd2fc0bf16" name="src/Standards/Generic/Tests/PHP/DisallowAlternativePHPTagsUnitTest.1.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="eb2685588b238b98107f60da2de6a122" name="src/Standards/Generic/Tests/PHP/DisallowAlternativePHPTagsUnitTest.1.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="54cda58729bbcb8d97ae3d10cf44b0b3" name="src/Standards/Generic/Tests/PHP/DisallowAlternativePHPTagsUnitTest.2.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="b3d69c67ca6f362d0cda8b8a49a14c08" name="src/Standards/Generic/Tests/PHP/DisallowAlternativePHPTagsUnitTest.2.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="b8482a5fbdfbb91eaa3fe1410195af91" name="src/Standards/Generic/Tests/PHP/DisallowAlternativePHPTagsUnitTest.3.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="f1defa515c437812e48f073262c3f2e6" name="src/Standards/Generic/Tests/PHP/DisallowAlternativePHPTagsUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="86270c5a56c9df170c29d15ab087c745" name="src/Standards/Generic/Tests/PHP/DisallowRequestSuperglobalUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="47429d26429b262cfde550a676d3acaf" name="src/Standards/Generic/Tests/PHP/DisallowRequestSuperglobalUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="d76bcdc0f90345e7ebefe2e625db48df" name="src/Standards/Generic/Tests/PHP/DisallowShortOpenTagUnitTest.1.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="1f92350a578d02c5a09c20d519492548" name="src/Standards/Generic/Tests/PHP/DisallowShortOpenTagUnitTest.1.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="343be267187f5b8d5d0170dd84198985" name="src/Standards/Generic/Tests/PHP/DisallowShortOpenTagUnitTest.2.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="b8bff33371ec6ff85f99a80cfe277343" name="src/Standards/Generic/Tests/PHP/DisallowShortOpenTagUnitTest.2.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="94e3138b2e36ff87d0d1d9281d3e7d36" name="src/Standards/Generic/Tests/PHP/DisallowShortOpenTagUnitTest.3.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="0feb37085cddaa76fc41284e324050d4" name="src/Standards/Generic/Tests/PHP/DisallowShortOpenTagUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="25c036ad8533434c61c473ae24628cbd" name="src/Standards/Generic/Tests/PHP/DiscourageGotoUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="14b7dbf1d13c398b0793abdff8ac3515" name="src/Standards/Generic/Tests/PHP/DiscourageGotoUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="950b49066832d9c5ac9d5c72b44ef792" name="src/Standards/Generic/Tests/PHP/ForbiddenFunctionsUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="512d269330a85ed0665c409da6509e99" name="src/Standards/Generic/Tests/PHP/ForbiddenFunctionsUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="1ed1455985964e91fabddd2a8f45661a" name="src/Standards/Generic/Tests/PHP/LowerCaseConstantUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="b71301e6dcd467a5155b1d9da83c241a" name="src/Standards/Generic/Tests/PHP/LowerCaseConstantUnitTest.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="ec7d1a4c0a7f5b7f2d7824c79fe162c4" name="src/Standards/Generic/Tests/PHP/LowerCaseConstantUnitTest.js" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="facc5d0edc7a8991ce471cc422185f7d" name="src/Standards/Generic/Tests/PHP/LowerCaseConstantUnitTest.js.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="ad2d40ae77d056ac44727b3c8f648daf" name="src/Standards/Generic/Tests/PHP/LowerCaseConstantUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="5a37a88812b96377f953066924393458" name="src/Standards/Generic/Tests/PHP/LowerCaseKeywordUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="cb9bc989aebfbc2f4b95f837c3d8c02c" name="src/Standards/Generic/Tests/PHP/LowerCaseKeywordUnitTest.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="ef8f41a530d4d85935cf2c90ca8d42f7" name="src/Standards/Generic/Tests/PHP/LowerCaseKeywordUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="a5b19895551fdc7b96fc9660d729522b" name="src/Standards/Generic/Tests/PHP/LowerCaseTypeUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="8752c9cb1e6a107652fb534aaedc6733" name="src/Standards/Generic/Tests/PHP/LowerCaseTypeUnitTest.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="bc33a025a401e96ae0e3e710c8cbccd3" name="src/Standards/Generic/Tests/PHP/LowerCaseTypeUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="88e8d3f08bc4df038c1512429f89f336" name="src/Standards/Generic/Tests/PHP/NoSilencedErrorsUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="ef897724cf668eb89d014df29348ba8b" name="src/Standards/Generic/Tests/PHP/NoSilencedErrorsUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="ffc782e38d5a981321b39960797963ca" name="src/Standards/Generic/Tests/PHP/RequireStrictTypesUnitTest.1.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="c07da911911e397b698fbf438a400df1" name="src/Standards/Generic/Tests/PHP/RequireStrictTypesUnitTest.2.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="1f33b9a0858b3b68fbdf468d5ee79417" name="src/Standards/Generic/Tests/PHP/RequireStrictTypesUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="cb929e0bea96eb35064dd63e8d69b51b" name="src/Standards/Generic/Tests/PHP/SAPIUsageUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="58083a256427218cc0fe7ab799e67b58" name="src/Standards/Generic/Tests/PHP/SAPIUsageUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="aa552990b2df89147e45da3b44ebc37d" name="src/Standards/Generic/Tests/PHP/SyntaxUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="293fb4b3f63db4c91b9254c81091ed12" name="src/Standards/Generic/Tests/PHP/SyntaxUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="82e51478fce7b7c00b0857e59aa8a0a6" name="src/Standards/Generic/Tests/PHP/UpperCaseConstantUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="883c4a4c6719ac8f1ec3e7421f602e6f" name="src/Standards/Generic/Tests/PHP/UpperCaseConstantUnitTest.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="782ebc5d132469c80cc777df935cb957" name="src/Standards/Generic/Tests/PHP/UpperCaseConstantUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="d5fd56deb2ca1973d3ea98e226d0c47d" name="src/Standards/Generic/Tests/Strings/UnnecessaryStringConcatUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="c50a5bc4492d7df5404f7394e68c8992" name="src/Standards/Generic/Tests/Strings/UnnecessaryStringConcatUnitTest.js" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="2a8d8e4d75f228cf5ff99e839f958cf0" name="src/Standards/Generic/Tests/Strings/UnnecessaryStringConcatUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="d63f04d1b7e56a464a0fe07cf2af1969" name="src/Standards/Generic/Tests/VersionControl/GitMergeConflictUnitTest.1.css" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="6bf2fcdc13379c926bb6203b28996ba7" name="src/Standards/Generic/Tests/VersionControl/GitMergeConflictUnitTest.1.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="7f4c6f5b93be15718f047c45676f950b" name="src/Standards/Generic/Tests/VersionControl/GitMergeConflictUnitTest.2.css" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="79d8a657959d6aa36b60bf390b0ad90f" name="src/Standards/Generic/Tests/VersionControl/GitMergeConflictUnitTest.2.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="05da8d66bc458cc720878be73b89b77b" name="src/Standards/Generic/Tests/VersionControl/GitMergeConflictUnitTest.3.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="2cfcb0b56b8cd62160442c79de6c6170" name="src/Standards/Generic/Tests/VersionControl/GitMergeConflictUnitTest.4.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="0961a82c39352427f2b308fbe708c71e" name="src/Standards/Generic/Tests/VersionControl/GitMergeConflictUnitTest.5.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="f47ca5118928dffadaa8e293b30fcb7d" name="src/Standards/Generic/Tests/VersionControl/GitMergeConflictUnitTest.6.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="7ba2a16c0837cc222e901bc375218de0" name="src/Standards/Generic/Tests/VersionControl/GitMergeConflictUnitTest.js" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="ea122eef8ff42eb7a6ba2acbdcd173b5" name="src/Standards/Generic/Tests/VersionControl/GitMergeConflictUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="b2333614286404cb7ac69cc9505ce620" name="src/Standards/Generic/Tests/VersionControl/SubversionPropertiesUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="acc3c52a1c722b9a0bb0fbf774089755" name="src/Standards/Generic/Tests/VersionControl/SubversionPropertiesUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="95f42bc138195d2fe3a18f976b4990a9" name="src/Standards/Generic/Tests/WhiteSpace/ArbitraryParenthesesSpacingUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="2f5da65e9a04fcf51e1b11dc792d4d8c" name="src/Standards/Generic/Tests/WhiteSpace/ArbitraryParenthesesSpacingUnitTest.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="b0d3600966e8b6f0c8b1f83bd3585f1e" name="src/Standards/Generic/Tests/WhiteSpace/ArbitraryParenthesesSpacingUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="53a55c1187693a4eed5be0492ff715a6" name="src/Standards/Generic/Tests/WhiteSpace/DisallowSpaceIndentUnitTest.css" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="0df0e4261a07c00f1a9fd2dacbefb434" name="src/Standards/Generic/Tests/WhiteSpace/DisallowSpaceIndentUnitTest.css.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="a3343118ec8c433c607a7c1075da8489" name="src/Standards/Generic/Tests/WhiteSpace/DisallowSpaceIndentUnitTest.1.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="aa84fa4b9ae3c2b75b3444c9c0d5657d" name="src/Standards/Generic/Tests/WhiteSpace/DisallowSpaceIndentUnitTest.1.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="a3343118ec8c433c607a7c1075da8489" name="src/Standards/Generic/Tests/WhiteSpace/DisallowSpaceIndentUnitTest.2.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="aa84fa4b9ae3c2b75b3444c9c0d5657d" name="src/Standards/Generic/Tests/WhiteSpace/DisallowSpaceIndentUnitTest.2.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="6e8c97c6dbca6487307a777ee40aaa27" name="src/Standards/Generic/Tests/WhiteSpace/DisallowSpaceIndentUnitTest.js" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="5faa4e830c847a23b5a38121031c463d" name="src/Standards/Generic/Tests/WhiteSpace/DisallowSpaceIndentUnitTest.js.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="baa9675328eabafdaed8e0631e630be7" name="src/Standards/Generic/Tests/WhiteSpace/DisallowSpaceIndentUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="cae3621b9e3991d12c002173e78f5040" name="src/Standards/Generic/Tests/WhiteSpace/DisallowTabIndentUnitTest.css" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="c242e0dff82976f9546808535f380de6" name="src/Standards/Generic/Tests/WhiteSpace/DisallowTabIndentUnitTest.css.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="fd279f1e646f9df6f54f9483f5b3f5c9" name="src/Standards/Generic/Tests/WhiteSpace/DisallowTabIndentUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="e8943efedfff20b7c4acf7d736b571e1" name="src/Standards/Generic/Tests/WhiteSpace/DisallowTabIndentUnitTest.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="862c06f6daa9b363ee4c8445f0008896" name="src/Standards/Generic/Tests/WhiteSpace/DisallowTabIndentUnitTest.js" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="84e8c7267e64c330a587c28a7097ef7a" name="src/Standards/Generic/Tests/WhiteSpace/DisallowTabIndentUnitTest.js.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="cd7335dda1acc4585e0b0d69e4eb5a2a" name="src/Standards/Generic/Tests/WhiteSpace/DisallowTabIndentUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="7152057dbe8e1915ee1ff4a48bdbb6df" name="src/Standards/Generic/Tests/WhiteSpace/IncrementDecrementSpacingUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="c770fd86f19b952f7f937c2a8b65f24a" name="src/Standards/Generic/Tests/WhiteSpace/IncrementDecrementSpacingUnitTest.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="2684a90b0efcc6dd90cee26828b4bba8" name="src/Standards/Generic/Tests/WhiteSpace/IncrementDecrementSpacingUnitTest.js" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="8c142de47a180efa6b934bb6672134a2" name="src/Standards/Generic/Tests/WhiteSpace/IncrementDecrementSpacingUnitTest.js.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="7f0cdbbc1946cae115cc77302cabfdd4" name="src/Standards/Generic/Tests/WhiteSpace/IncrementDecrementSpacingUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="89fd3042340f3fc9d1f2dea976276cc4" name="src/Standards/Generic/Tests/WhiteSpace/LanguageConstructSpacingUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="8eec8bd9369d7451c8073b6bf08c29ce" name="src/Standards/Generic/Tests/WhiteSpace/LanguageConstructSpacingUnitTest.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="92cbc75bef40c2eae38e8f02e7cf0258" name="src/Standards/Generic/Tests/WhiteSpace/LanguageConstructSpacingUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="7765a61ce366995c3579444cefb09d7d" name="src/Standards/Generic/Tests/WhiteSpace/ScopeIndentUnitTest.1.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="92a369b38d9cfa09db10003b0cb0efcd" name="src/Standards/Generic/Tests/WhiteSpace/ScopeIndentUnitTest.1.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="1fe630099f0162d17da7cc039f630607" name="src/Standards/Generic/Tests/WhiteSpace/ScopeIndentUnitTest.1.js" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="b2361bac2a699b5792081d314c98fe83" name="src/Standards/Generic/Tests/WhiteSpace/ScopeIndentUnitTest.1.js.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="65c05cc5bb355700ce146db7e0770aaf" name="src/Standards/Generic/Tests/WhiteSpace/ScopeIndentUnitTest.2.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="f8422c5c16d84b97d5c891191290d99c" name="src/Standards/Generic/Tests/WhiteSpace/ScopeIndentUnitTest.2.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="2457cf1356c05ea4a377a00b89832a31" name="src/Standards/Generic/Tests/WhiteSpace/ScopeIndentUnitTest.3.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="6da856d88326c856bfb6d24bc98b72ca" name="src/Standards/Generic/Tests/WhiteSpace/ScopeIndentUnitTest.3.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="7a6dad5373f40e51b907273d4898aa1d" name="src/Standards/Generic/Tests/WhiteSpace/ScopeIndentUnitTest.4.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="e2825e557caa91e035f4e881e7a7c8bd" name="src/Standards/Generic/Tests/WhiteSpace/ScopeIndentUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="37efe01cbf44a25ba8b344e913219b0c" name="src/Standards/Generic/Tests/WhiteSpace/SpreadOperatorSpacingAfterUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="193fbdec1b6cf951892989e26a0c1523" name="src/Standards/Generic/Tests/WhiteSpace/SpreadOperatorSpacingAfterUnitTest.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="0cb85ae975f80fa40742f86d7d5b8b0f" name="src/Standards/Generic/Tests/WhiteSpace/SpreadOperatorSpacingAfterUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="1a2ed78e2951344e21687902bf845989" name="src/Standards/Generic/ruleset.xml" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="5b3351cc74f8be7a56597fce07b96d91" name="src/Standards/MySource/Sniffs/Channels/DisallowSelfActionsSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="fa44ece40517a91b7450a255b50f0085" name="src/Standards/MySource/Sniffs/Channels/IncludeOwnSystemSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="d96623cba8484fc7fe3cdc7f3049b50f" name="src/Standards/MySource/Sniffs/Channels/IncludeSystemSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="b53f497237b92d8509ed99ca7c2acf33" name="src/Standards/MySource/Sniffs/Channels/UnusedSystemSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="075f5d3b7d719511ce3b20ea4197b662" name="src/Standards/MySource/Sniffs/Commenting/FunctionCommentSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="425ae4e6603f47278171af8d755e8c3f" name="src/Standards/MySource/Sniffs/CSS/BrowserSpecificStylesSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="891b85d430de2de26c29bca43326ee66" name="src/Standards/MySource/Sniffs/Debug/DebugCodeSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="039df2e8bb72a56de0ff82bdbc27a60a" name="src/Standards/MySource/Sniffs/Debug/FirebugConsoleSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="b5c6e3dbda9557f17d64439eb82f72bf" name="src/Standards/MySource/Sniffs/Objects/AssignThisSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="3898da1093e72f54be2eb1dc224d8a66" name="src/Standards/MySource/Sniffs/Objects/CreateWidgetTypeCallbackSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="af2066c0463d6dc3dcad54d6fc73eebd" name="src/Standards/MySource/Sniffs/Objects/DisallowNewWidgetSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="5fcb67988b8d5a81251924791618d8b4" name="src/Standards/MySource/Sniffs/PHP/AjaxNullComparisonSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="18fb8b4ae7012829c83cf579e23536f5" name="src/Standards/MySource/Sniffs/PHP/EvalObjectFactorySniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="0c4895a942d45d079889663d07d0239c" name="src/Standards/MySource/Sniffs/PHP/GetRequestDataSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="67da190a59aedc9cfd877471e0959a72" name="src/Standards/MySource/Sniffs/PHP/ReturnFunctionValueSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="0ae53fa7f78299f6963547b6d6cdb641" name="src/Standards/MySource/Sniffs/Strings/JoinStringsSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="75a6a459609635d424ea1da60697c9c6" name="src/Standards/MySource/Tests/Channels/DisallowSelfActionsUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="48c085590ae645280a1f2ece98503080" name="src/Standards/MySource/Tests/Channels/DisallowSelfActionsUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="72517fbf6ed9e2a78a4716c5aa1366d3" name="src/Standards/MySource/Tests/Channels/IncludeSystemUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="bb103ce6639f4b0f74889fa2f11475dc" name="src/Standards/MySource/Tests/Channels/IncludeSystemUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="5777c88a10d7c05840dca721660a346d" name="src/Standards/MySource/Tests/Channels/UnusedSystemUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="a42ef54e27f9a8559a74a29f1a5edc1b" name="src/Standards/MySource/Tests/Channels/UnusedSystemUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="1363e0955bc3ea517ff86567b8c14e43" name="src/Standards/MySource/Tests/Commenting/FunctionCommentUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="5107a3b076cd80dfd14ed0a23c2debe9" name="src/Standards/MySource/Tests/Commenting/FunctionCommentUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="f95e0fdb7654a664917fd8af0b8e2522" name="src/Standards/MySource/Tests/CSS/BrowserSpecificStylesUnitTest.css" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="8e2c7873beec008ddfd74b88561f30b0" name="src/Standards/MySource/Tests/CSS/BrowserSpecificStylesUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="a7b0b127e2785ce7b8dac5b357c1ec91" name="src/Standards/MySource/Tests/Debug/DebugCodeUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="e3b6c3ed72cf054d2b8478ba05fbef18" name="src/Standards/MySource/Tests/Debug/DebugCodeUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="fe8858695e303e8b3c87415a5603f63f" name="src/Standards/MySource/Tests/Debug/FirebugConsoleUnitTest.js" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="48af52608856a48778cb5862cff3df52" name="src/Standards/MySource/Tests/Debug/FirebugConsoleUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="e8729933b41b396c6f49e1d8cd747f4b" name="src/Standards/MySource/Tests/Objects/AssignThisUnitTest.js" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="4b57d670ebb4c2c27b26c22862bf62e1" name="src/Standards/MySource/Tests/Objects/AssignThisUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="038db501bf7424e8fc2c228a4642aa1e" name="src/Standards/MySource/Tests/Objects/CreateWidgetTypeCallbackUnitTest.js" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="9a6e59c938d531c2ba9e63159f0f254f" name="src/Standards/MySource/Tests/Objects/CreateWidgetTypeCallbackUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="4be85228efb872ef85657f8f1852d352" name="src/Standards/MySource/Tests/Objects/DisallowNewWidgetUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="f1b1f7cc2c01c01f3fd47f6adb924636" name="src/Standards/MySource/Tests/Objects/DisallowNewWidgetUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="04344c253d6d14daeaf8f0eb83b07f59" name="src/Standards/MySource/Tests/PHP/AjaxNullComparisonUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="652240889b9e4c829e82775707ab66ad" name="src/Standards/MySource/Tests/PHP/AjaxNullComparisonUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="17c15eec6d295263533b18f24f1413b9" name="src/Standards/MySource/Tests/PHP/EvalObjectFactoryUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="ebec6b10c0638bb167bd76cd136c2aa5" name="src/Standards/MySource/Tests/PHP/EvalObjectFactoryUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="4c3203fa62b91992e56f0d4fcc3436d9" name="src/Standards/MySource/Tests/PHP/GetRequestDataUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="49d9ca6e6f919d67d03b51d36c9569e2" name="src/Standards/MySource/Tests/PHP/GetRequestDataUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="82098c97ad67c7e68ad9a9d8be950656" name="src/Standards/MySource/Tests/PHP/ReturnFunctionValueUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="fa17a50109fe21058d3745027398a191" name="src/Standards/MySource/Tests/PHP/ReturnFunctionValueUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="91916345902e2029f8cbd2e949a75e2d" name="src/Standards/MySource/Tests/Strings/JoinStringsUnitTest.js" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="19a5f8857d3c0f7cf06ff9726614efa8" name="src/Standards/MySource/Tests/Strings/JoinStringsUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="24e5347e5e0e8fb7a727e3402c9f4741" name="src/Standards/MySource/ruleset.xml" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="164cd0bfba5d5ee4cb9830ae09d623da" name="src/Standards/PEAR/Docs/Classes/ClassDeclarationStandard.xml" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="b557565c04bfcd627ed7752642a24390" name="src/Standards/PEAR/Docs/Commenting/ClassCommentStandard.xml" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="8f30301ab881c174ace42c99a099df37" name="src/Standards/PEAR/Docs/Commenting/FileCommentStandard.xml" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="b48803219478b3548e97777433547c8b" name="src/Standards/PEAR/Docs/Commenting/FunctionCommentStandard.xml" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="116cdb66f41357afea1ccde91bf3a782" name="src/Standards/PEAR/Docs/Commenting/InlineCommentStandard.xml" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="206ad4e5ab7b5ede4deb4ed512a9d8b7" name="src/Standards/PEAR/Docs/ControlStructures/ControlSignatureStandard.xml" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="bcc768189b74dd3d530281c01138a7e9" name="src/Standards/PEAR/Docs/ControlStructures/MultiLineConditionStandard.xml" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="770028f85deb584a9479374f0ae4a3c9" name="src/Standards/PEAR/Docs/Files/IncludingFileStandard.xml" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="dee46187d37f8fb07869fdc80230d94f" name="src/Standards/PEAR/Docs/Files/LineLengthStandard.xml" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="e1ac447c084d84b6daef68437ed212cc" name="src/Standards/PEAR/Docs/Formatting/MultiLineAssignmentStandard.xml" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="eb647b510eb0e12cc38780b435ea7c28" name="src/Standards/PEAR/Docs/Functions/FunctionCallSignatureStandard.xml" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="8b78bd675f5f511a263f5cc4ed672a74" name="src/Standards/PEAR/Docs/Functions/FunctionDeclarationStandard.xml" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="c06cfd422bd0448fea890c5f160aaaa4" name="src/Standards/PEAR/Docs/Functions/ValidDefaultValueStandard.xml" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="7a8cb7f0170d43276b8d2269cf91c4d1" name="src/Standards/PEAR/Docs/NamingConventions/ValidClassNameStandard.xml" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="9a148130eea909affd2bf4085c175515" name="src/Standards/PEAR/Docs/NamingConventions/ValidFunctionNameStandard.xml" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="16059d7e2176ab2178e3da7150fa4926" name="src/Standards/PEAR/Docs/NamingConventions/ValidVariableNameStandard.xml" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="a449ba78ece1fb077585b031e8410925" name="src/Standards/PEAR/Docs/WhiteSpace/ScopeClosingBraceStandard.xml" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="98576702129bc924dfb0749417b19b17" name="src/Standards/PEAR/Docs/WhiteSpace/ScopeIndentStandard.xml" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="f35f1608d67b5c38d76eeb778d8617cc" name="src/Standards/PEAR/Docs/WhiteSpace/ObjectOperatorIndentStandard.xml" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="61d29c1293dbf4ba71910bb1fcbdcf75" name="src/Standards/PEAR/Sniffs/Classes/ClassDeclarationSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="7c3e0d92023ebee2e9a2829855881f5b" name="src/Standards/PEAR/Sniffs/Commenting/ClassCommentSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="4698ffab35aced3b681e2c58b61d9b43" name="src/Standards/PEAR/Sniffs/Commenting/FileCommentSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="91f8a167b18f8f883d36704f88ca1828" name="src/Standards/PEAR/Sniffs/Commenting/FunctionCommentSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="56221b1ef7d9338fd547cfe69770cb32" name="src/Standards/PEAR/Sniffs/Commenting/InlineCommentSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="3bd1506edc61a62bd30d6cdf384ad595" name="src/Standards/PEAR/Sniffs/ControlStructures/ControlSignatureSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="7d31ca943c325de29527bdc41f29e608" name="src/Standards/PEAR/Sniffs/ControlStructures/MultiLineConditionSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="513098e03325347a039f76d76bf8725d" name="src/Standards/PEAR/Sniffs/Files/IncludingFileSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="5f94908af4a3b1a7d0cb27ec37f0fad4" name="src/Standards/PEAR/Sniffs/Formatting/MultiLineAssignmentSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="74af7af5f450ea38d20d6c570d22d516" name="src/Standards/PEAR/Sniffs/Functions/FunctionCallSignatureSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="4affaef729f81f5738ff4215f3fa2a9f" name="src/Standards/PEAR/Sniffs/Functions/FunctionDeclarationSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="8e835d16e2c7cc27a1597ad99d0af655" name="src/Standards/PEAR/Sniffs/Functions/ValidDefaultValueSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="8c7e520ff151b4d63be15619982bc7cc" name="src/Standards/PEAR/Sniffs/NamingConventions/ValidClassNameSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="83ed9b3fdb1d25a6eede0bf73929434f" name="src/Standards/PEAR/Sniffs/NamingConventions/ValidFunctionNameSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="a77856248d7209c12d8e2fc2c93c3e03" name="src/Standards/PEAR/Sniffs/NamingConventions/ValidVariableNameSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="cfbc32f6ea2a997932cdc34d36f90f66" name="src/Standards/PEAR/Sniffs/WhiteSpace/ObjectOperatorIndentSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="2a368e2d2682ca361c10915e113b6931" name="src/Standards/PEAR/Sniffs/WhiteSpace/ScopeClosingBraceSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="84833650dd797f28ad88d26b195337e9" name="src/Standards/PEAR/Sniffs/WhiteSpace/ScopeIndentSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="20d9b860df3530ae6384c27575647dbc" name="src/Standards/PEAR/Tests/Classes/ClassDeclarationUnitTest.1.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="0bb1c446fb030d6ee18500e83d398ec2" name="src/Standards/PEAR/Tests/Classes/ClassDeclarationUnitTest.1.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="9cf726711f34d03f3cd4906e876cdaad" name="src/Standards/PEAR/Tests/Classes/ClassDeclarationUnitTest.2.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="1976494ca97ebc04a62802a3e9f09021" name="src/Standards/PEAR/Tests/Classes/ClassDeclarationUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="2cb006b1610190006255f5ac97c0349d" name="src/Standards/PEAR/Tests/Commenting/ClassCommentUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="e5903660ffaceeee814fe5aa735e2cf0" name="src/Standards/PEAR/Tests/Commenting/ClassCommentUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="b810ca29b2d57bbc06cfe9a30fd39fdd" name="src/Standards/PEAR/Tests/Commenting/FileCommentUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="ecca929c0bf8dd6cf0f9ca6ef44c2bde" name="src/Standards/PEAR/Tests/Commenting/FileCommentUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="a2586a555332fa47dc2ca359b86479fb" name="src/Standards/PEAR/Tests/Commenting/FunctionCommentUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="f4b30bbd80e06778575a61159b1298d7" name="src/Standards/PEAR/Tests/Commenting/FunctionCommentUnitTest.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="c8c8e75e4e5fd935dd72c98750c16105" name="src/Standards/PEAR/Tests/Commenting/FunctionCommentUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="433442747159f3fd4338dbf01adb2bc1" name="src/Standards/PEAR/Tests/Commenting/InlineCommentUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="c46590cc30104e4558ea3caa0dc24d2c" name="src/Standards/PEAR/Tests/Commenting/InlineCommentUnitTest.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="40b46fca3ffbd96ae95b846866785520" name="src/Standards/PEAR/Tests/Commenting/InlineCommentUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="75a9f343bb675f83e000fd15a990e966" name="src/Standards/PEAR/Tests/ControlStructures/ControlSignatureUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="8a66ac01eb5870ff973edde04cec04a9" name="src/Standards/PEAR/Tests/ControlStructures/ControlSignatureUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="7eb48f16755ef2f57532b943293a0df2" name="src/Standards/PEAR/Tests/ControlStructures/MultiLineConditionUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="87d9b647061b14a2ee7b253c5615e6f7" name="src/Standards/PEAR/Tests/ControlStructures/MultiLineConditionUnitTest.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="2c9112e89df678cd860f42117204dcef" name="src/Standards/PEAR/Tests/ControlStructures/MultiLineConditionUnitTest.js" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="c36e09387f8f173a866fd26e8f87da5e" name="src/Standards/PEAR/Tests/ControlStructures/MultiLineConditionUnitTest.js.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="0f856b81edafd8c465b49b4e05dd0590" name="src/Standards/PEAR/Tests/ControlStructures/MultiLineConditionUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="0c7e672ebcb7d5a1d25f8c7a578917c7" name="src/Standards/PEAR/Tests/Files/IncludingFileUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="58d16cce3e9db3c09b014fb3f9cb80cc" name="src/Standards/PEAR/Tests/Files/IncludingFileUnitTest.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="d00646ed779e855ac5e846a4802ce521" name="src/Standards/PEAR/Tests/Files/IncludingFileUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="dd562a6666ace93ed0e10adf599b691c" name="src/Standards/PEAR/Tests/Formatting/MultiLineAssignmentUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="bf6826398f063a05ab51aef6643467e7" name="src/Standards/PEAR/Tests/Formatting/MultiLineAssignmentUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="1ee2fc53c516f7b763a74ed949fda323" name="src/Standards/PEAR/Tests/Functions/FunctionCallSignatureUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="424f992302696ba589620bdc3bca5424" name="src/Standards/PEAR/Tests/Functions/FunctionCallSignatureUnitTest.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="16f57c76d190c486f04c494e5476f5b6" name="src/Standards/PEAR/Tests/Functions/FunctionCallSignatureUnitTest.js" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="bba0187f83f075e395e4df7a73b26bcd" name="src/Standards/PEAR/Tests/Functions/FunctionCallSignatureUnitTest.js.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="79391117925bee89c49d0c773e8f588e" name="src/Standards/PEAR/Tests/Functions/FunctionCallSignatureUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="6a07cd211b45087b9f0900b3d2da7c93" name="src/Standards/PEAR/Tests/Functions/FunctionDeclarationUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="a5d873070f9863a92ad1059bca7de8e7" name="src/Standards/PEAR/Tests/Functions/FunctionDeclarationUnitTest.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="241b39a0ab2776eea87ea8519fc76994" name="src/Standards/PEAR/Tests/Functions/FunctionDeclarationUnitTest.js" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="62d9e5cb6930c0a619154678f57790d1" name="src/Standards/PEAR/Tests/Functions/FunctionDeclarationUnitTest.js.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="73c7ba7a653afdd93bbab5efeabe42fe" name="src/Standards/PEAR/Tests/Functions/FunctionDeclarationUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="9cddfc2dcc1172fd31a0026850debc9c" name="src/Standards/PEAR/Tests/Functions/ValidDefaultValueUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="1260abcadcd7a6eb4eb6b9de816eaeee" name="src/Standards/PEAR/Tests/Functions/ValidDefaultValueUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="cccf2ea066c5f358b977afa01f9ef949" name="src/Standards/PEAR/Tests/NamingConventions/ValidClassNameUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="ff9f1275e8c53455a68a3ae13b59604d" name="src/Standards/PEAR/Tests/NamingConventions/ValidClassNameUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="88995b8040b185e2ca8a9eeff29cb378" name="src/Standards/PEAR/Tests/NamingConventions/ValidFunctionNameUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="217adc5639550098776e833feafa0640" name="src/Standards/PEAR/Tests/NamingConventions/ValidFunctionNameUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="c9b11b4cffcd17d4ca5f51851ea26dec" name="src/Standards/PEAR/Tests/NamingConventions/ValidVariableNameUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="30845315878952536aa5be9b0a294833" name="src/Standards/PEAR/Tests/NamingConventions/ValidVariableNameUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="4fb89fb2a2ef225d425930289ae58f46" name="src/Standards/PEAR/Tests/WhiteSpace/ObjectOperatorIndentUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="45afc3b6aebece737c3084f62918d63a" name="src/Standards/PEAR/Tests/WhiteSpace/ObjectOperatorIndentUnitTest.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="92cca16a0dc2c88bd8fb8fc94e5e407b" name="src/Standards/PEAR/Tests/WhiteSpace/ObjectOperatorIndentUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="f5d7fa6cf1aaaae943f0185454c79f13" name="src/Standards/PEAR/Tests/WhiteSpace/ScopeClosingBraceUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="f679869a07f425d94c3779c05da1430b" name="src/Standards/PEAR/Tests/WhiteSpace/ScopeClosingBraceUnitTest.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="d12db44922f3b9fdc10c313923f00925" name="src/Standards/PEAR/Tests/WhiteSpace/ScopeClosingBraceUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="966dc214ca110650edfcfac710a4c65c" name="src/Standards/PEAR/Tests/WhiteSpace/ScopeIndentUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="7126672aece2ef675df85b5411ce72d3" name="src/Standards/PEAR/Tests/WhiteSpace/ScopeIndentUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="6038a62fc8551d6f75f391b94a748ad5" name="src/Standards/PEAR/ruleset.xml" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="c500324edd32dd6d5fac4e233aa866fa" name="src/Standards/PSR1/Docs/Classes/ClassDeclarationStandard.xml" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="7b0907673957b7bf80663696a663ff6c" name="src/Standards/PSR1/Docs/Files/SideEffectsStandard.xml" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="05a3b376062f16c61b844cd0954c809d" name="src/Standards/PSR1/Docs/Methods/CamelCapsMethodNameStandard.xml" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="5df9e47cf50f74ee7228c6e191ed09c9" name="src/Standards/PSR1/Sniffs/Classes/ClassDeclarationSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="599c9070dea81f3f27030837e839d937" name="src/Standards/PSR1/Sniffs/Files/SideEffectsSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="a2ab75a136676400178906bf0243fb6a" name="src/Standards/PSR1/Sniffs/Methods/CamelCapsMethodNameSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="459a238ac06aad1c7daf28ddf295536f" name="src/Standards/PSR1/Tests/Classes/ClassDeclarationUnitTest.1.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="eda9487741b3b749888e1a3a9201c0a2" name="src/Standards/PSR1/Tests/Classes/ClassDeclarationUnitTest.2.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="e386e436b655681ce69c1a7bc270d6dc" name="src/Standards/PSR1/Tests/Classes/ClassDeclarationUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="caaac0e5c6215a987bdb03b6b207c6ab" name="src/Standards/PSR1/Tests/Files/SideEffectsUnitTest.1.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="cd713e9e55a1ba25a2ee2742fa54ae86" name="src/Standards/PSR1/Tests/Files/SideEffectsUnitTest.2.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="1d55c54bf5600e860c62d8e2152c2df2" name="src/Standards/PSR1/Tests/Files/SideEffectsUnitTest.3.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="f91d6cdefb57a116e3e6e9cecf7e7273" name="src/Standards/PSR1/Tests/Files/SideEffectsUnitTest.4.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="4a3a968c38d0655e88a39c665d431f72" name="src/Standards/PSR1/Tests/Files/SideEffectsUnitTest.5.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="508d38b26b3a4559fc9652e3614ee214" name="src/Standards/PSR1/Tests/Files/SideEffectsUnitTest.6.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="f94bc76ac4828f1abf169b7dde22f7a7" name="src/Standards/PSR1/Tests/Files/SideEffectsUnitTest.7.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="1f54ad36a11a4c2283af018adc0522f6" name="src/Standards/PSR1/Tests/Files/SideEffectsUnitTest.8.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="562ccb12be985d2cedd2a01c1d3d8eaf" name="src/Standards/PSR1/Tests/Files/SideEffectsUnitTest.9.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="c1086caeff93bb837c7b7dae4ae2c068" name="src/Standards/PSR1/Tests/Files/SideEffectsUnitTest.10.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="fa6196e94a27808e1ba29bd9df78af6b" name="src/Standards/PSR1/Tests/Files/SideEffectsUnitTest.11.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="562ccb12be985d2cedd2a01c1d3d8eaf" name="src/Standards/PSR1/Tests/Files/SideEffectsUnitTest.12.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="4ed7b26e4bba0f1ec085943e820abf77" name="src/Standards/PSR1/Tests/Files/SideEffectsUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="1834412485b621048fbc0fc40036e825" name="src/Standards/PSR1/Tests/Methods/CamelCapsMethodNameUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="acc0b9fba75f4519e5a3fc7cc250fc72" name="src/Standards/PSR1/Tests/Methods/CamelCapsMethodNameUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="7b29b0802a40032853887d5c4241430a" name="src/Standards/PSR1/ruleset.xml" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="5efab34b679d4df6c4d15df717d9c2ac" name="src/Standards/PSR12/Docs/Classes/ClassInstantiationStandard.xml" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="3d23c8d114852502ee6da45bb42aa5b2" name="src/Standards/PSR12/Docs/Functions/NullableTypeDeclarationStandard.xml" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="51c5cee93bec06e2a17e919451359b45" name="src/Standards/PSR12/Docs/Keywords/ShortFormTypeKeywordsStandard.xml" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="f8a0e59bf3194e55eefcf937f601af90" name="src/Standards/PSR12/Docs/Namespaces/CompoundNamespaceDepthStandard.xml" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="246772e6321348f3c481bea06d123ca0" name="src/Standards/PSR12/Docs/Operators/OperatorSpacingStandard.xml" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="66267b0ce3b0e69635298b75cabdf4e5" name="src/Standards/PSR12/Sniffs/Classes/AnonClassDeclarationSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="90ef60f54f166158c16517e372f25f84" name="src/Standards/PSR12/Sniffs/Classes/ClassInstantiationSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="60371706474aebf44b07fa556983ddbe" name="src/Standards/PSR12/Sniffs/Classes/ClosingBraceSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="2443a29e18e9e55eb13ed75828c7cb55" name="src/Standards/PSR12/Sniffs/ControlStructures/BooleanOperatorPlacementSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="eb290b143a6813c62a9b75bfd9287801" name="src/Standards/PSR12/Sniffs/ControlStructures/ControlStructureSpacingSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="6d7a0338a6705ade1966b7099c90b17c" name="src/Standards/PSR12/Sniffs/Files/DeclareStatementSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="3e5f777ae21dfcf5cadcf92d58b123f0" name="src/Standards/PSR12/Sniffs/Files/FileHeaderSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="cda3c4eae79512d67f8f54c97481c58b" name="src/Standards/PSR12/Sniffs/Files/ImportStatementSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="1825c9c4d38a95d8d271e23da9a5077d" name="src/Standards/PSR12/Sniffs/Files/OpenTagSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="3805c820ccffa9cd2e0958058372dc46" name="src/Standards/PSR12/Sniffs/Functions/NullableTypeDeclarationSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="be238830d692b74a94afabb3e3260b7c" name="src/Standards/PSR12/Sniffs/Functions/ReturnTypeDeclarationSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="9f09141ec9131f833c6f3deb681a159b" name="src/Standards/PSR12/Sniffs/Keywords/ShortFormTypeKeywordsSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="fc9d33a4ca03829c72a9699577085cdc" name="src/Standards/PSR12/Sniffs/Namespaces/CompoundNamespaceDepthSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="a0fc36239f7dcdd5b96704d7ce2d0b5b" name="src/Standards/PSR12/Sniffs/Operators/OperatorSpacingSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="18b83b1faae286afb7fe81344cb8b6fa" name="src/Standards/PSR12/Sniffs/Properties/ConstantVisibilitySniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="f4da940e251abc02eb070cb9e702d117" name="src/Standards/PSR12/Sniffs/Traits/UseDeclarationSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="2d0d432574e745121114e39d88098099" name="src/Standards/PSR12/Tests/Classes/AnonClassDeclarationUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="f13a7e9ea2c0f067ead19f6dbf65e593" name="src/Standards/PSR12/Tests/Classes/AnonClassDeclarationUnitTest.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="9afa1fab7282fb5d0b8109d8d22a7565" name="src/Standards/PSR12/Tests/Classes/AnonClassDeclarationUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="1121755e6d793adef90e60fdad1fe5fe" name="src/Standards/PSR12/Tests/Classes/ClassInstantiationUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="6dbac97ff1bdd0fc438b5b4c54ca4d82" name="src/Standards/PSR12/Tests/Classes/ClassInstantiationUnitTest.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="0ca768471c880e75f1916c9de2efa020" name="src/Standards/PSR12/Tests/Classes/ClassInstantiationUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="e4b0af724ff54dc3c9867cb073b70c55" name="src/Standards/PSR12/Tests/Classes/ClosingBraceUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="0bbf8ab86b0ace216ddaddc2ab52ceea" name="src/Standards/PSR12/Tests/Classes/ClosingBraceUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="f9805ce4f9493429038378309917dea8" name="src/Standards/PSR12/Tests/ControlStructures/BooleanOperatorPlacementUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="8a5c1fe973a5743ab2ebee202d2dcaa7" name="src/Standards/PSR12/Tests/ControlStructures/BooleanOperatorPlacementUnitTest.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="89a8416d6fdab83bdfe53272be176e7f" name="src/Standards/PSR12/Tests/ControlStructures/BooleanOperatorPlacementUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="f6b6b42b86ef0fff49f3df4887042ba1" name="src/Standards/PSR12/Tests/ControlStructures/ControlStructureSpacingUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="e3f80038aa6a1c11675c67ba9fcccec3" name="src/Standards/PSR12/Tests/ControlStructures/ControlStructureSpacingUnitTest.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="a619819a66f286fed9b6a93b8ba60f3d" name="src/Standards/PSR12/Tests/ControlStructures/ControlStructureSpacingUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="f59bfff0ac05eb2a644228df1f7221db" name="src/Standards/PSR12/Tests/Files/DeclareStatementUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="fb5f98ddf138e3bbefe99670fcea1e59" name="src/Standards/PSR12/Tests/Files/DeclareStatementUnitTest.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="9adf4e093186067f8d94343e676cf00c" name="src/Standards/PSR12/Tests/Files/DeclareStatementUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="e740700d48fe351a1a60a31c58e089ca" name="src/Standards/PSR12/Tests/Files/FileHeaderUnitTest.1.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="13398304d5a4388e1899c20fa2092f8e" name="src/Standards/PSR12/Tests/Files/FileHeaderUnitTest.2.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="e740700d48fe351a1a60a31c58e089ca" name="src/Standards/PSR12/Tests/Files/FileHeaderUnitTest.2.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="2ebda8006759ef9f35b7f58b13d2fe66" name="src/Standards/PSR12/Tests/Files/FileHeaderUnitTest.3.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="12b737c1817df7a572f6ffed55c3d5cc" name="src/Standards/PSR12/Tests/Files/FileHeaderUnitTest.4.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="2490d2cbce3666dc0fdce8ebc1ee98dd" name="src/Standards/PSR12/Tests/Files/FileHeaderUnitTest.4.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="4cd26ffc8d1204cdb4e9e683af3204c5" name="src/Standards/PSR12/Tests/Files/FileHeaderUnitTest.5.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="b6ea918207a00443059d49ff6f31f1c9" name="src/Standards/PSR12/Tests/Files/FileHeaderUnitTest.6.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="b42df4f12176db21a830f779d051f5a8" name="src/Standards/PSR12/Tests/Files/FileHeaderUnitTest.7.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="fd6e3e619663eb1b88791b8f20feee0c" name="src/Standards/PSR12/Tests/Files/FileHeaderUnitTest.7.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="058ee2f0dfec127e3130a83871176355" name="src/Standards/PSR12/Tests/Files/FileHeaderUnitTest.8.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="b7efd7f370091e11d55a98604f57c639" name="src/Standards/PSR12/Tests/Files/FileHeaderUnitTest.9.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="1f5e9a437199d04da856a896de1c23c9" name="src/Standards/PSR12/Tests/Files/FileHeaderUnitTest.10.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="dead2971cdac07c257a98d68bdd267e3" name="src/Standards/PSR12/Tests/Files/FileHeaderUnitTest.10.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="5dfa7b701188b27e6afc31a4e22c9d18" name="src/Standards/PSR12/Tests/Files/FileHeaderUnitTest.11.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="ac2d37ba21aba43d65a3f9ec16c33c3d" name="src/Standards/PSR12/Tests/Files/FileHeaderUnitTest.11.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="00da26921ecb661118d5ae27275d5843" name="src/Standards/PSR12/Tests/Files/FileHeaderUnitTest.12.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="4cd26ffc8d1204cdb4e9e683af3204c5" name="src/Standards/PSR12/Tests/Files/FileHeaderUnitTest.12.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="3e9103af6313b16e6fdc0d963f9c6f15" name="src/Standards/PSR12/Tests/Files/FileHeaderUnitTest.13.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="b15a887ad592b7423535197a735caee3" name="src/Standards/PSR12/Tests/Files/FileHeaderUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="2f4ff5027ab9b6e90cb5dc449284235a" name="src/Standards/PSR12/Tests/Files/ImportStatementUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="5b4ed494ef9cdad0c92f9b1f33831cae" name="src/Standards/PSR12/Tests/Files/ImportStatementUnitTest.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="d7f9dbadadb7fe09bf2842858cc1128f" name="src/Standards/PSR12/Tests/Files/ImportStatementUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="7a20e2ec74ec140dbb37ce0f33d806cf" name="src/Standards/PSR12/Tests/Files/OpenTagUnitTest.1.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="3b4062d104bdffe5031a37b1da276b2b" name="src/Standards/PSR12/Tests/Files/OpenTagUnitTest.2.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="a5ef03b803cf1913550177df81b34dc3" name="src/Standards/PSR12/Tests/Files/OpenTagUnitTest.2.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="32997d29a6a6ec51dcc44268b591274c" name="src/Standards/PSR12/Tests/Files/OpenTagUnitTest.3.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="2c43deef06c2aa5292a97ca0ec591f16" name="src/Standards/PSR12/Tests/Files/OpenTagUnitTest.4.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="ce407ff5715c837d02b1aba7975bf512" name="src/Standards/PSR12/Tests/Files/OpenTagUnitTest.5.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="f9008fbbc92d7edf5d20ba2b6b897f63" name="src/Standards/PSR12/Tests/Files/OpenTagUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="33495188700a200f74d494839fc76415" name="src/Standards/PSR12/Tests/Functions/NullableTypeDeclarationUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="cc24a023be1f533e7eaf1620e3ad0b5e" name="src/Standards/PSR12/Tests/Functions/NullableTypeDeclarationUnitTest.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="85fe3a1e2893be7987cc3ba67efe4764" name="src/Standards/PSR12/Tests/Functions/NullableTypeDeclarationUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="71c097b32c9e046e3446fe5cee48370b" name="src/Standards/PSR12/Tests/Functions/ReturnTypeDeclarationUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="cf60ecc4801b035b44ff58aca5c9cb19" name="src/Standards/PSR12/Tests/Functions/ReturnTypeDeclarationUnitTest.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="d0ebf4bc9e6b7a1bd8960a0cb6ad58b9" name="src/Standards/PSR12/Tests/Functions/ReturnTypeDeclarationUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="9f701307052cf7cd6cf651c84a72c668" name="src/Standards/PSR12/Tests/Keywords/ShortFormTypeKeywordsUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="2577b01517d084bf36c3464007c464a1" name="src/Standards/PSR12/Tests/Keywords/ShortFormTypeKeywordsUnitTest.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="c398be789dd740cb6019c0d709136033" name="src/Standards/PSR12/Tests/Keywords/ShortFormTypeKeywordsUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="ed5d83bbfdcef94a67e3ac5ccdebf71c" name="src/Standards/PSR12/Tests/Namespaces/CompoundNamespaceDepthUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="04c5381521176363088844adcfb111f5" name="src/Standards/PSR12/Tests/Namespaces/CompoundNamespaceDepthUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="b34ca919085f0422bec64352dcb7cb76" name="src/Standards/PSR12/Tests/Operators/OperatorSpacingUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="0c0fd6f2f72aad86a76dc292e9dfd3f6" name="src/Standards/PSR12/Tests/Operators/OperatorSpacingUnitTest.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="cb6692d7d28e25d8a3fb3128e6216eed" name="src/Standards/PSR12/Tests/Operators/OperatorSpacingUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="899ee0553af149bc00ac74fda7e12840" name="src/Standards/PSR12/Tests/Properties/ConstantVisibilityUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="d2cc0709e23fdba74c260be65964683b" name="src/Standards/PSR12/Tests/Properties/ConstantVisibilityUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="3fed6b44711d9693367f9b6977019d18" name="src/Standards/PSR12/Tests/Traits/UseDeclarationUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="ca951021178650ef908443bb871f580d" name="src/Standards/PSR12/Tests/Traits/UseDeclarationUnitTest.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="ee7321c7a4126023fddfd7063cd887f1" name="src/Standards/PSR12/Tests/Traits/UseDeclarationUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="705c0557dc3f617e87fd8c163b4d1a22" name="src/Standards/PSR12/ruleset.xml" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="5b48bb68ed1e69ec9f8c5f349e93f506" name="src/Standards/PSR2/Docs/Classes/ClassDeclarationStandard.xml" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="6921de312af6d6728602d619e3e372f5" name="src/Standards/PSR2/Docs/Classes/PropertyDeclarationStandard.xml" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="8282fe64de19569eb1756ae2ff7d1947" name="src/Standards/PSR2/Docs/ControlStructures/ControlStructureSpacingStandard.xml" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="031188d15bcfd9a39c10f409c8974799" name="src/Standards/PSR2/Docs/ControlStructures/ElseIfDeclarationStandard.xml" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="b3b65f2db67599c695442624cf174073" name="src/Standards/PSR2/Docs/ControlStructures/SwitchDeclarationStandard.xml" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="17a9a0d20c5d932df90a36101f7fe18f" name="src/Standards/PSR2/Docs/Files/EndFileNewlineStandard.xml" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="1104ac650d64515e5e668b3f4b44ec79" name="src/Standards/PSR2/Docs/Methods/MethodDeclarationStandard.xml" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="bc5fb6d5b29b3fc3900268a230ccb954" name="src/Standards/PSR2/Docs/Namespaces/NamespaceDeclarationStandard.xml" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="ec4ccfb1593a8fb624f14a6ffecd1181" name="src/Standards/PSR2/Docs/Namespaces/UseDeclarationStandard.xml" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="cff13e0d58976a762e815d5b787ecfbe" name="src/Standards/PSR2/Sniffs/Classes/ClassDeclarationSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="ddc9f1abf6f75e82469326bad7008e90" name="src/Standards/PSR2/Sniffs/Classes/PropertyDeclarationSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="8003a116ab8c51559b0bb4bca9bcfe9f" name="src/Standards/PSR2/Sniffs/ControlStructures/ControlStructureSpacingSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="cff1d75096e96e3ffd8bcff101f2e54b" name="src/Standards/PSR2/Sniffs/ControlStructures/ElseIfDeclarationSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="0125d53192c1fd2037f69267fac5f81c" name="src/Standards/PSR2/Sniffs/ControlStructures/SwitchDeclarationSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="ab617164eb2ab6e0f16b3b5f8f7c30ad" name="src/Standards/PSR2/Sniffs/Files/ClosingTagSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="b205a34600bfd1bf3e5ac4b4bc09cb13" name="src/Standards/PSR2/Sniffs/Files/EndFileNewlineSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="9bb83b94df7701d8f21286035eb7548c" name="src/Standards/PSR2/Sniffs/Methods/FunctionCallSignatureSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="12845f34a7dd39c2eaa2015f7003b777" name="src/Standards/PSR2/Sniffs/Methods/FunctionClosingBraceSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="64174f483816ea5958ee47ac7cdc13c1" name="src/Standards/PSR2/Sniffs/Methods/MethodDeclarationSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="4ec324a9fbcadf316da15203316af2fd" name="src/Standards/PSR2/Sniffs/Namespaces/NamespaceDeclarationSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="f406bc4fc69f37c4d0e4dca34a2d94cf" name="src/Standards/PSR2/Sniffs/Namespaces/UseDeclarationSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="2a070ed27a21372f0a658ffb65492a76" name="src/Standards/PSR2/Tests/Classes/ClassDeclarationUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="1a1d4fd4683a3d673badf015692a6a85" name="src/Standards/PSR2/Tests/Classes/ClassDeclarationUnitTest.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="9efb8a06e2cf9e1cc592ce88713ecc2e" name="src/Standards/PSR2/Tests/Classes/ClassDeclarationUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="fb5d20d1646ba5ae2685dd0254116a82" name="src/Standards/PSR2/Tests/Classes/PropertyDeclarationUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="d1c0c5a8c2457d1752c7bdeac988a86c" name="src/Standards/PSR2/Tests/Classes/PropertyDeclarationUnitTest.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="ed1d23b1a345a216b0e2f4c0bab2dc83" name="src/Standards/PSR2/Tests/Classes/PropertyDeclarationUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="d884e3bd99911c1f782a41986e881fb1" name="src/Standards/PSR2/Tests/ControlStructures/ControlStructureSpacingUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="30073b1503203b7f9fcbce724566bcd7" name="src/Standards/PSR2/Tests/ControlStructures/ControlStructureSpacingUnitTest.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="9ff56539205b8cdb198753817e562a2a" name="src/Standards/PSR2/Tests/ControlStructures/ControlStructureSpacingUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="772b17594a522071cd3f058e8be477b1" name="src/Standards/PSR2/Tests/ControlStructures/ElseIfDeclarationUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="7e881e2d111ab32e9a8a6d4e6765b0af" name="src/Standards/PSR2/Tests/ControlStructures/ElseIfDeclarationUnitTest.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="7ceb4ae40063debc79ca7a77983258ee" name="src/Standards/PSR2/Tests/ControlStructures/ElseIfDeclarationUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="810d3a1ee9dee3a657f164fa59765ae6" name="src/Standards/PSR2/Tests/ControlStructures/SwitchDeclarationUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="97b092bba687672770aa7a09b4a61f64" name="src/Standards/PSR2/Tests/ControlStructures/SwitchDeclarationUnitTest.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="fff3e5a603e86ef4a613edb368bc9fdb" name="src/Standards/PSR2/Tests/ControlStructures/SwitchDeclarationUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="953018646d4d16f3706987adacfb4941" name="src/Standards/PSR2/Tests/Files/ClosingTagUnitTest.1.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="11d9f376cf27e0ab73441d39a8ac1f5c" name="src/Standards/PSR2/Tests/Files/ClosingTagUnitTest.1.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="7007371fc508d604a54e27b8ad48237a" name="src/Standards/PSR2/Tests/Files/ClosingTagUnitTest.2.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="02149e00215872b85e196b8b1238b736" name="src/Standards/PSR2/Tests/Files/ClosingTagUnitTest.3.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="3ba30f8badac2b37b8b429b5c1b9738d" name="src/Standards/PSR2/Tests/Files/ClosingTagUnitTest.4.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="6b76a2511a40e108f9105773a672cc01" name="src/Standards/PSR2/Tests/Files/ClosingTagUnitTest.4.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="90a8c05195f19a2f4d6edf862709a704" name="src/Standards/PSR2/Tests/Files/ClosingTagUnitTest.5.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="6e42a343242046f2966a1e00669affec" name="src/Standards/PSR2/Tests/Files/ClosingTagUnitTest.5.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="86b6d84132861edac212434068c323f6" name="src/Standards/PSR2/Tests/Files/ClosingTagUnitTest.6.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="feda787b9d2cb1946604d7a9c6465e2a" name="src/Standards/PSR2/Tests/Files/ClosingTagUnitTest.6.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="7c6ca747e065b978e2190587f209058c" name="src/Standards/PSR2/Tests/Files/ClosingTagUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="c1744f97606da40062f2695cd0b6b6bf" name="src/Standards/PSR2/Tests/Files/EndFileNewlineUnitTest.1.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="53a11a4f5f66fcba7560107dfef6fff9" name="src/Standards/PSR2/Tests/Files/EndFileNewlineUnitTest.1.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="53a11a4f5f66fcba7560107dfef6fff9" name="src/Standards/PSR2/Tests/Files/EndFileNewlineUnitTest.2.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="d2ae4c2f14d3f88b23af87f94c780689" name="src/Standards/PSR2/Tests/Files/EndFileNewlineUnitTest.3.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="53a11a4f5f66fcba7560107dfef6fff9" name="src/Standards/PSR2/Tests/Files/EndFileNewlineUnitTest.3.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="6f3aaceb6d0d60f4dc5c9e146d3e091a" name="src/Standards/PSR2/Tests/Files/EndFileNewlineUnitTest.4.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="65c653ba989a56e00830bc798fb0c00f" name="src/Standards/PSR2/Tests/Files/EndFileNewlineUnitTest.5.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="0a2ebafbea765bdf46f5ad2bf5bc03c2" name="src/Standards/PSR2/Tests/Files/EndFileNewlineUnitTest.6.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="b7b4d012c92b8840642bbf2aa9fb15c1" name="src/Standards/PSR2/Tests/Files/EndFileNewlineUnitTest.6.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="6cd2bc9cf1b996839e91bb6b5c554d0f" name="src/Standards/PSR2/Tests/Files/EndFileNewlineUnitTest.7.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="53a11a4f5f66fcba7560107dfef6fff9" name="src/Standards/PSR2/Tests/Files/EndFileNewlineUnitTest.7.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="30af188f45de08d446cb7dc1dc342609" name="src/Standards/PSR2/Tests/Files/EndFileNewlineUnitTest.8.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="fd396408a7445ef81e4099f2f78f6cca" name="src/Standards/PSR2/Tests/Files/EndFileNewlineUnitTest.9.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="30af188f45de08d446cb7dc1dc342609" name="src/Standards/PSR2/Tests/Files/EndFileNewlineUnitTest.9.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="2e7af3175eb417ae9fa31a0eb9071a6c" name="src/Standards/PSR2/Tests/Files/EndFileNewlineUnitTest.10.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="30af188f45de08d446cb7dc1dc342609" name="src/Standards/PSR2/Tests/Files/EndFileNewlineUnitTest.10.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="a9f36eb60a8810b23fe0b44d0a4bd24d" name="src/Standards/PSR2/Tests/Files/EndFileNewlineUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="35a5186c4e067cd77c22f92426f5994b" name="src/Standards/PSR2/Tests/Methods/FunctionCallSignatureUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="0b799d43c46f88b36e1cd4f75e43eee9" name="src/Standards/PSR2/Tests/Methods/FunctionCallSignatureUnitTest.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="045c5cf20798bb68ec737edacf319179" name="src/Standards/PSR2/Tests/Methods/FunctionCallSignatureUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="9c44aa1e541c9a0b812f84c463960525" name="src/Standards/PSR2/Tests/Methods/FunctionClosingBraceUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="16a94c5076167e5ef0e7b923b029ebb9" name="src/Standards/PSR2/Tests/Methods/FunctionClosingBraceUnitTest.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="881c59784d991b6dc64e8028406d8bfa" name="src/Standards/PSR2/Tests/Methods/FunctionClosingBraceUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="7f16299f2e2113c319a1fa481bc9d465" name="src/Standards/PSR2/Tests/Methods/MethodDeclarationUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="41e579b14d206fd98ea03fb184224852" name="src/Standards/PSR2/Tests/Methods/MethodDeclarationUnitTest.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="d6d2ae17447336e0051002283bfecfe0" name="src/Standards/PSR2/Tests/Methods/MethodDeclarationUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="2400dcb127a6a53a5c123e5b9a252d89" name="src/Standards/PSR2/Tests/Namespaces/NamespaceDeclarationUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="55310f57f08a17ed12eec8cb6c347083" name="src/Standards/PSR2/Tests/Namespaces/NamespaceDeclarationUnitTest.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="517c1da9c8eb8e03397c4d5d3164721d" name="src/Standards/PSR2/Tests/Namespaces/NamespaceDeclarationUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="8a26306a12e8913b3de65969fb485680" name="src/Standards/PSR2/Tests/Namespaces/UseDeclarationUnitTest.1.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="ecb1b2d4613974588e25b2b05919ca59" name="src/Standards/PSR2/Tests/Namespaces/UseDeclarationUnitTest.2.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="d8a408f6c9889b7670ed4792b4116154" name="src/Standards/PSR2/Tests/Namespaces/UseDeclarationUnitTest.2.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="482838a4b7e4b26fa17e0022082cbc38" name="src/Standards/PSR2/Tests/Namespaces/UseDeclarationUnitTest.3.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="b8455f5f9bbee12eddc63113c1d7a250" name="src/Standards/PSR2/Tests/Namespaces/UseDeclarationUnitTest.3.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="7c2fa982b451836de667dcab0368a2bc" name="src/Standards/PSR2/Tests/Namespaces/UseDeclarationUnitTest.4.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="29ba26fcaf6af8bd2c5caf90dce6f2ad" name="src/Standards/PSR2/Tests/Namespaces/UseDeclarationUnitTest.5.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="a50aabf216d2a2d1c8dcd9960777b1cf" name="src/Standards/PSR2/Tests/Namespaces/UseDeclarationUnitTest.5.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="82e8e3b1302f7b6e7c584e0d62515087" name="src/Standards/PSR2/Tests/Namespaces/UseDeclarationUnitTest.6.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="83bdf07f98a64284432b28e3e2066982" name="src/Standards/PSR2/Tests/Namespaces/UseDeclarationUnitTest.7.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="a8d84d7b6e50a1fd180785a609ea0b03" name="src/Standards/PSR2/Tests/Namespaces/UseDeclarationUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="1c88d6c3532d3f1daaf1644fa184429e" name="src/Standards/PSR2/Tests/Namespaces/UseDeclarationUnitTest.8.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="b2da0531f5526ea6ee85c18f2c89295f" name="src/Standards/PSR2/Tests/Namespaces/UseDeclarationUnitTest.9.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="a16798f69bbe313406251427dc48f33e" name="src/Standards/PSR2/Tests/Namespaces/UseDeclarationUnitTest.10.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="79523ee3374ad7de4321eb715508c287" name="src/Standards/PSR2/Tests/Namespaces/UseDeclarationUnitTest.10.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="af4e3f05db0dd9044cba520e3e57d07e" name="src/Standards/PSR2/Tests/Namespaces/UseDeclarationUnitTest.11.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="c4c58fab758fb1d06a581c81332dbea6" name="src/Standards/PSR2/Tests/Namespaces/UseDeclarationUnitTest.11.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="2a560ec1ba4d5c08c4cc8213ad65e5b6" name="src/Standards/PSR2/Tests/Namespaces/UseDeclarationUnitTest.12.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="e38988de5c9ac315785a3f8614b94058" name="src/Standards/PSR2/Tests/Namespaces/UseDeclarationUnitTest.12.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="0210956d61d52513f71eb59a0815763e" name="src/Standards/PSR2/Tests/Namespaces/UseDeclarationUnitTest.13.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="62a83b276a62e457773bac3b90d54d15" name="src/Standards/PSR2/Tests/Namespaces/UseDeclarationUnitTest.13.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="aa98e7681588c1e7afa316175f6750bc" name="src/Standards/PSR2/Tests/Namespaces/UseDeclarationUnitTest.14.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="44a48aecdde1d192a4760f66e9328db6" name="src/Standards/PSR2/Tests/Namespaces/UseDeclarationUnitTest.14.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="7a81a36377cc2be31a3cba98dd28a53f" name="src/Standards/PSR2/Tests/Namespaces/UseDeclarationUnitTest.15.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="a0bebc8923d6518c8d9bd4957f562de6" name="src/Standards/PSR2/Tests/Namespaces/UseDeclarationUnitTest.16.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="70c362e67586a666f6527205221d0924" name="src/Standards/PSR2/Tests/Namespaces/UseDeclarationUnitTest.16.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="dae5dcc2eca48ba16b8d3b10ea246bd9" name="src/Standards/PSR2/Tests/Namespaces/UseDeclarationUnitTest.17.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="8be9364b519fd8fedb7495d5c642323d" name="src/Standards/PSR2/ruleset.xml" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="8f5a3f78a1366c2514b2084c27133a94" name="src/Standards/Squiz/Docs/Arrays/ArrayBracketSpacingStandard.xml" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="5a6ebf511e879db7bb542cae03a09017" name="src/Standards/Squiz/Docs/Arrays/ArrayDeclarationStandard.xml" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="0d52c96dc30c6d4adc2d18731ebbb8d3" name="src/Standards/Squiz/Docs/Classes/LowercaseClassKeywordsStandard.xml" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="e0412fbfda98825d5aefeccf05be6d75" name="src/Standards/Squiz/Docs/Classes/SelfMemberReferenceStandard.xml" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="765734a297db823187564ec0ebd0407c" name="src/Standards/Squiz/Docs/Commenting/DocCommentAlignmentStandard.xml" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="5b3f89dc3dadb4b51be5c10bcdc90022" name="src/Standards/Squiz/Docs/Commenting/FunctionCommentThrowTagStandard.xml" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="631360ae228f9c289d78a19e247fb1cc" name="src/Standards/Squiz/Docs/ControlStructures/ForEachLoopDeclarationStandard.xml" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="4b9912af0792027aedefc10082a4f9e0" name="src/Standards/Squiz/Docs/ControlStructures/ForLoopDeclarationStandard.xml" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="8c44460bbd8f96bc7b0bec19c504542a" name="src/Standards/Squiz/Docs/ControlStructures/LowercaseDeclarationStandard.xml" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="6dfee2e5c8e62714eb35ffcc43300c90" name="src/Standards/Squiz/Docs/Functions/FunctionDuplicateArgumentStandard.xml" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="b6ef73ae05dee4d15331ef2868e836f8" name="src/Standards/Squiz/Docs/Functions/LowercaseFunctionKeywordsStandard.xml" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="c5076907ad4f674a6b5570e473b6bdb3" name="src/Standards/Squiz/Docs/Scope/StaticThisUsageStandard.xml" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="d920898e7c8b7a595af5993b553a0ba8" name="src/Standards/Squiz/Docs/Strings/EchoedStringsStandard.xml" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="ce8da202c01eb05185917ceec0611879" name="src/Standards/Squiz/Docs/WhiteSpace/CastSpacingStandard.xml" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="2443b5d38db7776f552c9e1809947c5c" name="src/Standards/Squiz/Docs/WhiteSpace/FunctionOpeningBraceStandard.xml" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="2bfda59951f00d64d2e2f21766ebc22b" name="src/Standards/Squiz/Docs/WhiteSpace/LanguageConstructSpacingStandard.xml" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="0bba11ac0fcbe07d1fa86924cdefc1d9" name="src/Standards/Squiz/Docs/WhiteSpace/ObjectOperatorSpacingStandard.xml" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="b88249dd363825410343acc26bd519d6" name="src/Standards/Squiz/Docs/WhiteSpace/ScopeKeywordSpacingStandard.xml" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="7219a11c03fef4b8cf425148c27052f6" name="src/Standards/Squiz/Docs/WhiteSpace/SemicolonSpacingStandard.xml" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="d3b9a3a606da06eed692862aacc707e8" name="src/Standards/Squiz/Sniffs/Arrays/ArrayBracketSpacingSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="0f42b9750a9e101b7110036bf08603c7" name="src/Standards/Squiz/Sniffs/Arrays/ArrayDeclarationSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="7e1f1c015017f974dca7973a659977d7" name="src/Standards/Squiz/Sniffs/Classes/ClassDeclarationSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="8384608d75b17801471bab24b2477cb6" name="src/Standards/Squiz/Sniffs/Classes/ClassFileNameSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="c41a069b14a0b912c86196969c447655" name="src/Standards/Squiz/Sniffs/Classes/DuplicatePropertySniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="e8bca0d1c68502fca9a9c1a75e408e5f" name="src/Standards/Squiz/Sniffs/Classes/LowercaseClassKeywordsSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="51d619341fdce6392a91b9b1fd3f28c5" name="src/Standards/Squiz/Sniffs/Classes/SelfMemberReferenceSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="0db7f23cc6292df02b8704662b1a30f0" name="src/Standards/Squiz/Sniffs/Classes/ValidClassNameSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="34ceed0ef96b0d882f1851abefae911c" name="src/Standards/Squiz/Sniffs/Commenting/BlockCommentSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="273d80d545a221e53e1083dbe8b8c22f" name="src/Standards/Squiz/Sniffs/Commenting/ClassCommentSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="55607be34d5b25e16bf02bd44ef4817a" name="src/Standards/Squiz/Sniffs/Commenting/ClosingDeclarationCommentSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="85c82ca468438301f8997a46b9b7aac4" name="src/Standards/Squiz/Sniffs/Commenting/DocCommentAlignmentSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="3eea7e3aeeb2e752ac09462bae59978e" name="src/Standards/Squiz/Sniffs/Commenting/EmptyCatchCommentSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="5198af368fa890d24895c7ed4452a1b0" name="src/Standards/Squiz/Sniffs/Commenting/FileCommentSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="375eb00bb973f90937ce1167a6c830e8" name="src/Standards/Squiz/Sniffs/Commenting/FunctionCommentThrowTagSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="2d95e2a903391cc5c23fb4ea2fe90872" name="src/Standards/Squiz/Sniffs/Commenting/FunctionCommentSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="c30ffbe70f2893cd415ae8a3acefe363" name="src/Standards/Squiz/Sniffs/Commenting/InlineCommentSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="92782afa44520378143cf3ca054472d3" name="src/Standards/Squiz/Sniffs/Commenting/LongConditionClosingCommentSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="299b5af63ba6a222e6a5375d1acc980d" name="src/Standards/Squiz/Sniffs/Commenting/PostStatementCommentSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="409c9ad2dc9e25729508b43e1338920d" name="src/Standards/Squiz/Sniffs/Commenting/VariableCommentSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="fc0c4f7f4fd912d795796f560cc79448" name="src/Standards/Squiz/Sniffs/ControlStructures/ControlSignatureSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="aac48b2e3bb0f0222b9bf0af33536bab" name="src/Standards/Squiz/Sniffs/ControlStructures/ElseIfDeclarationSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="1d88041ea106166d651af64b9a41cfc2" name="src/Standards/Squiz/Sniffs/ControlStructures/ForEachLoopDeclarationSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="89403e846a89361d2dd6ad44c5d601b1" name="src/Standards/Squiz/Sniffs/ControlStructures/ForLoopDeclarationSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="1992f75fdf61dde3f40b13e1f6338905" name="src/Standards/Squiz/Sniffs/ControlStructures/InlineIfDeclarationSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="d27bdc6fa1bbf8a3aa7517218b1aba7a" name="src/Standards/Squiz/Sniffs/ControlStructures/LowercaseDeclarationSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="6f457a82cc69de79ec9b299ffa93017c" name="src/Standards/Squiz/Sniffs/ControlStructures/SwitchDeclarationSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="3a4195bab27b18d28f72be21ea7e2d35" name="src/Standards/Squiz/Sniffs/CSS/ClassDefinitionClosingBraceSpaceSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="f748a87643e60c5104697fe7f07a1794" name="src/Standards/Squiz/Sniffs/CSS/ClassDefinitionNameSpacingSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="6391552c71e5cd312b2d8b4a330926d5" name="src/Standards/Squiz/Sniffs/CSS/ClassDefinitionOpeningBraceSpaceSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="dd7ebe1ed34c3ea7f99216d8ff2a03c8" name="src/Standards/Squiz/Sniffs/CSS/ColonSpacingSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="a7a8a61b07e297e7c8214f95d63e49dd" name="src/Standards/Squiz/Sniffs/CSS/ColourDefinitionSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="351347b59938501bd1189806da09421e" name="src/Standards/Squiz/Sniffs/CSS/DisallowMultipleStyleDefinitionsSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="fa158f1d0fcd75d427266bdd668d6b93" name="src/Standards/Squiz/Sniffs/CSS/DuplicateClassDefinitionSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="6abb7d7f16afd92a8fc1e28145ac417d" name="src/Standards/Squiz/Sniffs/CSS/DuplicateStyleDefinitionSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="c2a11ad008804572f62eceec7b13c697" name="src/Standards/Squiz/Sniffs/CSS/EmptyClassDefinitionSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="82747260d6b128a68144debac0d4dfdb" name="src/Standards/Squiz/Sniffs/CSS/EmptyStyleDefinitionSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="69f2b1b59bf76cf9918d405e972fd1b7" name="src/Standards/Squiz/Sniffs/CSS/ForbiddenStylesSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="7b5d742e9adb3c7d752c48bb556b3d72" name="src/Standards/Squiz/Sniffs/CSS/IndentationSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="f5170d8b63037cbfa1b9b32019dfc3e0" name="src/Standards/Squiz/Sniffs/CSS/LowercaseStyleDefinitionSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="56444be340f31e54255435d9080b440e" name="src/Standards/Squiz/Sniffs/CSS/MissingColonSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="7405a92bb41442af5519334b1b3ea8b6" name="src/Standards/Squiz/Sniffs/CSS/NamedColoursSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="af7e83c4e2e1a0d02698f3c1ae79ef6d" name="src/Standards/Squiz/Sniffs/CSS/OpacitySniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="d9d3d13a024ae7ff6d93b2b9600798e9" name="src/Standards/Squiz/Sniffs/CSS/SemicolonSpacingSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="916f5e1cd99bdeefd0febcac9320d4f6" name="src/Standards/Squiz/Sniffs/CSS/ShorthandSizeSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="a00bbc797757324aba5c2cc2a40fa95e" name="src/Standards/Squiz/Sniffs/Debug/JavaScriptLintSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="0d014a352b1348fffdc47ba4b9180be7" name="src/Standards/Squiz/Sniffs/Debug/JSLintSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="33fad95c2d0bd577f9775d7e17063828" name="src/Standards/Squiz/Sniffs/Files/FileExtensionSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="16eebb03d388c6dfe9674e005346a3e7" name="src/Standards/Squiz/Sniffs/Formatting/OperatorBracketSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="c844596940c8b4a1eb500baabefaa408" name="src/Standards/Squiz/Sniffs/Functions/FunctionDeclarationArgumentSpacingSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="d0a450834ade8b79f75b2505d5936d5f" name="src/Standards/Squiz/Sniffs/Functions/FunctionDeclarationSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="feec9b65ca07ed26642102c8da3034a9" name="src/Standards/Squiz/Sniffs/Functions/FunctionDuplicateArgumentSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="e4b01c46543988da389aad7ebebfcf7e" name="src/Standards/Squiz/Sniffs/Functions/GlobalFunctionSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="23da8986b4c76addaad843b01584f7ec" name="src/Standards/Squiz/Sniffs/Functions/LowercaseFunctionKeywordsSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="ea64e369a01bace1de08259c9d9ea2b6" name="src/Standards/Squiz/Sniffs/Functions/MultiLineFunctionDeclarationSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="f29ffb4994f5aa3a15953c37677f53a4" name="src/Standards/Squiz/Sniffs/NamingConventions/ValidFunctionNameSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="6e8fbda02c8b08a9161a916aa2ee7587" name="src/Standards/Squiz/Sniffs/NamingConventions/ValidVariableNameSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="49c4a1b4123e266f288ad7b723f0b29b" name="src/Standards/Squiz/Sniffs/Objects/DisallowObjectStringIndexSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="31c96454482d49f900f0518dd27a1550" name="src/Standards/Squiz/Sniffs/Objects/ObjectInstantiationSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="d6aa9234fc213d2a6bafb5c9f53bbde1" name="src/Standards/Squiz/Sniffs/Objects/ObjectMemberCommaSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="e1f07035233291e7722b4d5634b454be" name="src/Standards/Squiz/Sniffs/Operators/ComparisonOperatorUsageSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="f952e881583b29a2d8f3ff9f458efd85" name="src/Standards/Squiz/Sniffs/Operators/IncrementDecrementUsageSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="7a86025206c65e757494921f17d7400d" name="src/Standards/Squiz/Sniffs/Operators/ValidLogicalOperatorsSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="bb4c0b7383f80898b80c546d488945dd" name="src/Standards/Squiz/Sniffs/PHP/CommentedOutCodeSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="3371b9116e110e3c189b0935a3180a7b" name="src/Standards/Squiz/Sniffs/PHP/DisallowBooleanStatementSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="2a1bfe7a954489d8b5bb42d162ef3c03" name="src/Standards/Squiz/Sniffs/PHP/DisallowComparisonAssignmentSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="70a43c23fb6f04deaba0d8ef5f761690" name="src/Standards/Squiz/Sniffs/PHP/DisallowInlineIfSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="03bda76eb9384f3be39ed9be5228c02b" name="src/Standards/Squiz/Sniffs/PHP/DisallowMultipleAssignmentsSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="6a393673173a84727f67cdbe514a7b25" name="src/Standards/Squiz/Sniffs/PHP/DisallowSizeFunctionsInLoopsSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="b576207641c4ba310701a08f5062c011" name="src/Standards/Squiz/Sniffs/PHP/DiscouragedFunctionsSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="1c6617a7ea5b482135db5bfffa2e9e2a" name="src/Standards/Squiz/Sniffs/PHP/EmbeddedPhpSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="d53b523cb6f948cfc75f6d6663a606ae" name="src/Standards/Squiz/Sniffs/PHP/EvalSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="da6776a84c980bdbdba4256157f51fa8" name="src/Standards/Squiz/Sniffs/PHP/GlobalKeywordSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="933ff29286e5d003f78bc4ac53edaa43" name="src/Standards/Squiz/Sniffs/PHP/HeredocSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="6bcb49381ead4c61b2324b57ab238ca8" name="src/Standards/Squiz/Sniffs/PHP/InnerFunctionsSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="8233d03c88c375b5332176e8ef13f08d" name="src/Standards/Squiz/Sniffs/PHP/LowercasePHPFunctionsSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="06c7911748edd2ca0304e48277c56d05" name="src/Standards/Squiz/Sniffs/PHP/NonExecutableCodeSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="8fa384d133dbfcfe6421795b4042314b" name="src/Standards/Squiz/Sniffs/Scope/MemberVarScopeSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="6627ad2c050524a2eae429405a57c93b" name="src/Standards/Squiz/Sniffs/Scope/MethodScopeSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="73ea19370d6d1daa130fad6a8b3c871c" name="src/Standards/Squiz/Sniffs/Scope/StaticThisUsageSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="22d29b20b09882209f833638a0cada92" name="src/Standards/Squiz/Sniffs/Strings/ConcatenationSpacingSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="3732480531dba3fbdc41abd9d5e1a17a" name="src/Standards/Squiz/Sniffs/Strings/DoubleQuoteUsageSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="9b5dfe8f8ed5e0b01a52f76be3516ab8" name="src/Standards/Squiz/Sniffs/Strings/EchoedStringsSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="1ea05aafa46750a4398684dccc6ada8a" name="src/Standards/Squiz/Sniffs/WhiteSpace/CastSpacingSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="bf1a21a9cf03c071649bbef5bc8ead01" name="src/Standards/Squiz/Sniffs/WhiteSpace/ControlStructureSpacingSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="beb04a1f8ad7115f0ba6cd16a5b1dd96" name="src/Standards/Squiz/Sniffs/WhiteSpace/FunctionClosingBraceSpaceSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="8929c8346712e9a8591a9a5453a8792e" name="src/Standards/Squiz/Sniffs/WhiteSpace/FunctionOpeningBraceSpaceSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="10f6cc8b41addadc0ef585927a1c52af" name="src/Standards/Squiz/Sniffs/WhiteSpace/FunctionSpacingSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="84516a6e742aa6eba2a7ba3035bc50a2" name="src/Standards/Squiz/Sniffs/WhiteSpace/LanguageConstructSpacingSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="6cff4dfcbabcc2c5320400c640021439" name="src/Standards/Squiz/Sniffs/WhiteSpace/LogicalOperatorSpacingSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="4b08ee29f5ca4c8cc2e7d87fbb36e840" name="src/Standards/Squiz/Sniffs/WhiteSpace/MemberVarSpacingSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="9db8c694f8080bdab4739a72163e73f8" name="src/Standards/Squiz/Sniffs/WhiteSpace/ObjectOperatorSpacingSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="7298d7a5e0050ef7f185766e8aef2e6f" name="src/Standards/Squiz/Sniffs/WhiteSpace/OperatorSpacingSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="8f59c64731149022099df97029bb4bc3" name="src/Standards/Squiz/Sniffs/WhiteSpace/PropertyLabelSpacingSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="fcb5b64b6484dec8f1701302fec46b06" name="src/Standards/Squiz/Sniffs/WhiteSpace/ScopeClosingBraceSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="48d70cfc3003247c1369550626f9ed84" name="src/Standards/Squiz/Sniffs/WhiteSpace/ScopeKeywordSpacingSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="c46f98578947d279dc6d5e864cf74c54" name="src/Standards/Squiz/Sniffs/WhiteSpace/SemicolonSpacingSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="877edd6beae0f13f5edd1c32f5584af0" name="src/Standards/Squiz/Sniffs/WhiteSpace/SuperfluousWhitespaceSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="fd0afea674829ba0b4e0341d057167e6" name="src/Standards/Squiz/Tests/Arrays/ArrayBracketSpacingUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="fcb6def13ce17c5db9008890cb45109d" name="src/Standards/Squiz/Tests/Arrays/ArrayBracketSpacingUnitTest.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="a0be15edb95af8b9ad68d5d9f5f21d3c" name="src/Standards/Squiz/Tests/Arrays/ArrayBracketSpacingUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="f3b71a142c0d8e81f8b1629090a01a8f" name="src/Standards/Squiz/Tests/Arrays/ArrayDeclarationUnitTest.1.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="aa46046abd48976b24b5ae90ae3c3ad1" name="src/Standards/Squiz/Tests/Arrays/ArrayDeclarationUnitTest.1.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="15fe7757efaa4ee453ad3ea65cb29fec" name="src/Standards/Squiz/Tests/Arrays/ArrayDeclarationUnitTest.2.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="cce31a3edc61a853fc6296b7443227be" name="src/Standards/Squiz/Tests/Arrays/ArrayDeclarationUnitTest.2.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="336f612a8efabf128d96b7b3456e5f97" name="src/Standards/Squiz/Tests/Arrays/ArrayDeclarationUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="9fb7779079d23d739b24e3e144ff2dce" name="src/Standards/Squiz/Tests/Classes/ClassDeclarationUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="8000f8d4bdfcbca24a9b769931743c54" name="src/Standards/Squiz/Tests/Classes/ClassDeclarationUnitTest.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="c4ac1afe6af3f1a797821905b799463a" name="src/Standards/Squiz/Tests/Classes/ClassDeclarationUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="fff4607c2155e1db60b36e6890ec5698" name="src/Standards/Squiz/Tests/Classes/ClassFileNameUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="6dd1e5a8c66b3401e561b48c29351806" name="src/Standards/Squiz/Tests/Classes/ClassFileNameUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="0a7bc2a8b85e22763ad5adb0c01b06de" name="src/Standards/Squiz/Tests/Classes/DuplicatePropertyUnitTest.js" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="437176370cde606f15c06c1e448d494e" name="src/Standards/Squiz/Tests/Classes/DuplicatePropertyUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="c59fbb8486fa9f379d1d5f2f5a352436" name="src/Standards/Squiz/Tests/Classes/LowercaseClassKeywordsUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="a0e885cf65864d19aea5e1bb9ebdcffe" name="src/Standards/Squiz/Tests/Classes/LowercaseClassKeywordsUnitTest.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="515d652379c34b61d3276c0afc2bc200" name="src/Standards/Squiz/Tests/Classes/LowercaseClassKeywordsUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="1475dd688049336d9065b48882ce68b6" name="src/Standards/Squiz/Tests/Classes/SelfMemberReferenceUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="69bbc4ba81c84e1f46ce081f29eeed61" name="src/Standards/Squiz/Tests/Classes/SelfMemberReferenceUnitTest.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="a4193e2def00695414b6f93a74a49bd8" name="src/Standards/Squiz/Tests/Classes/SelfMemberReferenceUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="adc161211f4f17177d3927a6855d3cf9" name="src/Standards/Squiz/Tests/Classes/ValidClassNameUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="f22ff1fe958b937bb87b4d5065a108bd" name="src/Standards/Squiz/Tests/Classes/ValidClassNameUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="4acb49299ee69e30a9a4024667c0f210" name="src/Standards/Squiz/Tests/Commenting/BlockCommentUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="106d0d34a509433462ef589b253914b1" name="src/Standards/Squiz/Tests/Commenting/BlockCommentUnitTest.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="9332c3bd2cbb1bff2a27437fccb9b035" name="src/Standards/Squiz/Tests/Commenting/BlockCommentUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="41536928f20e1d1ca620fd162fef9772" name="src/Standards/Squiz/Tests/Commenting/ClassCommentUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="a11241d0cd163bc7de4f6a0eb04cabeb" name="src/Standards/Squiz/Tests/Commenting/ClassCommentUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="40f5d975140c230a73fe6a0a1727bf09" name="src/Standards/Squiz/Tests/Commenting/ClosingDeclarationCommentUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="a0cabd7224f98b71221437a1d25995b9" name="src/Standards/Squiz/Tests/Commenting/ClosingDeclarationCommentUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="fd33ae0f0c011b144c050f132cb48f30" name="src/Standards/Squiz/Tests/Commenting/DocCommentAlignmentUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="09fe6f6cdd2ddfd141cacaa9ad0605dc" name="src/Standards/Squiz/Tests/Commenting/DocCommentAlignmentUnitTest.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="fb6f4ff2e215affe14b32193813aa025" name="src/Standards/Squiz/Tests/Commenting/DocCommentAlignmentUnitTest.js" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="b463638040d881c21d334569b0658385" name="src/Standards/Squiz/Tests/Commenting/DocCommentAlignmentUnitTest.js.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="267d23fc47e032a9dcb451ce2e4e0899" name="src/Standards/Squiz/Tests/Commenting/DocCommentAlignmentUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="bd5ceb4b2be0db33e6a3bcccf5b5410c" name="src/Standards/Squiz/Tests/Commenting/EmptyCatchCommentUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="b2471c41198e6931156d269c01e7095f" name="src/Standards/Squiz/Tests/Commenting/EmptyCatchCommentUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="3c7efdee9b1fea51841f167651dec8ce" name="src/Standards/Squiz/Tests/Commenting/FileCommentUnitTest.1.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="595d54af0883fe1bb8b93c392c3769a3" name="src/Standards/Squiz/Tests/Commenting/FileCommentUnitTest.1.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="abbbe7166e9c54a6cd820625cdab91c7" name="src/Standards/Squiz/Tests/Commenting/FileCommentUnitTest.2.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="91fc5604bf7cd83d51ed774a35462e48" name="src/Standards/Squiz/Tests/Commenting/FileCommentUnitTest.3.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="af3b581603c7d263cef276c6036a80f8" name="src/Standards/Squiz/Tests/Commenting/FileCommentUnitTest.4.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="e203b96c952ef49d78f67bdbaf662ba9" name="src/Standards/Squiz/Tests/Commenting/FileCommentUnitTest.5.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="81181d6cfa8b015d94b3ebe236a19e4e" name="src/Standards/Squiz/Tests/Commenting/FileCommentUnitTest.6.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="0cb3eebff3c2c0d3c818d9bcc5a894d7" name="src/Standards/Squiz/Tests/Commenting/FileCommentUnitTest.1.js" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="542e5a9b6119e5cdb38a3e692e33ca44" name="src/Standards/Squiz/Tests/Commenting/FileCommentUnitTest.1.js.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="576abf8b90755dd9b2dbffc4340489dd" name="src/Standards/Squiz/Tests/Commenting/FileCommentUnitTest.2.js" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="12f0150911db37af771e21961c4c98e1" name="src/Standards/Squiz/Tests/Commenting/FileCommentUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="ae074caac641c04fab8ce09885570a4c" name="src/Standards/Squiz/Tests/Commenting/FunctionCommentThrowTagUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="ab5b74d16b1805046e362bdb27af3e4f" name="src/Standards/Squiz/Tests/Commenting/FunctionCommentThrowTagUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="83b828d8429ab953cdabde2a8ea6cdf4" name="src/Standards/Squiz/Tests/Commenting/FunctionCommentUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="66038dd18f710e3ca1d2538abe94148b" name="src/Standards/Squiz/Tests/Commenting/FunctionCommentUnitTest.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="4d685e0f7d3fc4e67b5d3564ea66cd1c" name="src/Standards/Squiz/Tests/Commenting/FunctionCommentUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="17a531ff7af6efb6611931038330f49f" name="src/Standards/Squiz/Tests/Commenting/InlineCommentUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="04ef13791b329bcfad2b83b276a72b09" name="src/Standards/Squiz/Tests/Commenting/InlineCommentUnitTest.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="7cc0b6013bf807d4db87d335f54ac74f" name="src/Standards/Squiz/Tests/Commenting/InlineCommentUnitTest.js" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="afd343d7fc51bbf4a3f4750d8ce2b772" name="src/Standards/Squiz/Tests/Commenting/InlineCommentUnitTest.js.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="781c84544e144074c093d459b4838982" name="src/Standards/Squiz/Tests/Commenting/InlineCommentUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="c3a965d08ed106dc46e4401e53c5f77c" name="src/Standards/Squiz/Tests/Commenting/LongConditionClosingCommentUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="34b2e5565e1ff3a4d9db2046019a8951" name="src/Standards/Squiz/Tests/Commenting/LongConditionClosingCommentUnitTest.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="43579da3cde159d42600e001632b812e" name="src/Standards/Squiz/Tests/Commenting/LongConditionClosingCommentUnitTest.js" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="61346106a5b1f90999dd9d3c8bbb786d" name="src/Standards/Squiz/Tests/Commenting/LongConditionClosingCommentUnitTest.js.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="16d8494e5e0d0785f05b4b356a51d645" name="src/Standards/Squiz/Tests/Commenting/LongConditionClosingCommentUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="667fea84bcbbe3ed2d21cf1f9fb37b0c" name="src/Standards/Squiz/Tests/Commenting/PostStatementCommentUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="94a4286ec82eacfae3fafc7123e7e1fb" name="src/Standards/Squiz/Tests/Commenting/PostStatementCommentUnitTest.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="573501a6855d6bf401823ad2d14aefce" name="src/Standards/Squiz/Tests/Commenting/PostStatementCommentUnitTest.1.js" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="c17a0dd7e56db494cac78126009e8003" name="src/Standards/Squiz/Tests/Commenting/PostStatementCommentUnitTest.1.js.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="af3bfe1fd25b70829e5e24f30ca1297e" name="src/Standards/Squiz/Tests/Commenting/PostStatementCommentUnitTest.2.js" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="33eedf4e75f329efe5e1060deeac284c" name="src/Standards/Squiz/Tests/Commenting/PostStatementCommentUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="34a808ff75f9e70b90071d94f8585326" name="src/Standards/Squiz/Tests/Commenting/VariableCommentUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="58c5c9ed4802f127316684be98c691ad" name="src/Standards/Squiz/Tests/Commenting/VariableCommentUnitTest.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="2f08594d2ac4530c556daa81e0157f96" name="src/Standards/Squiz/Tests/Commenting/VariableCommentUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="7514fdbbf2910fcf2d639025af50a23e" name="src/Standards/Squiz/Tests/ControlStructures/ControlSignatureUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="f4a1f80e1e6a8d8827997a96a9d4991f" name="src/Standards/Squiz/Tests/ControlStructures/ControlSignatureUnitTest.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="59b35ab3a110d5509cd8aa17c200c763" name="src/Standards/Squiz/Tests/ControlStructures/ControlSignatureUnitTest.js" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="e7f3e46e0c0feb540780e93831229303" name="src/Standards/Squiz/Tests/ControlStructures/ControlSignatureUnitTest.js.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="932cc7e8c1e71781d059cd6b674a2746" name="src/Standards/Squiz/Tests/ControlStructures/ControlSignatureUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="e408d3e048440f14ce4e08cb36a8efe3" name="src/Standards/Squiz/Tests/ControlStructures/ElseIfDeclarationUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="91a772d57dd7301241a80678d7d4d529" name="src/Standards/Squiz/Tests/ControlStructures/ElseIfDeclarationUnitTest.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="f61c09fd45d250d41cb2226238bae88a" name="src/Standards/Squiz/Tests/ControlStructures/ElseIfDeclarationUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="d2414be4cd9b7cf5138c554fbb1415bd" name="src/Standards/Squiz/Tests/ControlStructures/ForEachLoopDeclarationUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="6fc909657937ccbd68f87f2288efcf62" name="src/Standards/Squiz/Tests/ControlStructures/ForEachLoopDeclarationUnitTest.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="0507d59fb55a30d1f9ef3f4d176bb398" name="src/Standards/Squiz/Tests/ControlStructures/ForEachLoopDeclarationUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="271268fceca939e40f3221ae1d68638a" name="src/Standards/Squiz/Tests/ControlStructures/ForLoopDeclarationUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="9dcf76cbf653d5f3e5c2bad0a325c753" name="src/Standards/Squiz/Tests/ControlStructures/ForLoopDeclarationUnitTest.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="c65b8583b7de1c8a3b83d29ef08162da" name="src/Standards/Squiz/Tests/ControlStructures/ForLoopDeclarationUnitTest.js" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="bfddf4854472fe61eb443e996ebc3e6c" name="src/Standards/Squiz/Tests/ControlStructures/ForLoopDeclarationUnitTest.js.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="b549c60d121089dd0a09df73b71baf7f" name="src/Standards/Squiz/Tests/ControlStructures/ForLoopDeclarationUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="613dddba3229d8cd34e3228ab464b4fb" name="src/Standards/Squiz/Tests/ControlStructures/InlineIfDeclarationUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="0b58b513240f7b56a3be900d7f6c7864" name="src/Standards/Squiz/Tests/ControlStructures/InlineIfDeclarationUnitTest.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="954e159eea390f49d313dfee7824e2d6" name="src/Standards/Squiz/Tests/ControlStructures/InlineIfDeclarationUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="32cb321c029b195c87c3e80efa8820f3" name="src/Standards/Squiz/Tests/ControlStructures/LowercaseDeclarationUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="655fa1d31eb73651345ba4a397b5be40" name="src/Standards/Squiz/Tests/ControlStructures/LowercaseDeclarationUnitTest.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="1082821867ee16bcba1419c8e2e4f21e" name="src/Standards/Squiz/Tests/ControlStructures/LowercaseDeclarationUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="91822c9ed9dfba45bc92d559d7f09139" name="src/Standards/Squiz/Tests/ControlStructures/SwitchDeclarationUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="80b28899e249cedc82bbbc15865857a1" name="src/Standards/Squiz/Tests/ControlStructures/SwitchDeclarationUnitTest.js" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="831d5a193dbae5f77a4acffead806776" name="src/Standards/Squiz/Tests/ControlStructures/SwitchDeclarationUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="02a832c65cc57e55565f5787f767f718" name="src/Standards/Squiz/Tests/CSS/ClassDefinitionClosingBraceSpaceUnitTest.css" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="18bb856cf61ed1cbbabea0a65d7934bb" name="src/Standards/Squiz/Tests/CSS/ClassDefinitionClosingBraceSpaceUnitTest.css.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="44163635fd123b03e7d180691e0e380b" name="src/Standards/Squiz/Tests/CSS/ClassDefinitionClosingBraceSpaceUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="d399ba00a63ed83bc4faa6d5d3c6cc61" name="src/Standards/Squiz/Tests/CSS/ClassDefinitionNameSpacingUnitTest.css" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="053fdfd1d2b01343dd9f8865c5776971" name="src/Standards/Squiz/Tests/CSS/ClassDefinitionNameSpacingUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="ba708ef387f754e504198bf6227017a7" name="src/Standards/Squiz/Tests/CSS/ClassDefinitionOpeningBraceSpaceUnitTest.css" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="34ab800f5e1c7395309ddf16bd29dc42" name="src/Standards/Squiz/Tests/CSS/ClassDefinitionOpeningBraceSpaceUnitTest.css.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="642ffd1bfc20a4d471dae9124a4c5821" name="src/Standards/Squiz/Tests/CSS/ClassDefinitionOpeningBraceSpaceUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="5f791098b0aaa13ae00fc036a733bb6b" name="src/Standards/Squiz/Tests/CSS/ColonSpacingUnitTest.css" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="2ad388618ce07c32f652d431db9179be" name="src/Standards/Squiz/Tests/CSS/ColonSpacingUnitTest.css.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="953dd2ba519f08101748852c3436ee53" name="src/Standards/Squiz/Tests/CSS/ColonSpacingUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="bec7be79bfd8262ba1da1f686e2cc709" name="src/Standards/Squiz/Tests/CSS/ColourDefinitionUnitTest.css" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="c6e67838fee2cca94e19657be7644c0d" name="src/Standards/Squiz/Tests/CSS/ColourDefinitionUnitTest.css.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="8d03deba9dfcba66d6e55499b1e2f9d0" name="src/Standards/Squiz/Tests/CSS/ColourDefinitionUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="b57477c17b7e537012a5bdafe1355627" name="src/Standards/Squiz/Tests/CSS/DisallowMultipleStyleDefinitionsUnitTest.css" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="abb5583975ffbd88127927d0f4a9d3ac" name="src/Standards/Squiz/Tests/CSS/DisallowMultipleStyleDefinitionsUnitTest.css.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="b2edf40d657f0bc1782ccf05651172bc" name="src/Standards/Squiz/Tests/CSS/DisallowMultipleStyleDefinitionsUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="b869af179cff4508ffa1b5afdd636cb4" name="src/Standards/Squiz/Tests/CSS/DuplicateClassDefinitionUnitTest.css" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="947d69d16819d36bd415c1db041e72cd" name="src/Standards/Squiz/Tests/CSS/DuplicateClassDefinitionUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="57724122ad387263ea7cc3cdd5f643a2" name="src/Standards/Squiz/Tests/CSS/DuplicateStyleDefinitionUnitTest.css" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="d49a367a18b68180a5f6bd94a2798eac" name="src/Standards/Squiz/Tests/CSS/DuplicateStyleDefinitionUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="77b9a0d303ff0ac416c6ca50878f681a" name="src/Standards/Squiz/Tests/CSS/EmptyClassDefinitionUnitTest.css" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="8a65a09f00a9249057a8a6a0de260962" name="src/Standards/Squiz/Tests/CSS/EmptyClassDefinitionUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="4055f9ba761fb2edebf02aef68c3238f" name="src/Standards/Squiz/Tests/CSS/EmptyStyleDefinitionUnitTest.css" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="16259f9bf550424707de795c14561a6c" name="src/Standards/Squiz/Tests/CSS/EmptyStyleDefinitionUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="b99ec31e7abeb15dda84917b93fd1ffa" name="src/Standards/Squiz/Tests/CSS/ForbiddenStylesUnitTest.css" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="fc47f910d9217d02fb05e8f348a37a40" name="src/Standards/Squiz/Tests/CSS/ForbiddenStylesUnitTest.css.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="b5af58395aeae4e5337f8d9538cf41d6" name="src/Standards/Squiz/Tests/CSS/ForbiddenStylesUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="8692db8c49f4150f1517d5f524b5a30a" name="src/Standards/Squiz/Tests/CSS/IndentationUnitTest.1.css" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="c52439ad8a2c040692381de7cbb70b22" name="src/Standards/Squiz/Tests/CSS/IndentationUnitTest.1.css.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="d29536b69c2c8723afdb4a1c57b57d6e" name="src/Standards/Squiz/Tests/CSS/IndentationUnitTest.2.css" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="4b78a6f9ca92e85e952cc921cb3e537b" name="src/Standards/Squiz/Tests/CSS/IndentationUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="3b4f098417b9972da271d83a8d206eba" name="src/Standards/Squiz/Tests/CSS/LowercaseStyleDefinitionUnitTest.css" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="c26e23e4dc50ed1a604a45bb38d4b614" name="src/Standards/Squiz/Tests/CSS/LowercaseStyleDefinitionUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="2acd492671333c5bdd7a5e1b65252796" name="src/Standards/Squiz/Tests/CSS/MissingColonUnitTest.css" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="a2e954bd8594bacee27400ce5b620692" name="src/Standards/Squiz/Tests/CSS/MissingColonUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="b80911ca79d9c09c75200786cd127d18" name="src/Standards/Squiz/Tests/CSS/NamedColoursUnitTest.css" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="fac3f62dba5ccb4360a1260d02e7a59a" name="src/Standards/Squiz/Tests/CSS/NamedColoursUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="5864236f3ddb225494897fd10a7c27db" name="src/Standards/Squiz/Tests/CSS/OpacityUnitTest.css" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="fc12891d2a58a2267776ea0930175139" name="src/Standards/Squiz/Tests/CSS/OpacityUnitTest.css.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="02cf8f2b00f8677408ea539b2d6e6ff6" name="src/Standards/Squiz/Tests/CSS/OpacityUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="a6660b82a9ff82e57b67511c96090b26" name="src/Standards/Squiz/Tests/CSS/SemicolonSpacingUnitTest.css" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="7d3969bff01da0e74619e02cb0755e0a" name="src/Standards/Squiz/Tests/CSS/SemicolonSpacingUnitTest.css.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="1abba486ae97447d47d215d9dc8b1602" name="src/Standards/Squiz/Tests/CSS/SemicolonSpacingUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="c17711f56d9bab573a81692fe27e036e" name="src/Standards/Squiz/Tests/CSS/ShorthandSizeUnitTest.css" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="8e8df3b55fc3a914e7eef327c81543e1" name="src/Standards/Squiz/Tests/CSS/ShorthandSizeUnitTest.css.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="c7bd3d3d4d1a52791040315922fbad44" name="src/Standards/Squiz/Tests/CSS/ShorthandSizeUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="1520165c698662022e7be947dc12f169" name="src/Standards/Squiz/Tests/Debug/JavaScriptLintUnitTest.js" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="646d942cbdd569220d248f2cf9283ac1" name="src/Standards/Squiz/Tests/Debug/JavaScriptLintUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="1520165c698662022e7be947dc12f169" name="src/Standards/Squiz/Tests/Debug/JSLintUnitTest.js" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="8f4a370c6b18dca40bdb3fd371931ec6" name="src/Standards/Squiz/Tests/Debug/JSLintUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="be37337314c486c5dd1b9cc14fab778a" name="src/Standards/Squiz/Tests/Files/FileExtensionUnitTest.1.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="25d62895e4d8ebfa1dcb66b91b429522" name="src/Standards/Squiz/Tests/Files/FileExtensionUnitTest.2.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="17f25206d6209f4f0e372e75078384e8" name="src/Standards/Squiz/Tests/Files/FileExtensionUnitTest.3.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="e57201637cb7067959f671a1cf66d8f9" name="src/Standards/Squiz/Tests/Files/FileExtensionUnitTest.4.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="1a3f3ca5322f1a4fe4b40fc88f410104" name="src/Standards/Squiz/Tests/Files/FileExtensionUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="620df1c14091df4289f33513280ea9a5" name="src/Standards/Squiz/Tests/Formatting/OperatorBracketUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="103e3717a1fd459d7cacfd3674423d5e" name="src/Standards/Squiz/Tests/Formatting/OperatorBracketUnitTest.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="e5ddc2021b662a4a96d7beea379b001f" name="src/Standards/Squiz/Tests/Formatting/OperatorBracketUnitTest.js" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="70d9baf73e8fab8f3abc9b0fa5f4c0e7" name="src/Standards/Squiz/Tests/Formatting/OperatorBracketUnitTest.js.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="b46c777814a22bf26ae268ada17c5c3b" name="src/Standards/Squiz/Tests/Formatting/OperatorBracketUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="e5233eeac06f11320d149c945a728894" name="src/Standards/Squiz/Tests/Functions/FunctionDeclarationArgumentSpacingUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="4da3f83cf94089627db53dcd488a08e3" name="src/Standards/Squiz/Tests/Functions/FunctionDeclarationArgumentSpacingUnitTest.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="73e1ffb22f2e9a146063f778c16eee20" name="src/Standards/Squiz/Tests/Functions/FunctionDeclarationArgumentSpacingUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="c08baa89811cdbdc954a158fbf9c0e58" name="src/Standards/Squiz/Tests/Functions/FunctionDeclarationUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="10bdcdb73a96ceadf4f851fd4ac89f10" name="src/Standards/Squiz/Tests/Functions/FunctionDeclarationUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="40c76171708f9cf69b18df5ec613a160" name="src/Standards/Squiz/Tests/Functions/FunctionDuplicateArgumentUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="596d293285331dd8f4e1d15ce983d21d" name="src/Standards/Squiz/Tests/Functions/FunctionDuplicateArgumentUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="a1f4cf0dc05b9729c87031c9ac7ce7fe" name="src/Standards/Squiz/Tests/Functions/GlobalFunctionUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="49fcfcf4bc82169749fef9eef2e6738c" name="src/Standards/Squiz/Tests/Functions/GlobalFunctionUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="ae00061280080cf49f37bcef3c844e38" name="src/Standards/Squiz/Tests/Functions/LowercaseFunctionKeywordsUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="0121455323f7e31ae4f1b2be9fd567ef" name="src/Standards/Squiz/Tests/Functions/LowercaseFunctionKeywordsUnitTest.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="28edb317b5f21eab4d8613980ce261eb" name="src/Standards/Squiz/Tests/Functions/LowercaseFunctionKeywordsUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="d7989838c956e7a9964320211c88c7fc" name="src/Standards/Squiz/Tests/Functions/MultiLineFunctionDeclarationUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="036f4ceb176fb42245983b0b312f3d5a" name="src/Standards/Squiz/Tests/Functions/MultiLineFunctionDeclarationUnitTest.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="205e2b3f2c2b48cacffeaa459c2dc9f2" name="src/Standards/Squiz/Tests/Functions/MultiLineFunctionDeclarationUnitTest.js" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="341231f8752f0edc4b42e1b4fc6976e1" name="src/Standards/Squiz/Tests/Functions/MultiLineFunctionDeclarationUnitTest.js.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="05bc1cc1e177ceba054682f14507fcf8" name="src/Standards/Squiz/Tests/Functions/MultiLineFunctionDeclarationUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="20d042f2561a82a56947aab8a7a1cf8c" name="src/Standards/Squiz/Tests/NamingConventions/ValidFunctionNameUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="4039295af2c06338fbed3887f9d4a2f6" name="src/Standards/Squiz/Tests/NamingConventions/ValidFunctionNameUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="a937b0078f6777581b48c443750a438b" name="src/Standards/Squiz/Tests/NamingConventions/ValidVariableNameUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="49f18d8fa61d715edc79f24c080fb578" name="src/Standards/Squiz/Tests/NamingConventions/ValidVariableNameUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="8ef3b508c7fd7ffab6cc719710e04528" name="src/Standards/Squiz/Tests/Objects/DisallowObjectStringIndexUnitTest.js" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="21df5af73154fe2eafbaa3bacc446f59" name="src/Standards/Squiz/Tests/Objects/DisallowObjectStringIndexUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="5190c711dee3ed7c3753991c78b7ad6e" name="src/Standards/Squiz/Tests/Objects/ObjectInstantiationUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="a79a118e81da936377727007096c3f97" name="src/Standards/Squiz/Tests/Objects/ObjectInstantiationUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="85e686848ad1c3a6d55ad67bc134c815" name="src/Standards/Squiz/Tests/Objects/ObjectMemberCommaUnitTest.js" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="f1007663761972ba930f7187761f7916" name="src/Standards/Squiz/Tests/Objects/ObjectMemberCommaUnitTest.js.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="d2ed97971c4867bdb4f9e91b1e3755a5" name="src/Standards/Squiz/Tests/Objects/ObjectMemberCommaUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="bfe674c142584abfc56d0afb7a971959" name="src/Standards/Squiz/Tests/Operators/ComparisonOperatorUsageUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="1300c7e02dea95e50336a03253ee0410" name="src/Standards/Squiz/Tests/Operators/ComparisonOperatorUsageUnitTest.js" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="5e9aca903aab02075596a29e8a2f8aa3" name="src/Standards/Squiz/Tests/Operators/ComparisonOperatorUsageUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="23369e2679b2e65e3bdd60bcf66aef06" name="src/Standards/Squiz/Tests/Operators/IncrementDecrementUsageUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="2b0642b2ceb0b24b64231f005ecf5c12" name="src/Standards/Squiz/Tests/Operators/IncrementDecrementUsageUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="d84aa7555232ff2d80a1bd693a5f3051" name="src/Standards/Squiz/Tests/Operators/ValidLogicalOperatorsUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="a515358e18a402e98b716f27cbd932b8" name="src/Standards/Squiz/Tests/Operators/ValidLogicalOperatorsUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="577301f12c6ff2d01aafc240b1d06f50" name="src/Standards/Squiz/Tests/PHP/CommentedOutCodeUnitTest.css" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="81a63aeea2b9db1d3cd63a6444bbfbc2" name="src/Standards/Squiz/Tests/PHP/CommentedOutCodeUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="fe66e737e94984b86fc7c1da6354656e" name="src/Standards/Squiz/Tests/PHP/CommentedOutCodeUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="c79f8150f1c4bb47c5e71d554af2cdf7" name="src/Standards/Squiz/Tests/PHP/DisallowBooleanStatementUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="ef20823bad0d82376183af3d1a31753f" name="src/Standards/Squiz/Tests/PHP/DisallowBooleanStatementUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="cd792da0b988271c8bb34384cf142741" name="src/Standards/Squiz/Tests/PHP/DisallowComparisonAssignmentUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="14ed5be0cd7bac4b959c6cc64da25246" name="src/Standards/Squiz/Tests/PHP/DisallowComparisonAssignmentUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="0822dc5f8fd121a58f7113d2a2921459" name="src/Standards/Squiz/Tests/PHP/DisallowInlineIfUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="63c336680e2908416d79cf4cccb8cb7a" name="src/Standards/Squiz/Tests/PHP/DisallowInlineIfUnitTest.js" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="da82f49f7700820c1af2778f037d39f1" name="src/Standards/Squiz/Tests/PHP/DisallowInlineIfUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="f8e71ed5413e9f77daf1898eb258421a" name="src/Standards/Squiz/Tests/PHP/DisallowMultipleAssignmentsUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="faafeca8bf6f90794cb33c239907d815" name="src/Standards/Squiz/Tests/PHP/DisallowMultipleAssignmentsUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="d7b48f6ff4d1a4961f5c9e44e3fabd23" name="src/Standards/Squiz/Tests/PHP/DisallowSizeFunctionsInLoopsUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="5ec514d06fbc6d792c4f7426729067da" name="src/Standards/Squiz/Tests/PHP/DisallowSizeFunctionsInLoopsUnitTest.js" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="c5ae8a61600e905e49897209e22feb28" name="src/Standards/Squiz/Tests/PHP/DisallowSizeFunctionsInLoopsUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="a23fe4c3523d8c028adb71827943de99" name="src/Standards/Squiz/Tests/PHP/DiscouragedFunctionsUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="215f56e103b389b0572eada6842ac642" name="src/Standards/Squiz/Tests/PHP/DiscouragedFunctionsUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="6c20a1d9ef1dc4873e818321cf2ad75f" name="src/Standards/Squiz/Tests/PHP/EmbeddedPhpUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="5243880375678db61c5e97d0e3c04acc" name="src/Standards/Squiz/Tests/PHP/EmbeddedPhpUnitTest.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="3e66cb59f878278328012f5d7810ea30" name="src/Standards/Squiz/Tests/PHP/EmbeddedPhpUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="de21467c03d30646f8449d8a9ebe71f8" name="src/Standards/Squiz/Tests/PHP/EvalUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="fc16b6a6af035f12bd320fa3fccd5149" name="src/Standards/Squiz/Tests/PHP/EvalUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="2f7b5881e4dd6c9bb523e12619a06be3" name="src/Standards/Squiz/Tests/PHP/GlobalKeywordUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="17549eed60a5154663ae80a4d7ac6849" name="src/Standards/Squiz/Tests/PHP/GlobalKeywordUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="66efb65578d76d98c82ead0fa52efb1a" name="src/Standards/Squiz/Tests/PHP/HeredocUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="89f1218bc5c58360929807ed2c09c8de" name="src/Standards/Squiz/Tests/PHP/HeredocUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="eb884c29f3501a726513d0f26ba8f963" name="src/Standards/Squiz/Tests/PHP/InnerFunctionsUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="0b5bff0fee210050df455fec16d63941" name="src/Standards/Squiz/Tests/PHP/InnerFunctionsUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="46adda4fcde812c713489e9db61500f3" name="src/Standards/Squiz/Tests/PHP/LowercasePHPFunctionsUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="bdb1c696821539e441b7b8e1d246c40f" name="src/Standards/Squiz/Tests/PHP/LowercasePHPFunctionsUnitTest.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="09476273b4909cb8ba359dd409172ac9" name="src/Standards/Squiz/Tests/PHP/LowercasePHPFunctionsUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="6060dd009984f6f597f11501fbdf96f3" name="src/Standards/Squiz/Tests/PHP/NonExecutableCodeUnitTest.1.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="4e749fcca774f97d44d93ca2a4f9021d" name="src/Standards/Squiz/Tests/PHP/NonExecutableCodeUnitTest.2.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="a02ba30b406a99fed2c3fa46ee6316af" name="src/Standards/Squiz/Tests/PHP/NonExecutableCodeUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="563faa789fd59f58f7f4333dad472d30" name="src/Standards/Squiz/Tests/Scope/MemberVarScopeUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="40d222ce21e449daa3cdd2402470f7c6" name="src/Standards/Squiz/Tests/Scope/MemberVarScopeUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="1239f638845bd85ff323adaf97caa858" name="src/Standards/Squiz/Tests/Scope/MethodScopeUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="9793a0c67d2fee986bd57999d4d8b6df" name="src/Standards/Squiz/Tests/Scope/MethodScopeUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="6a1350d6f0368df86199e06dd75f4408" name="src/Standards/Squiz/Tests/Scope/StaticThisUsageUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="80b70a58fe48a7b18bb88efb9a7ebf46" name="src/Standards/Squiz/Tests/Scope/StaticThisUsageUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="e2fc2c8d0c402651bca3c8e4734259a9" name="src/Standards/Squiz/Tests/Strings/ConcatenationSpacingUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="4e00b181fbbc987e5147052bc3ae71c6" name="src/Standards/Squiz/Tests/Strings/ConcatenationSpacingUnitTest.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="bb85d746154269716f967c9518944449" name="src/Standards/Squiz/Tests/Strings/ConcatenationSpacingUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="99ded5af4d5891b285ae9ffc6691f1d2" name="src/Standards/Squiz/Tests/Strings/DoubleQuoteUsageUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="3e7ed53489c4f8ab8eee413008bbb6f0" name="src/Standards/Squiz/Tests/Strings/DoubleQuoteUsageUnitTest.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="4a824d033d5c9e54596be07ed83a9588" name="src/Standards/Squiz/Tests/Strings/DoubleQuoteUsageUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="e154ee9b2752786e9aeaf84a3be3b26c" name="src/Standards/Squiz/Tests/Strings/EchoedStringsUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="e54703d24d8cb441b878debfa3660a7c" name="src/Standards/Squiz/Tests/Strings/EchoedStringsUnitTest.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="fbd8dc600c3f8f6dfe8cadb5c25f37fe" name="src/Standards/Squiz/Tests/Strings/EchoedStringsUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="6592830bcbfea5f8c88410b97f61858b" name="src/Standards/Squiz/Tests/WhiteSpace/CastSpacingUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="d9137ef6106cbe89001ea5b2f7931886" name="src/Standards/Squiz/Tests/WhiteSpace/CastSpacingUnitTest.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="981b4dae5928d3f50d78106320feda93" name="src/Standards/Squiz/Tests/WhiteSpace/CastSpacingUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="ab36a1ee7e3fb2c4351d23870f47ae23" name="src/Standards/Squiz/Tests/WhiteSpace/ControlStructureSpacingUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="5e46a290655b9a5478a81ea781744caf" name="src/Standards/Squiz/Tests/WhiteSpace/ControlStructureSpacingUnitTest.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="cb6497ba4543b4c65cc0fb4b9db8604e" name="src/Standards/Squiz/Tests/WhiteSpace/ControlStructureSpacingUnitTest.js" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="b51e51bd46569e181605facb315e2858" name="src/Standards/Squiz/Tests/WhiteSpace/ControlStructureSpacingUnitTest.js.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="a29f6c134fcc71fb2342e10377e3c289" name="src/Standards/Squiz/Tests/WhiteSpace/ControlStructureSpacingUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="b1ae53b61eb8d71bc76fff3ef041ab57" name="src/Standards/Squiz/Tests/WhiteSpace/FunctionClosingBraceSpaceUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="8de1d9e8935eff4bd42eb0f97d2fe00a" name="src/Standards/Squiz/Tests/WhiteSpace/FunctionClosingBraceSpaceUnitTest.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="607d90c9b262847f79aa01f1607fb005" name="src/Standards/Squiz/Tests/WhiteSpace/FunctionClosingBraceSpaceUnitTest.js" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="c5806eddc2201b13f44aa862d30dce52" name="src/Standards/Squiz/Tests/WhiteSpace/FunctionClosingBraceSpaceUnitTest.js.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="23978ebdf262e096141fd47324dc137d" name="src/Standards/Squiz/Tests/WhiteSpace/FunctionClosingBraceSpaceUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="afbff121df241a128e67e19dcc21fb22" name="src/Standards/Squiz/Tests/WhiteSpace/FunctionOpeningBraceSpaceUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="e032abe134bcd237638b0907090657ad" name="src/Standards/Squiz/Tests/WhiteSpace/FunctionOpeningBraceSpaceUnitTest.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="113d9703288ace78ab84dea953e0b539" name="src/Standards/Squiz/Tests/WhiteSpace/FunctionOpeningBraceSpaceUnitTest.js" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="bf3db5ca65bedee227f7c63c4c17f990" name="src/Standards/Squiz/Tests/WhiteSpace/FunctionOpeningBraceSpaceUnitTest.js.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="5c9693c709ce15321a3509fcd3abaffc" name="src/Standards/Squiz/Tests/WhiteSpace/FunctionOpeningBraceSpaceUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="f1bc8a186aaa4b337879767193c9f389" name="src/Standards/Squiz/Tests/WhiteSpace/FunctionSpacingUnitTest.1.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="8ced93fd9634004cea192d51ddfd6f95" name="src/Standards/Squiz/Tests/WhiteSpace/FunctionSpacingUnitTest.1.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="732a28f3c74b24add2efb4bfd6b568f8" name="src/Standards/Squiz/Tests/WhiteSpace/FunctionSpacingUnitTest.2.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="150941f8ea7f00bfa266b495216d23fc" name="src/Standards/Squiz/Tests/WhiteSpace/FunctionSpacingUnitTest.2.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="8e331a805352ebbad5bd750f56f9c202" name="src/Standards/Squiz/Tests/WhiteSpace/FunctionSpacingUnitTest.3.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="5172b720e99006fc2e6f75a1036fa626" name="src/Standards/Squiz/Tests/WhiteSpace/FunctionSpacingUnitTest.3.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="42cf610d50bf38d1600a823f6166f920" name="src/Standards/Squiz/Tests/WhiteSpace/FunctionSpacingUnitTest.4.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="7d53f2bd36dd68747ac2ce8975583417" name="src/Standards/Squiz/Tests/WhiteSpace/FunctionSpacingUnitTest.5.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="7677fc4e4a16df992f478e7c1ce8994b" name="src/Standards/Squiz/Tests/WhiteSpace/FunctionSpacingUnitTest.5.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="1fc4b32a4f62c6fa7984d8235fb21275" name="src/Standards/Squiz/Tests/WhiteSpace/FunctionSpacingUnitTest.6.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="cde0abd84f58e2ff5478ee46240dc40c" name="src/Standards/Squiz/Tests/WhiteSpace/FunctionSpacingUnitTest.6.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="4617702e87a9b96a19e9842ff0d2af4a" name="src/Standards/Squiz/Tests/WhiteSpace/FunctionSpacingUnitTest.7.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="654829f148847c7eca4fb9e33467f747" name="src/Standards/Squiz/Tests/WhiteSpace/FunctionSpacingUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="e15cee7cac7b551a5f461a2179d3f94a" name="src/Standards/Squiz/Tests/WhiteSpace/LanguageConstructSpacingUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="c76480c777adbd2ba2f365aa678d891a" name="src/Standards/Squiz/Tests/WhiteSpace/LanguageConstructSpacingUnitTest.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="2299e64beb30d780c205d82d26e89d00" name="src/Standards/Squiz/Tests/WhiteSpace/LanguageConstructSpacingUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="821d64d1786ccc30d35a5b22d94e9d69" name="src/Standards/Squiz/Tests/WhiteSpace/LogicalOperatorSpacingUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="35295ec04ae8bc373efe6bd910edf201" name="src/Standards/Squiz/Tests/WhiteSpace/LogicalOperatorSpacingUnitTest.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="ec247ab19da2cebf43a7070537110d5a" name="src/Standards/Squiz/Tests/WhiteSpace/LogicalOperatorSpacingUnitTest.js" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="d5b9c125e986b64f45312326f1068147" name="src/Standards/Squiz/Tests/WhiteSpace/LogicalOperatorSpacingUnitTest.js.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="f21d1e1df0f421c634fa97da739d212d" name="src/Standards/Squiz/Tests/WhiteSpace/LogicalOperatorSpacingUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="803fd190eb88fa109edf53d3e8b745a3" name="src/Standards/Squiz/Tests/WhiteSpace/MemberVarSpacingUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="e511604661e0ec9afa729ba6b7c11d48" name="src/Standards/Squiz/Tests/WhiteSpace/MemberVarSpacingUnitTest.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="2f3b664475dc32bf693b9fa29a71f6e8" name="src/Standards/Squiz/Tests/WhiteSpace/MemberVarSpacingUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="fbfe15e0c8549c050a87960e41b0e747" name="src/Standards/Squiz/Tests/WhiteSpace/ObjectOperatorSpacingUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="ae48eea1c74cfd2e98ef59a70e5a533b" name="src/Standards/Squiz/Tests/WhiteSpace/ObjectOperatorSpacingUnitTest.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="504e6e65c6bc87f4756ddb5be0395419" name="src/Standards/Squiz/Tests/WhiteSpace/ObjectOperatorSpacingUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="d3417976c5abda3b37b091f4dae25086" name="src/Standards/Squiz/Tests/WhiteSpace/OperatorSpacingUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="768a5d657720e9cd27b7f1ee5bd2aa84" name="src/Standards/Squiz/Tests/WhiteSpace/OperatorSpacingUnitTest.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="3e358910c2b918e5e83b81b66bdd56b3" name="src/Standards/Squiz/Tests/WhiteSpace/OperatorSpacingUnitTest.js" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="4d4f1619506b5b9ece0225b019c11d0b" name="src/Standards/Squiz/Tests/WhiteSpace/OperatorSpacingUnitTest.js.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="c76a5502df235a7d63644c9cffce3444" name="src/Standards/Squiz/Tests/WhiteSpace/OperatorSpacingUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="da0413395da00d0f977217b70302d25d" name="src/Standards/Squiz/Tests/WhiteSpace/PropertyLabelSpacingUnitTest.js" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="88165fa182c44839f6ccc72a11836910" name="src/Standards/Squiz/Tests/WhiteSpace/PropertyLabelSpacingUnitTest.js.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="de2094ff2d623c135a63a0855d38f2f1" name="src/Standards/Squiz/Tests/WhiteSpace/PropertyLabelSpacingUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="549341c05c5e662fffeb630f2f11bda8" name="src/Standards/Squiz/Tests/WhiteSpace/ScopeClosingBraceUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="7dc5e0456c3ce83d83336bad8ebc7b22" name="src/Standards/Squiz/Tests/WhiteSpace/ScopeClosingBraceUnitTest.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="942c7fd515e18f6886db86bfc3b270fe" name="src/Standards/Squiz/Tests/WhiteSpace/ScopeClosingBraceUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="23f703b95f32db03851e0dacee3baf03" name="src/Standards/Squiz/Tests/WhiteSpace/ScopeKeywordSpacingUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="587f60a4cfe67afcaa9ddc5753fefc38" name="src/Standards/Squiz/Tests/WhiteSpace/ScopeKeywordSpacingUnitTest.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="79d375b0ac42de95d8a82ac730aca465" name="src/Standards/Squiz/Tests/WhiteSpace/ScopeKeywordSpacingUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="4c6e3852b0913b73d520acfd9891d374" name="src/Standards/Squiz/Tests/WhiteSpace/SemicolonSpacingUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="58583ff2d4d3de0ce0a81ead7e708425" name="src/Standards/Squiz/Tests/WhiteSpace/SemicolonSpacingUnitTest.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="949538c76d249b71ab357d427068b61a" name="src/Standards/Squiz/Tests/WhiteSpace/SemicolonSpacingUnitTest.js" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="e0deb8cde4729eda4845a9d8952bac0a" name="src/Standards/Squiz/Tests/WhiteSpace/SemicolonSpacingUnitTest.js.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="8028bd312acd19df409d9646a766eb11" name="src/Standards/Squiz/Tests/WhiteSpace/SemicolonSpacingUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="d91e5fe62052a80adca6f8a83b366878" name="src/Standards/Squiz/Tests/WhiteSpace/SuperfluousWhitespaceUnitTest.1.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="c42e5e313d6ef94f6610f40418102ee1" name="src/Standards/Squiz/Tests/WhiteSpace/SuperfluousWhitespaceUnitTest.1.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="a830c48420802ba17ba6c516eb089899" name="src/Standards/Squiz/Tests/WhiteSpace/SuperfluousWhitespaceUnitTest.2.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="40aad3152e7e13c5fff9f648f8a9bb90" name="src/Standards/Squiz/Tests/WhiteSpace/SuperfluousWhitespaceUnitTest.2.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="e9f2cfa761d9e3627566709ef0f9c82a" name="src/Standards/Squiz/Tests/WhiteSpace/SuperfluousWhitespaceUnitTest.3.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="205ecb40e2f7f10d92e4a66e65032a60" name="src/Standards/Squiz/Tests/WhiteSpace/SuperfluousWhitespaceUnitTest.3.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="1bc21ef3a4ebdce5fbc630664dc0f146" name="src/Standards/Squiz/Tests/WhiteSpace/SuperfluousWhitespaceUnitTest.4.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="470b8811b2e270e4edf7803aa9fca9aa" name="src/Standards/Squiz/Tests/WhiteSpace/SuperfluousWhitespaceUnitTest.4.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="a26add6ff624afdd5f9e30200cdf613b" name="src/Standards/Squiz/Tests/WhiteSpace/SuperfluousWhitespaceUnitTest.5.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="885b49d7364bf4268678cd1d50c2e415" name="src/Standards/Squiz/Tests/WhiteSpace/SuperfluousWhitespaceUnitTest.5.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="be0c89b8551cb443022e6e8c7f4f0090" name="src/Standards/Squiz/Tests/WhiteSpace/SuperfluousWhitespaceUnitTest.1.css" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="67071c87cf29bebe0d4438defb3800be" name="src/Standards/Squiz/Tests/WhiteSpace/SuperfluousWhitespaceUnitTest.1.css.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="ebdf1b14b3e83e6e2f60a5abb98ff885" name="src/Standards/Squiz/Tests/WhiteSpace/SuperfluousWhitespaceUnitTest.1.js" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="8dcbc92a470fb96019dac6343682996f" name="src/Standards/Squiz/Tests/WhiteSpace/SuperfluousWhitespaceUnitTest.1.js.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="baf92f82e3a847c22a9bcf9b9a99a877" name="src/Standards/Squiz/Tests/WhiteSpace/SuperfluousWhitespaceUnitTest.2.css" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="baf92f82e3a847c22a9bcf9b9a99a877" name="src/Standards/Squiz/Tests/WhiteSpace/SuperfluousWhitespaceUnitTest.2.css.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="9e863b0f9736094640695df276d28a5f" name="src/Standards/Squiz/Tests/WhiteSpace/SuperfluousWhitespaceUnitTest.2.js" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="9e863b0f9736094640695df276d28a5f" name="src/Standards/Squiz/Tests/WhiteSpace/SuperfluousWhitespaceUnitTest.2.js.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="0b2a58da33e1dceb27b4639bfa7712db" name="src/Standards/Squiz/Tests/WhiteSpace/SuperfluousWhitespaceUnitTest.3.css" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="baf92f82e3a847c22a9bcf9b9a99a877" name="src/Standards/Squiz/Tests/WhiteSpace/SuperfluousWhitespaceUnitTest.3.css.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="ef6402a7c8e295ab5e14040444ec8966" name="src/Standards/Squiz/Tests/WhiteSpace/SuperfluousWhitespaceUnitTest.3.js" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="ef6402a7c8e295ab5e14040444ec8966" name="src/Standards/Squiz/Tests/WhiteSpace/SuperfluousWhitespaceUnitTest.3.js.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="8f747ffdd037ba84e13595df61aaaf94" name="src/Standards/Squiz/Tests/WhiteSpace/SuperfluousWhitespaceUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="4f35c3e4e375bd837e51285ec751e572" name="src/Standards/Squiz/ruleset.xml" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="df3def6cd28696007438c6bfe673940d" name="src/Standards/Zend/Docs/Debug/CodeAnalyzerStandard.xml" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="5a51bc9e0b47020e47390d251e58231e" name="src/Standards/Zend/Docs/Files/ClosingTagStandard.xml" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="7498e0cfcbfce753833a75e7749d5de8" name="src/Standards/Zend/Docs/NamingConventions/ValidVariableNameStandard.xml" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="36e84cf97415f5ac8fe7895b9bcc8632" name="src/Standards/Zend/Sniffs/Debug/CodeAnalyzerSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="d283967b2b4c908e58d8f15775176713" name="src/Standards/Zend/Sniffs/Files/ClosingTagSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="d4faa625d26a1c7e51bf4395f0486eac" name="src/Standards/Zend/Sniffs/NamingConventions/ValidVariableNameSniff.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="a1e9dfd0c2235e9794c00c063fc559e3" name="src/Standards/Zend/Tests/Debug/CodeAnalyzerUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="322ac143c14dac69b9c0941558f40f0e" name="src/Standards/Zend/Tests/Debug/CodeAnalyzerUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="30e574c8ad654205192b5a41ff5b90b7" name="src/Standards/Zend/Tests/Files/ClosingTagUnitTest.1.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="6626442a4a4cfa52fb48fd7474b568fc" name="src/Standards/Zend/Tests/Files/ClosingTagUnitTest.1.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="85f16eee60aa5afe701a70ad9564b0df" name="src/Standards/Zend/Tests/Files/ClosingTagUnitTest.2.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="d9d00747ff141e34b0a769858cae5599" name="src/Standards/Zend/Tests/Files/ClosingTagUnitTest.3.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="e03eb3c08d7f034c86ca5b0e6beef61a" name="src/Standards/Zend/Tests/Files/ClosingTagUnitTest.3.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="5e665aeff877adc01d424b5e6b9757a8" name="src/Standards/Zend/Tests/Files/ClosingTagUnitTest.4.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="b682c8b7ade8193e1138d45c7fb50475" name="src/Standards/Zend/Tests/Files/ClosingTagUnitTest.4.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="f6cfea84e6694d0076a526d26675d2d9" name="src/Standards/Zend/Tests/Files/ClosingTagUnitTest.5.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="1bdadf0c3ceb6df3631d465ef0cfcdd7" name="src/Standards/Zend/Tests/Files/ClosingTagUnitTest.5.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="4b184590a7b1949ed81d6756d1101866" name="src/Standards/Zend/Tests/Files/ClosingTagUnitTest.6.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="509e1c4be28264f30f1ffce2ce8b9be8" name="src/Standards/Zend/Tests/Files/ClosingTagUnitTest.6.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="4a778e5e9f9b391182cca210239cb18a" name="src/Standards/Zend/Tests/Files/ClosingTagUnitTest.7.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="f2df28461071ccafcb3259a8743aba46" name="src/Standards/Zend/Tests/Files/ClosingTagUnitTest.7.inc.fixed" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="6b62a7a04ee15317a780f54ee90fae0d" name="src/Standards/Zend/Tests/Files/ClosingTagUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="ead7c3bfda5d0f5345e1aaa7d5c89eab" name="src/Standards/Zend/Tests/NamingConventions/ValidVariableNameUnitTest.inc" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="f611b9dbe0d0b9cf91d31671fbf17706" name="src/Standards/Zend/Tests/NamingConventions/ValidVariableNameUnitTest.php" role="test" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="f6990b337fdd6af1880fa5cf12d5aaf5" name="src/Standards/Zend/ruleset.xml" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="f25a0f212dc14a6a6849b865c1645ef6" name="src/Tokenizers/Comment.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="dd1416d55f9416486323dd588b16c0b7" name="src/Tokenizers/CSS.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="ebb399b697aa3339590c5aceb10f7eaf" name="src/Tokenizers/JS.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="eda69730afcf83150574d74c340228de" name="src/Tokenizers/PHP.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="8b9dc8352c807e7838e10261040a3767" name="src/Tokenizers/Tokenizer.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="ce77efab66f83e47f51aa8119c0c6009" name="src/Util/Cache.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="29a5c041eb7af2ae41b2263a80258c4f" name="src/Util/Common.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="f7a8e6caa7d69337aff366c5e1c34943" name="src/Util/Standards.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="b8d175de373c575d369da217b2b66090" name="src/Util/Timing.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="a6be5dcbec9f28ccc206868222b68e53" name="src/Util/Tokens.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="fcb25dc77512f691b2f0bf281dd97003" name="src/Config.php" role="php">
    <tasks:replace from="@data_dir@" to="data_dir" type="pear-config" />
   </file>
   <file baseinstalldir="PHP/CodeSniffer" md5sum="5d755f5366eaa169f548bb56ae635d27" name="src/Fixer.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="3ac6c5032c843766e579a520cbdf20e4" name="src/Reporter.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="260c17dbfa785c4bd5402602ea249fab" name="src/Ruleset.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="25e1cb8e7586d19d8c05e2ccf765d3fd" name="src/Runner.php" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="9399524713032139bb91c06c28d22aa5" name="autoload.php" role="php">
    <tasks:replace from="@test_dir@" to="test_dir" type="pear-config" />
   </file>
   <file baseinstalldir="PHP/CodeSniffer" md5sum="73ec809ff8b56cfb0d5c4fcc91ef5584" name="CodeSniffer.conf.dist" role="data" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="783d01f01cc5f46b9a6ef59af0be64b5" name="README.md" role="doc" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="38639857b03609ace59166be5f6e7df2" name="CONTRIBUTING.md" role="doc" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="562f463f305c4d32b4fad9a4b03ad678" name="licence.txt" role="doc" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="235cda9e43c70269a4dc9929efa4d214" name="phpcs.xml.dist" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="a2fa19f38bfade91084b8466e2718d89" name="phpcs.xsd" role="php" />
   <file baseinstalldir="PHP/CodeSniffer" md5sum="3d9e32aee8345092e2672ea6455df30a" name="phpunit.xml.dist" role="test" />
  </dir>
 </contents>
 <dependencies>
  <required>
   <php>
    <min>5.4.0</min>
   </php>
   <pearinstaller>
    <min>1.4.0b1</min>
   </pearinstaller>
   <extension>
    <name>tokenizer</name>
   </extension>
   <extension>
    <name>xmlwriter</name>
   </extension>
   <extension>
    <name>simplexml</name>
   </extension>
  </required>
 </dependencies>
 <phprelease>
  <installconditions>
   <os>
    <name>windows</name>
   </os>
  </installconditions>
  <filelist>
   <install as="phpcs" name="bin/phpcs" />
   <install as="phpcbf" name="bin/phpcbf" />
   <install as="phpcs.bat" name="bin/phpcs.bat" />
   <install as="phpcbf.bat" name="bin/phpcbf.bat" />
   <install as="README" name="README.md" />
   <install as="CONTRIBUTING" name="CONTRIBUTING.md" />
   <install as="LICENCE" name="licence.txt" />
   <install as="phpunit.xml" name="phpunit.xml.dist" />
   <install as="AllTests.php" name="tests/AllTests.php" />
   <install as="FileList.php" name="tests/FileList.php" />
   <install as="TestSuite.php" name="tests/TestSuite.php" />
   <install as="TestSuite7.php" name="tests/TestSuite7.php" />
   <install as="tests/bootstrap.php" name="tests/bootstrap.php" />
   <install as="CodeSniffer/Core/AbstractMethodUnitTest.php" name="tests/Core/AbstractMethodUnitTest.php" />
   <install as="CodeSniffer/Core/AllTests.php" name="tests/Core/AllTests.php" />
   <install as="CodeSniffer/Core/IsCamelCapsTest.php" name="tests/Core/IsCamelCapsTest.php" />
   <install as="CodeSniffer/Core/ErrorSuppressionTest.php" name="tests/Core/ErrorSuppressionTest.php" />
   <install as="CodeSniffer/Core/File/FindEndOfStatementTest.php" name="tests/Core/File/FindEndOfStatementTest.php" />
   <install as="CodeSniffer/Core/File/FindEndOfStatementTest.inc" name="tests/Core/File/FindEndOfStatementTest.inc" />
   <install as="CodeSniffer/Core/File/FindExtendedClassNameTest.php" name="tests/Core/File/FindExtendedClassNameTest.php" />
   <install as="CodeSniffer/Core/File/FindExtendedClassNameTest.inc" name="tests/Core/File/FindExtendedClassNameTest.inc" />
   <install as="CodeSniffer/Core/File/FindImplementedInterfaceNamesTest.php" name="tests/Core/File/FindImplementedInterfaceNamesTest.php" />
   <install as="CodeSniffer/Core/File/FindImplementedInterfaceNamesTest.inc" name="tests/Core/File/FindImplementedInterfaceNamesTest.inc" />
   <install as="CodeSniffer/Core/File/GetMemberPropertiesTest.php" name="tests/Core/File/GetMemberPropertiesTest.php" />
   <install as="CodeSniffer/Core/File/GetMemberPropertiesTest.inc" name="tests/Core/File/GetMemberPropertiesTest.inc" />
   <install as="CodeSniffer/Core/File/GetMethodParametersTest.php" name="tests/Core/File/GetMethodParametersTest.php" />
   <install as="CodeSniffer/Core/File/GetMethodParametersTest.inc" name="tests/Core/File/GetMethodParametersTest.inc" />
   <install as="CodeSniffer/Core/File/GetMethodPropertiesTest.php" name="tests/Core/File/GetMethodPropertiesTest.php" />
   <install as="CodeSniffer/Core/File/GetMethodPropertiesTest.inc" name="tests/Core/File/GetMethodPropertiesTest.inc" />
   <install as="CodeSniffer/Core/File/IsReferenceTest.php" name="tests/Core/File/IsReferenceTest.php" />
   <install as="CodeSniffer/Core/File/IsReferenceTest.inc" name="tests/Core/File/IsReferenceTest.inc" />
   <install as="CodeSniffer/Core/Filters/Filter/AcceptTest.php" name="tests/Core/Filters/Filter/AcceptTest.php" />
   <install as="CodeSniffer/Core/Filters/Filter/AcceptTest.xml" name="tests/Core/Filters/Filter/AcceptTest.xml" />
   <install as="CodeSniffer/Core/Ruleset/RuleInclusionTest.php" name="tests/Core/Ruleset/RuleInclusionTest.php" />
   <install as="CodeSniffer/Core/Ruleset/RuleInclusionTest.xml" name="tests/Core/Ruleset/RuleInclusionTest.xml" />
   <install as="CodeSniffer/Core/Ruleset/RuleInclusionTest-include.xml" name="tests/Core/Ruleset/RuleInclusionTest-include.xml" />
   <install as="CodeSniffer/Core/Ruleset/RuleInclusionAbsoluteLinuxTest.php" name="tests/Core/Ruleset/RuleInclusionAbsoluteLinuxTest.php" />
   <install as="CodeSniffer/Core/Ruleset/RuleInclusionAbsoluteLinuxTest.xml" name="tests/Core/Ruleset/RuleInclusionAbsoluteLinuxTest.xml" />
   <install as="CodeSniffer/Core/Ruleset/RuleInclusionAbsoluteWindowsTest.php" name="tests/Core/Ruleset/RuleInclusionAbsoluteWindowsTest.php" />
   <install as="CodeSniffer/Core/Ruleset/RuleInclusionAbsoluteWindowsTest.xml" name="tests/Core/Ruleset/RuleInclusionAbsoluteWindowsTest.xml" />
   <install as="CodeSniffer/Core/Sniffs/AbstractArraySniffTest.inc" name="tests/Core/Sniffs/AbstractArraySniffTest.inc" />
   <install as="CodeSniffer/Core/Sniffs/AbstractArraySniffTest.php" name="tests/Core/Sniffs/AbstractArraySniffTest.php" />
   <install as="CodeSniffer/Core/Sniffs/AbstractArraySniffTestable.php" name="tests/Core/Sniffs/AbstractArraySniffTestable.php" />
   <install as="CodeSniffer/Core/Tokenizer/AnonClassParenthesisOwnerTest.php" name="tests/Core/Tokenizer/AnonClassParenthesisOwnerTest.php" />
   <install as="CodeSniffer/Core/Tokenizer/AnonClassParenthesisOwnerTest.inc" name="tests/Core/Tokenizer/AnonClassParenthesisOwnerTest.inc" />
   <install as="CodeSniffer/Core/Tokenizer/BackfillFnTokenTest.php" name="tests/Core/Tokenizer/BackfillFnTokenTest.php" />
   <install as="CodeSniffer/Core/Tokenizer/BackfillFnTokenTest.inc" name="tests/Core/Tokenizer/BackfillFnTokenTest.inc" />
   <install as="CodeSniffer/Core/Tokenizer/BackfillNumericSeparatorTest.php" name="tests/Core/Tokenizer/BackfillNumericSeparatorTest.php" />
   <install as="CodeSniffer/Core/Tokenizer/BackfillNumericSeparatorTest.inc" name="tests/Core/Tokenizer/BackfillNumericSeparatorTest.inc" />
   <install as="CodeSniffer/Standards/AllSniffs.php" name="tests/Standards/AllSniffs.php" />
   <install as="CodeSniffer/Standards/AbstractSniffUnitTest.php" name="tests/Standards/AbstractSniffUnitTest.php" />
  </filelist>
 </phprelease>
 <phprelease>
  <filelist>
   <install as="phpcs" name="bin/phpcs" />
   <install as="phpcbf" name="bin/phpcbf" />
   <install as="README" name="README.md" />
   <install as="CONTRIBUTING" name="CONTRIBUTING.md" />
   <install as="LICENCE" name="licence.txt" />
   <install as="phpunit.xml" name="phpunit.xml.dist" />
   <install as="tests/AllTests.php" name="tests/AllTests.php" />
   <install as="tests/bootstrap.php" name="tests/bootstrap.php" />
   <install as="tests/FileList.php" name="tests/FileList.php" />
   <install as="tests/TestSuite.php" name="tests/TestSuite.php" />
   <install as="tests/TestSuite7.php" name="tests/TestSuite7.php" />
   <install as="CodeSniffer/Core/AbstractMethodUnitTest.php" name="tests/Core/AbstractMethodUnitTest.php" />
   <install as="CodeSniffer/Core/AllTests.php" name="tests/Core/AllTests.php" />
   <install as="CodeSniffer/Core/IsCamelCapsTest.php" name="tests/Core/IsCamelCapsTest.php" />
   <install as="CodeSniffer/Core/ErrorSuppressionTest.php" name="tests/Core/ErrorSuppressionTest.php" />
   <install as="CodeSniffer/Core/File/FindEndOfStatementTest.php" name="tests/Core/File/FindEndOfStatementTest.php" />
   <install as="CodeSniffer/Core/File/FindEndOfStatementTest.inc" name="tests/Core/File/FindEndOfStatementTest.inc" />
   <install as="CodeSniffer/Core/File/FindExtendedClassNameTest.php" name="tests/Core/File/FindExtendedClassNameTest.php" />
   <install as="CodeSniffer/Core/File/FindExtendedClassNameTest.inc" name="tests/Core/File/FindExtendedClassNameTest.inc" />
   <install as="CodeSniffer/Core/File/FindImplementedInterfaceNamesTest.php" name="tests/Core/File/FindImplementedInterfaceNamesTest.php" />
   <install as="CodeSniffer/Core/File/FindImplementedInterfaceNamesTest.inc" name="tests/Core/File/FindImplementedInterfaceNamesTest.inc" />
   <install as="CodeSniffer/Core/File/GetMemberPropertiesTest.php" name="tests/Core/File/GetMemberPropertiesTest.php" />
   <install as="CodeSniffer/Core/File/GetMemberPropertiesTest.inc" name="tests/Core/File/GetMemberPropertiesTest.inc" />
   <install as="CodeSniffer/Core/File/GetMethodParametersTest.php" name="tests/Core/File/GetMethodParametersTest.php" />
   <install as="CodeSniffer/Core/File/GetMethodParametersTest.inc" name="tests/Core/File/GetMethodParametersTest.inc" />
   <install as="CodeSniffer/Core/File/GetMethodPropertiesTest.php" name="tests/Core/File/GetMethodPropertiesTest.php" />
   <install as="CodeSniffer/Core/File/GetMethodPropertiesTest.inc" name="tests/Core/File/GetMethodPropertiesTest.inc" />
   <install as="CodeSniffer/Core/File/IsReferenceTest.php" name="tests/Core/File/IsReferenceTest.php" />
   <install as="CodeSniffer/Core/File/IsReferenceTest.inc" name="tests/Core/File/IsReferenceTest.inc" />
   <install as="CodeSniffer/Core/Filters/Filter/AcceptTest.php" name="tests/Core/Filters/Filter/AcceptTest.php" />
   <install as="CodeSniffer/Core/Filters/Filter/AcceptTest.xml" name="tests/Core/Filters/Filter/AcceptTest.xml" />
   <install as="CodeSniffer/Core/Ruleset/RuleInclusionTest.php" name="tests/Core/Ruleset/RuleInclusionTest.php" />
   <install as="CodeSniffer/Core/Ruleset/RuleInclusionTest.xml" name="tests/Core/Ruleset/RuleInclusionTest.xml" />
   <install as="CodeSniffer/Core/Ruleset/RuleInclusionTest-include.xml" name="tests/Core/Ruleset/RuleInclusionTest-include.xml" />
   <install as="CodeSniffer/Core/Ruleset/RuleInclusionAbsoluteLinuxTest.php" name="tests/Core/Ruleset/RuleInclusionAbsoluteLinuxTest.php" />
   <install as="CodeSniffer/Core/Ruleset/RuleInclusionAbsoluteLinuxTest.xml" name="tests/Core/Ruleset/RuleInclusionAbsoluteLinuxTest.xml" />
   <install as="CodeSniffer/Core/Ruleset/RuleInclusionAbsoluteWindowsTest.php" name="tests/Core/Ruleset/RuleInclusionAbsoluteWindowsTest.php" />
   <install as="CodeSniffer/Core/Ruleset/RuleInclusionAbsoluteWindowsTest.xml" name="tests/Core/Ruleset/RuleInclusionAbsoluteWindowsTest.xml" />
   <install as="CodeSniffer/Core/Sniffs/AbstractArraySniffTest.inc" name="tests/Core/Sniffs/AbstractArraySniffTest.inc" />
   <install as="CodeSniffer/Core/Sniffs/AbstractArraySniffTest.php" name="tests/Core/Sniffs/AbstractArraySniffTest.php" />
   <install as="CodeSniffer/Core/Sniffs/AbstractArraySniffTestable.php" name="tests/Core/Sniffs/AbstractArraySniffTestable.php" />
   <install as="CodeSniffer/Core/Tokenizer/AnonClassParenthesisOwnerTest.php" name="tests/Core/Tokenizer/AnonClassParenthesisOwnerTest.php" />
   <install as="CodeSniffer/Core/Tokenizer/AnonClassParenthesisOwnerTest.inc" name="tests/Core/Tokenizer/AnonClassParenthesisOwnerTest.inc" />
   <install as="CodeSniffer/Core/Tokenizer/BackfillFnTokenTest.php" name="tests/Core/Tokenizer/BackfillFnTokenTest.php" />
   <install as="CodeSniffer/Core/Tokenizer/BackfillFnTokenTest.inc" name="tests/Core/Tokenizer/BackfillFnTokenTest.inc" />
   <install as="CodeSniffer/Core/Tokenizer/BackfillNumericSeparatorTest.php" name="tests/Core/Tokenizer/BackfillNumericSeparatorTest.php" />
   <install as="CodeSniffer/Core/Tokenizer/BackfillNumericSeparatorTest.inc" name="tests/Core/Tokenizer/BackfillNumericSeparatorTest.inc" />
   <install as="CodeSniffer/Standards/AllSniffs.php" name="tests/Standards/AllSniffs.php" />
   <install as="CodeSniffer/Standards/AbstractSniffUnitTest.php" name="tests/Standards/AbstractSniffUnitTest.php" />
   <ignore name="bin/phpcs.bat" />
   <ignore name="bin/phpcbf.bat" />
  </filelist>
 </phprelease>
 <changelog>
  <release>
   <version>
    <release>3.5.4</release>
    <api>3.5.4</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <date>2020-01-31</date>
   <license uri="https://github.com/squizlabs/PHP_CodeSniffer/blob/master/licence.txt">BSD License</license>
   <notes>
- The PHP 7.4 numeric separator backfill now works correctly for more float formats
  -- Thanks to Juliette Reinders Folmer for the patch
- The PHP 7.4 numeric separator backfill is no longer run on PHP version 7.4.0 or greater
- File::getCondition() now accepts a 3rd argument that allows for the closest matching token to be returned
  -- By default, it continues to return the first matched token found from the top of the file
- Fixed detection of array return types for arrow functions
- Added Generic.PHP.DisallowRequestSuperglobal to ban the use of the $_REQUEST superglobal
  -- Thanks to Morerice for the contribution
- Generic.ControlStructures.InlineControlStructure no longer shows errors for WHILE and FOR statements without a body
  -- Previously it required these to have curly braces, but there were no statements to enclose in them
  -- Thanks to Juliette Reinders Folmer for the patch
- PSR12.ControlStructures.BooleanOperatorPlacement can now be configured to enforce a specific operator position
  -- By default, the sniff ensures that operators are all at the begining or end of lines, but not a mix of both
  -- Set the allowOnly property to &quot;first&quot; to enforce all boolean operators to be at the start of a line
  -- Set the allowOnly property to &quot;last&quot; to enforce all boolean operators to be at the end of a line
  -- Thanks to Vincent Langlet for the patch
- PSR12.Files.ImportStatement now auto-fixes import statements by removing the leading slash
  -- Thanks to Michał Bundyra for the patch
- Squiz.ControlStructures.ForLoopDeclaration now has a setting to ignore newline characters
  -- Default remains FALSE, so newlines are not allowed within FOR definitions
  -- Override the &quot;ignoreNewlines&quot; setting in a ruleset.xml file to change
- Squiz.PHP.InnerFunctions now handles multiple nested anon classes correctly
- Fixed bug #2497 : Sniff properties not set when referencing a sniff using relative paths or non-native slashes
  -- Thanks to Juliette Reinders Folmer for the patch
- Fixed bug #2657 : Squiz.WhiteSpace.FunctionSpacing can remove spaces between comment and first/last method during auto-fixing
  -- Thanks to Juliette Reinders Folmer for the patch
- Fixed bug #2688 : Case statements not tokenized correctly when switch is contained within ternary
- Fixed bug #2698 : PHPCS throws errors determining auto report width when shell_exec is disabled
  -- Thanks to Matthew Peveler for the patch
- Fixed bug #2730 : PSR12.ControlStructures.ControlStructureSpacing does not ignore comments between conditions
  -- Thanks to Juliette Reinders Folmer for the patch
- Fixed bug #2732 : PSR12.Files.FileHeader misidentifies file header in mixed content file
- Fixed bug #2745 : AbstractArraySniff wrong indices when mixed coalesce and ternary values
  -- Thanks to Michał Bundyra for the patch
- Fixed bug #2748 : Wrong end of statement for fn closures
  -- Thanks to Michał Bundyra for the patch
- Fixed bug #2751 : Autoload relative paths first to avoid confusion with files from the global include path
  -- Thanks to Klaus Purer for the patch
- Fixed bug #2763 : PSR12 standard reports errors for multi-line FOR definitions
- Fixed bug #2768 : Generic.Files.LineLength false positive for non-breakable strings at exactly the soft limit
  -- Thanks to Alex Miles for the patch
- Fixed bug #2773 : PSR2.Methods.FunctionCallSignature false positive when arrow function has array return type
- Fixed bug #2790 : PSR12.Traits.UseDeclaration ignores block comments
  -- Thanks to Vincent Langlet for the patch
- Fixed bug #2791 : PSR12.Functions.NullableTypeDeclaration false positive when ternary operator used with instanceof
  -- Thanks to Juliette Reinders Folmer for the patch
- Fixed bug #2802 : Can&apos;t specify a report file path using the tilde shortcut
- Fixed bug #2804 : PHP4-style typed properties not tokenized correctly
  -- Thanks to Juliette Reinders Folmer for the patch
- Fixed bug #2805 : Undefined Offset notice during live coding of arrow functions
  -- Thanks to Juliette Reinders Folmer for the patch
- Fixed bug #2843 : Tokenizer does not support alternative syntax for declare statements
  -- Thanks to Juliette Reinders Folmer for the patch
   </notes>
  </release>
  <release>
   <version>
    <release>3.5.3</release>
    <api>3.5.3</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <date>2019-12-04</date>
   <license uri="https://github.com/squizlabs/PHP_CodeSniffer/blob/master/licence.txt">BSD License</license>
   <notes>
- The PHP 7.4 T_FN token has been made available for older versions
  -- T_FN represents the fn string used for arrow functions
  -- The double arrow becomes the scope opener, and uses a new T_FN_ARROW token type
  -- The token after the statement (normally a semicolon) becomes the scope closer
  -- The token is also associated with the opening and closing parenthesis of the statement
  -- Any functions named &quot;fn&quot; will cause have a T_FN token for the function name, but have no scope information
  -- Thanks to Michał Bundyra for the help with this change
- PHP 7.4 numeric separators are now tokenized in the same way when using older PHP versions
  -- Previously, a number like 1_000 would tokenize as T_LNUMBER (1), T_STRING (_000)
  -- Now, the number tokenizes as T_LNUMBER (1_000)
  -- Sniff developers should consider how numbers with underscores impact their custom sniffs
- The PHPCS file cache now takes file permissions into account
  -- The cache is now invalidated for a file when its permissions are changed
- File::getMethodParameters() now supports arrow functions
- File::getMethodProperties() now supports arrow functions
- Added Fixer::changeCodeBlockIndent() to change the indent of a code block while auto-fixing
  -- Can be used to either increase or decrease the indent
  -- Useful when moving the start position of something like a closure, where you want the content to also move
- Added Generic.Files.ExecutableFile sniff
  -- Ensures that files are not executable
  -- Thanks to Matthew Peveler for the contribution
- Generic.CodeAnalysis.EmptyPhpStatement now reports unnecessary semicolons after control structure closing braces
  -- Thanks to Vincent Langlet for the patch
- Generic.PHP.LowerCaseKeyword now enforces that the &quot;fn&quot; keyword is lowercase
  -- Thanks to Michał Bundyra for the patch
- Generic.WhiteSpace.ScopeIndent now supports static arrow functions
- PEAR.Functions.FunctionCallSignature now adjusts the indent of function argument contents during auto-fixing
  -- Previously, only the first line of an argument was changed, leading to inconsistent indents
  -- This change also applies to PSR2.Methods.FunctionCallSignature
- PSR2.ControlStructures.ControlStructureSpacing now checks whitespace before the closing parenthesis of multi-line control structures
  -- Previously, it incorrectly applied the whitespace check for single-line definitions only
- PSR12.Functions.ReturnTypeDeclaration now checks the return type of arrow functions
  -- Thanks to Michał Bundyra for the patch
- PSR12.Traits.UseDeclaration now ensures all trait import statements are grouped together
  -- Previously, the trait import section of the class ended when the first non-import statement was found
  -- Checking now continues throughout the class to ensure all statements are grouped together
  -- This also ensures that empty lines are not requested after an import statement that isn&apos;t the last one
- Squiz.Functions.LowercaseFunctionKeywords now enforces that the &quot;fn&quot; keyword is lowercase
  -- Thanks to Michał Bundyra for the patch
- Fixed bug #2586 : Generic.WhiteSpace.ScopeIndent false positives when indenting open tags at a non tab-stop
- Fixed bug #2638 : Squiz.CSS.DuplicateClassDefinitionSniff sees comments as part of the class name
  -- Thanks to Raphael Horber for the patch
- Fixed bug #2640 : Squiz.WhiteSpace.OperatorSpacing false positives for some negation operators
  -- Thanks to Jakub Chábek and Juliette Reinders Folmer for the patch
- Fixed bug #2674 : Squiz.Functions.FunctionDeclarationArgumentSpacing prints wrong argument name in error message
- Fixed bug #2676 : PSR12.Files.FileHeader locks up when file ends with multiple inline comments
- Fixed bug #2678 : PSR12.Classes.AnonClassDeclaration incorrectly enforcing that closing brace be on a line by itself
- Fixed bug #2685 : File::getMethodParameters() setting typeHintEndToken for vars with no type hint
  -- Thanks to Juliette Reinders Folmer for the patch
- Fixed bug #2694 : AbstractArraySniff produces invalid indices when using ternary operator
  -- Thanks to Michał Bundyra for the patch
- Fixed bug #2702 : Generic.WhiteSpace.ScopeIndent false positive when using ternary operator with short arrays
   </notes>
  </release>
  <release>
   <version>
    <release>3.5.2</release>
    <api>3.5.2</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <date>2019-10-28</date>
   <license uri="https://github.com/squizlabs/PHP_CodeSniffer/blob/master/licence.txt">BSD License</license>
   <notes>
- Generic.ControlStructures.DisallowYodaConditions now returns less false positives
  -- False positives were being returned for array comparisions, or when performing some function calls
- Squiz.WhiteSpace.SemicolonSpacing.Incorrect error message now escapes newlines and tabs
  -- Provides a clearer error message as whitespace is now visible
  -- Also allows for better output for report types such as CSV and XML
- The error message for PSR12.Files.FileHeader.SpacingAfterBlock has been made clearer
  -- It now uses the wording from the published PSR-12 standard to indicate that blocks must be separated by a blank line
  -- Thanks to Craig Duncan for the patch
- Fixed bug #2654 : Incorrect indentation for arguments of multiline function calls
- Fixed bug #2656 : Squiz.WhiteSpace.MemberVarSpacing removes comments before first member var during auto fixing
  -- Thanks to Juliette Reinders Folmer for the patch
- Fixed bug #2663 : Generic.NamingConventions.ConstructorName complains about old constructor in interfaces
- Fixed bug #2664 : PSR12.Files.OpenTag incorrectly identifies PHP file with only an opening tag
- Fixed bug #2665 : PSR12.Files.ImportStatement should not apply to traits
- Fixed bug #2673 : PSR12.Traits.UseDeclaration does not allow comments or blank lines between use statements
   </notes>
  </release>
  <release>
   <version>
    <release>3.5.1</release>
    <api>3.5.1</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <date>2019-10-17</date>
   <license uri="https://github.com/squizlabs/PHP_CodeSniffer/blob/master/licence.txt">BSD License</license>
   <notes>
- Very very verbose diff report output has slightly changed to improve readability
  -- Output is printed when running PHPCS with the --report=diff and -vvv command line arguments
  -- Fully qualified class names have been replaced with sniff codes
  -- Tokens being changed now display the line number they are on
- PSR2, PSR12, and PEAR standards now correctly check for blank lines at the start of function calls
  -- This check has been missing from these standards, but has now been implemented
  -- When using the PEAR standard, the error code is PEAR.Functions.FunctionCallSignature.FirstArgumentPosition
  -- When using PSR2 or PSR12, the error code is PSR2.Methods.FunctionCallSignature.FirstArgumentPosition
- PSR12.ControlStructures.BooleanOperatorPlacement no longer complains when multiple expression appears on the same line
  -- Previously, boolean operators were enforce to appear at the start or end of lines only
  -- Boolean operators can now appear in the middle of the line
- PSR12.Files.FileHeader no longer ignores comments preceding a use, namespace, or declare statement
- PSR12.Files.FileHeader now allows a hashbang line at the top of the file
- Fixed bug #2506 : PSR2 standard can&apos;t auto fix multi-line function call inside a string concat statement
- Fixed bug #2530 : PEAR.Commenting.FunctionComment does not support intersection types in comments
- Fixed bug #2615 : Constant visibility false positive on non-class constants
- Fixed bug #2616 : PSR12.Files.FileHeader false positive when file only contains docblock
- Fixed bug #2619 : PSR12.Files.FileHeader locks up when inline comment is the last content in a file
- Fixed bug #2621 : PSR12.Classes.AnonClassDeclaration.CloseBraceSameLine false positive for anon class passed as function argument
  -- Thanks to Martins Sipenko for the patch
- Fixed bug #2623 : PSR12.ControlStructures.ControlStructureSpacing not ignoring indentation inside multi-line string arguments
- Fixed bug #2624 : PSR12.Traits.UseDeclaration doesnt apply the correct indent during auto fixing
- Fixed bug #2626 : PSR12.Files.FileHeader detects @var annotations as file docblocks
- Fixed bug #2628 : PSR12.Traits.UseDeclaration does not allow comments above a USE declaration
- Fixed bug #2632 : Incorrect indentation of lines starting with &quot;static&quot; inside closures
- Fixed bug #2641 : PSR12.Functions.NullableTypeDeclaration false positive when using new static()
   </notes>
  </release>
  <release>
   <version>
    <release>3.5.0</release>
    <api>3.5.0</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <date>2019-09-27</date>
   <license uri="https://github.com/squizlabs/PHP_CodeSniffer/blob/master/licence.txt">BSD License</license>
   <notes>
- The included PSR12 standard is now complete and ready to use
  -- Check your code using PSR-12 by running PHPCS with --standard=PSR12
- Added support for PHP 7.4 typed properties
  -- The nullable operator is now tokenized as T_NULLABLE inside property types, as it is elsewhere
  -- To get the type of a member var, use the File::getMemberProperties() method, which now contains a &quot;type&quot; array index
     --- This contains the type of the member var, or a blank string if not specified
     --- If the type is nullable, the return type will contain the leading ?
     --- If a type is specified, the position of the first token in the type will be set in a &quot;type_token&quot; array index
     --- If a type is specified, the position of the last token in the type will be set in a &quot;type_end_token&quot; array index
     --- If the type is nullable, a &quot;nullable_type&quot; array index will also be set to TRUE
     --- If the type contains namespace information, it will be cleaned of whitespace and comments in the return value
- The PSR1 standard now correctly bans alternate PHP tags
  -- Previously, it only banned short open tags and not the pre-7.0 alternate tags
- Added support for only checking files that have been locally staged in a git repo
  -- Use --filter=gitstaged to check these files
  -- You still need to give PHPCS a list of files or directories in which to apply the filter
  -- Thanks to Juliette Reinders Folmer for the contribution
- JSON reports now end with a newline character
- The phpcs.xsd schema now validates phpcs-only and phpcbf-only attributes correctly
  -- Thanks to Juliette Reinders Folmer for the patch
- The tokenizer now correctly identifies inline control structures in more cases
- All helper methods inside the File class now throw RuntimeException instead of TokenizerException
  -- Some tokenizer methods were also throwing RuntimeExpection but now correctly throw TokenizerException
  -- Thanks to Juliette Reinders Folmer for the patch
- The File::getMethodParameters() method now returns more information, and supports closure USE groups
  -- If a type hint is specified, the position of the last token in the hint will be set in a &quot;type_hint_end_token&quot; array index
  -- If a default is specified, the position of the first token in the default value will be set in a &quot;default_token&quot; array   index
  -- If a default is specified, the position of the equals sign will be set in a &quot;default_equal_token&quot; array index
  -- If the param is not the last, the position of the comma will be set in a &quot;comma_token&quot; array index
  -- If the param is passed by reference, the position of the reference operator will be set in a &quot;reference_token&quot; array index
  -- If the param is variable length, the position of the variadic operator will be set in a &quot;variadic_token&quot; array index
- The T_LIST token and it&apos;s opening and closing parentheses now contain references to each other in the tokens array
  -- Uses the same parenthesis_opener/closer/owner indexes as other tokens
  -- Thanks to Juliette Reinders Folmer for the patch
- The T_ANON_CLASS token and it&apos;s opening and closing parentheses now contain references to each other in the tokens array
  -- Uses the same parenthesis_opener/closer/owner indexes as other tokens
  -- Only applicable if the anon class is passing arguments to the constructor
  -- Thanks to Juliette Reinders Folmer for the patch
- The PHP 7.4 T_BAD_CHARACTER token has been made available for older versions
  -- Allows you to safely look for this token, but it will not appear unless checking with PHP 7.4+
- Metrics are now available for Squiz.WhiteSpace.FunctionSpacing
  -- Use the &quot;info&quot; report to see blank lines before/after functions
  -- Thanks to Juliette Reinders Folmer for the patch
- Metrics are now available for Squiz.WhiteSpace.MemberVarSpacing
  -- Use the &quot;info&quot; report to see blank lines before member vars
  -- Thanks to Juliette Reinders Folmer for the patch
- Added Generic.ControlStructures.DisallowYodaConditions sniff
  -- Ban the use of Yoda conditions
  -- Thanks to Mponos George for the contribution
- Added Generic.PHP.RequireStrictTypes sniff
  -- Enforce the use of a strict types declaration in PHP files
- Added Generic.WhiteSpace.SpreadOperatorSpacingAfter sniff
  -- Checks whitespace between the spread operator and the variable/function call it applies to
  -- Thanks to Juliette Reinders Folmer for the contribution
- Added PSR12.Classes.AnonClassDeclaration sniff
  -- Enforces the formatting of anonymous classes
- Added PSR12.Classes.ClosingBrace sniff
  -- Enforces that closing braces of classes/interfaces/traits/functions are not followed by a comment or statement
- Added PSR12.ControlStructures.BooleanOperatorPlacement sniff
  -- Enforces that boolean operators between conditions are consistently at the start or end of the line
- Added PSR12.ControlStructures.ControlStructureSpacing sniff
  -- Enforces that spacing and indents are correct inside control structure parenthesis
- Added PSR12.Files.DeclareStatement sniff
  -- Enforces the formatting of declare statements within a file
- Added PSR12.Files.FileHeader sniff
  -- Enforces the order and formatting of file header blocks
- Added PSR12.Files.ImportStatement sniff
  -- Enforces the formatting of import statements within a file
- Added PSR12.Files.OpenTag sniff
  -- Enforces that the open tag is on a line by itself when used at the start of a php-only file
- Added PSR12.Functions.ReturnTypeDeclaration sniff
  -- Enforces the formatting of return type declarations in functions and closures
- Added PSR12.Properties.ConstantVisibility sniff
  -- Enforces that constants must have their visibility defined
  -- Uses a warning instead of an error due to this conditionally requiring the project to support PHP 7.1+
- Added PSR12.Traits.UseDeclaration sniff
  -- Enforces the formatting of trait import statements within a class
- Generic.Files.LineLength ignoreComments property now ignores comments at the end of a line
    -- Previously, this property was incorrectly causing the sniff to ignore any line that ended with a comment
    -- Now, the trailing comment is not included in the line length, but the rest of the line is still checked
- Generic.Files.LineLength now only ignores unwrappable comments when the comment is on a line by itself
    -- Previously, a short unwrappable comment at the end of the line would have the sniff ignore the entire line
- Generic.Functions.FunctionCallArgumentSpacing no longer checks spacing around assignment operators inside function calls
  -- Use the Squiz.WhiteSpace.OperatorSpacing sniff to enforce spacing around assignment operators
     --- Note that this sniff checks spacing around all assignment operators, not just inside function calls
  -- The Generic.Functions.FunctionCallArgumentSpacing.NoSpaceBeforeEquals error has been removed
     --- use Squiz.WhiteSpace.OperatorSpacing.NoSpaceBefore instead
  -- The Generic.Functions.FunctionCallArgumentSpacing.NoSpaceAfterEquals error has been removed
     --- use Squiz.WhiteSpace.OperatorSpacing.NoSpaceAfter instead
  -- This also changes the PEAR/PSR2/PSR12 standards so they no longer check assignment operators inside function calls
     --- They were previously checking these operators when they should not have
  -- Thanks to Juliette Reinders Folmer for the patch
- Generic.WhiteSpace.ScopeIndent no longer performs exact indents checking for chained method calls
  -- Other sniffs can be used to enforce chained method call indent rules
  -- Thanks to Pieter Frenssen for the patch
- PEAR.WhiteSpace.ObjectOperatorIndent now supports multi-level chained statements
  -- When enabled, chained calls must be indented 1 level more or less than the previous line
  -- Set the new &quot;multilevel&quot; setting to TRUE in a ruleset.xml file to enable this behaviour
  -- Thanks to Marcos Passos for the patch
- PSR2.ControlStructures.ControlStructureSpacing now allows whitespace after the opening parenthesis if followed by a comment
  -- Thanks to Michał Bundyra for the patch
- PSR2.Classes.PropertyDeclaration now enforces a single space after a property type keyword
  -- The PSR2 standard itself excludes this new check as it is not defined in the written standard
  -- Using the PSR12 standard will enforce this check
- Squiz.Commenting.BlockComment no longer requires blank line before comment if it&apos;s the first content after the PHP open tag
  -- Thanks to Juliette Reinders Folmer for the patch
- Squiz.Functions.FunctionDeclarationArgumentSpacing now has more accurate error messages
  -- This includes renaming the SpaceAfterDefault error code to SpaceAfterEquals, which reflects the real error
- Squiz.Functions.FunctionDeclarationArgumentSpacing now checks for no space after a reference operator
  -- If you don&apos;t want this new behaviour, exclude the SpacingAfterReference error message in a ruleset.xml file
- Squiz.Functions.FunctionDeclarationArgumentSpacing now checks for no space after a variadic operator
  -- If you don&apos;t want this new behaviour, exclude the SpacingAfterVariadic error message in a ruleset.xml file
- Squiz.Functions.MultiLineFunctionDeclaration now has improved fixing for the FirstParamSpacing and UseFirstParamSpacing errors
- Squiz.Operators.IncrementDecrementUsage now suggests pre-increment of variables instead of post-increment
  -- This change does not enforce pre-increment over post-increment; only the suggestion has changed
  -- Thanks to Juliette Reinders Folmer for the patch
- Squiz.PHP.DisallowMultipleAssignments now has a second error code for when assignments are found inside control structure   conditions
  -- The new error code is Squiz.PHP.DisallowMultipleAssignments.FoundInControlStructure
  -- All other multiple assignment cases use the existing error code Squiz.PHP.DisallowMultipleAssignments.Found
  -- Thanks to Juliette Reinders Folmer for the patch
- Squiz.WhiteSpace.FunctionSpacing now applies beforeFirst and afterLast spacing rules to nested functions
  -- Previously, these rules only applied to the first and last function in a class, interface, or trait
  -- These rules now apply to functions nested in any statement block, including other functions and conditions
- Squiz.WhiteSpace.OperatorSpacing now has improved handling of parse errors
    -- Thanks to Juliette Reinders Folmer for the patch
- Squiz.WhiteSpace.OperatorSpacing now checks spacing around the instanceof operator
  -- Thanks to Jakub Chábek for the patch
- Squiz.WhiteSpace.OperatorSpacing can now enforce a single space before assignment operators
  -- Previously, the sniff this spacing as multiple assignment operators are sometimes aligned
  -- Now, you can set the ignoreSpacingBeforeAssignments sniff property to FALSE to enable checking
  -- Default remains TRUE, so spacing before assignments is not checked by default
  -- Thanks to Jakub Chábek for the patch
- Fixed bug #2391 : Sniff-specific ignore rules inside rulesets are filtering out too many files
  -- Thanks to Juliette Reinders Folmer and Willington Vega for the patch
- Fixed bug #2478 : FunctionCommentThrowTag.WrongNumber when exception is thrown once but built conditionally
- Fixed bug #2479 : Generic.WhiteSpace.ScopeIndent error when using array destructing with exact indent checking
- Fixed bug #2498 : Squiz.Arrays.ArrayDeclaration.MultiLineNotAllowed autofix breaks heredoc
- Fixed bug #2502 : Generic.WhiteSpace.ScopeIndent false positives with nested switch indentation and case fall-through
- Fixed bug #2504 : Generic.WhiteSpace.ScopeIndent false positives with nested arrays and nowdoc string
- Fixed bug #2511 : PSR2 standard not checking if closing paren of single-line function declaration is on new line
- Fixed bug #2512 : Squiz.PHP.NonExecutableCode does not support alternate SWITCH control structure
  -- Thanks to Juliette Reinders Folmer for the patch
- Fixed bug #2522 : Text generator throws error when code sample line is too long
  -- Thanks to Juliette Reinders Folmer for the patch
- Fixed bug #2526 : XML report format has bad syntax on Windows
  -- Thanks to Juliette Reinders Folmer for the patch
- Fixed bug #2529 : Generic.Formatting.MultipleStatementAlignment wrong error for assign in string concat
- Fixed bug #2534 : Unresolvable installed_paths can lead to open_basedir errors
  -- Thanks to Oliver Nowak for the patch
- Fixed bug #2541 : Text doc generator does not allow for multi-line rule explanations
  -- Thanks to Juliette Reinders Folmer for the patch
- Fixed bug #2549 : Searching for a phpcs.xml file can throw warnings due to open_basedir restrictions
  -- Thanks to Matthew Peveler for the patch
- Fixed bug #2558 : PHP 7.4 throwing offset syntax with curly braces is deprecated message
  -- Thanks to Matthew Peveler for the patch
- Fixed bug #2561 : PHP 7.4 compatibility fix / implode argument order
  -- Thanks to Juliette Reinders Folmer for the patch
- Fixed bug #2562 : Inline WHILE triggers SpaceBeforeSemicolon incorrectly
  -- Thanks to Juliette Reinders Folmer for the patch
- Fixed bug #2565 : Generic.ControlStructures.InlineControlStructure confused by mixed short/long tags
  -- Thanks to Juliette Reinders Folmer for the patch
- Fixed bug #2566 : Author tag email validation doesn&apos;t support all TLDs
  -- Thanks to Juliette Reinders Folmer for the patch
- Fixed bug #2575 : Custom error messages don&apos;t have data replaced when cache is enabled
- Fixed bug #2601 : Squiz.WhiteSpace.FunctionSpacing incorrect fix when spacing is 0
- Fixed bug #2608 : PSR2 throws errors for use statements when multiple namespaces are defined in a file
   </notes>
  </release>
  <release>
   <version>
    <release>3.4.2</release>
    <api>3.4.2</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <date>2019-04-11</date>
   <license uri="https://github.com/squizlabs/PHP_CodeSniffer/blob/master/licence.txt">BSD License</license>
   <notes>
- Squiz.Arrays.ArrayDeclaration now has improved handling of syntax errors
- Fixed an issue where the PCRE JIT on PHP 7.3 caused PHPCS to die when using the parallel option
  -- PHPCS now disables the PCRE JIT before running
- Fixed bug #2368 : MySource.PHP.AjaxNullComparison throws error when first function has no doc comment
- Fixed bug #2414 : Indention false positive in switch/case/if combination
- Fixed bug #2423 : Squiz.Formatting.OperatorBracket.MissingBrackets error with static
- Fixed bug #2450 : Indentation false positive when closure containing nested IF conditions used as function argument
- Fixed bug #2452 : LowercasePHPFunctions sniff failing on &quot;new \File()&quot;
- Fixed bug #2453 : Squiz.CSS.SemicolonSpacingSniff false positive when style name proceeded by an asterisk
  -- Thanks to Juliette Reinders Folmer for the patch
- Fixed bug #2464 : Fixer conflict between Generic.WhiteSpace.ScopeIndent and Squiz.WhiteSpace.ScopeClosingBrace when class   indented 1 space
- Fixed bug #2465 : Excluding a sniff by path is not working
- Fixed bug #2467 : PHP open/close tags inside CSS files are replaced with internal PHPCS token strings when auto fixing
   </notes>
  </release>
  <release>
   <version>
    <release>3.4.1</release>
    <api>3.4.1</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <date>2019-03-19</date>
   <license uri="https://github.com/squizlabs/PHP_CodeSniffer/blob/master/licence.txt">BSD License</license>
   <notes>
- The PEAR installable version of PHPCS was missing some files, which have been re-included in this release
  -- The code report was not previously available for PEAR installs
  -- The Generic.Formatting.SpaceBeforeCast sniff was not previously available for PEAR installs
  -- The Generic.WhiteSpace.LanguageConstructSpacing sniff was not previously available for PEAR installs
  -- Thanks to Juliette Reinders Folmer for the patch

- PHPCS will now refuse to run if any of the required PHP extensions are not loaded
  -- Previously, PHPCS only relied on requirements being checked by PEAR and Composer
  -- Thanks to Juliette Reinders Folmer for the patch
- Ruleset XML parsing errors are now displayed in a readable format so they are easier to correct
  -- Thanks to Juliette Reinders Folmer for the patch
- The PSR2 standard no longer throws duplicate errors for spacing around FOR loop parentheses
  -- Thanks to Juliette Reinders Folmer for the patch
- T_PHPCS_SET tokens now contain sniffCode, sniffProperty, and sniffPropertyValue indexes
  -- Sniffs can use this information instead of having to parse the token content manually
- Added more guard code for syntax errors to various CSS sniffs
  -- Thanks to Juliette Reinders Folmer for the patch
- Generic.Commenting.DocComment error messages now contain the name of the comment tag that caused the error
  -- Thanks to Juliette Reinders Folmer for the patch
- Generic.ControlStructures.InlineControlStructure now handles syntax errors correctly
  -- Thanks to Juliette Reinders Folmer for the patch
- Generic.Debug.JSHint now longer requires rhino and can be run directly from the npm install
  -- Thanks to Juliette Reinders Folmer for the patch
- Generic.Files.LineEndings no longer adds superfluous new line at the end of JS and CSS files
  -- Thanks to Juliette Reinders Folmer for the patch
- Generic.Formatting.DisallowMultipleStatements no longer tries fix lines containing phpcs:ignore statements
  -- Thanks to Juliette Reinders Folmer for the patch
- Generic.Functions.FunctionCallArgumentSpacing now has improved performance and anonymous class support
  -- Thanks to Juliette Reinders Folmer for the patch
- Generic.WhiteSpace.ScopeIndent now respects changes to the &quot;exact&quot; property using phpcs:set mid-way through a file
  -- This allows you change the &quot;exact&quot; rule for only some parts of a file
- Generic.WhiteSpace.ScopeIndent now disables exact indent checking inside all arrays
  -- Previously, this was only done when using long array syntax, but it now works for short array syntax as well
- PEAR.Classes.ClassDeclaration now has improved handling of PHPCS annotations and tab indents
- PSR12.Classes.ClassInstantiation has changed it&apos;s error code from MissingParenthesis to MissingParentheses
- PSR12.Keywords.ShortFormTypeKeywords now ignores all spacing inside type casts during both checking and fixing
  -- Thanks to Juliette Reinders Folmer for the patch
- Squiz.Classes.LowercaseClassKeywords now examines the class keyword for anonymous classes
  -- Thanks to Juliette Reinders Folmer for the patch
- Squiz.ControlStructures.ControlSignature now has improved handling of parse errors
  -- Thanks to Juliette Reinders Folmer for the patch
- Squiz.Commenting.PostStatementComment fixer no longer adds a blank line at the start of a JS file that begins with a comment
  -- Fixes a conflict between this sniff and the Squiz.WhiteSpace.SuperfluousWhitespace sniff
  -- Thanks to Juliette Reinders Folmer for the patch
- Squiz.Commenting.PostStatementComment now ignores comments inside control structure conditions, such as FOR loops
  -- Fixes a conflict between this sniff and the Squiz.ControlStructures.ForLoopDeclaration sniff
  -- Thanks to Juliette Reinders Folmer for the patch
- Squiz.Commenting.FunctionCommentThrowTag now has improved support for unknown exception types and namespaces
  -- Thanks to Juliette Reinders Folmer for the patch
- Squiz.ControlStructures.ForLoopDeclaration has improved whitespace, closure, and empty expression support
  -- The SpacingAfterSecondNoThird error code has been removed as part of these fixes
  -- Thanks to Juliette Reinders Folmer for the patch
- Squiz.CSS.ClassDefinitionOpeningBraceSpace now handles comments and indentation correctly
  -- Thanks to Juliette Reinders Folmer for the patch
- Squiz.CSS.ClassDefinitionClosingBrace now handles comments, indentation, and multiple statements on the same line correctly
  -- Thanks to Juliette Reinders Folmer for the patch
- Squiz.CSS.Opacity now handles comments correctly
  -- Thanks to Juliette Reinders Folmer for the patch
- Squiz.CSS.SemicolonSpacing now handles comments and syntax errors correctly
  -- Thanks to Juliette Reinders Folmer for the patch
- Squiz.NamingConventions.ValidVariableName now supports variables inside anonymous classes correctly
  -- Thanks to Juliette Reinders Folmer for the patch
- Squiz.PHP.LowercasePHPFunctions now handles use statements, namespaces, and comments correctly
  -- Thanks to Juliette Reinders Folmer for the patch
- Squiz.WhiteSpace.FunctionSpacing now fixes function spacing correctly when a function is the first content in a file
  -- Thanks to Juliette Reinders Folmer for the patch
- Squiz.WhiteSpace.SuperfluousWhitespace no longer throws errors for spacing between functions and properties in anon classes
  -- Thanks to Juliette Reinders Folmer for the patch
- Zend.Files.ClosingTag no longer adds a semi-colon during fixing of a file that only contains a comment
  -- Thanks to Juliette Reinders Folmer for the patch
- Zend.NamingConventions.ValidVariableName now supports variables inside anonymous classes correctly
  -- Thanks to Juliette Reinders Folmer for the patch
- Fixed bug #2298 : PSR2.Classes.ClassDeclaration allows extended class on new line
  -- Thanks to Michał Bundyra for the patch
- Fixed bug #2337 : Generic.WhiteSpace.ScopeIndent incorrect error when multi-line function call starts on same line as open   tag
- Fixed bug #2348 : Cache not invalidated when changing a ruleset included by another
- Fixed bug #2376 : Using __halt_compiler() breaks Generic.PHP.ForbiddenFunctions unless it&apos;s last in the function list
  -- Thanks to Sijun Zhu for the patch
- Fixed bug #2393 : The gitmodified filter will infinitely loop when encountering deleted file paths
  -- Thanks to Lucas Manzke for the patch
- Fixed bug #2396 : Generic.WhiteSpace.ScopeIndent incorrect error when multi-line IF condition mixed with HTML
- Fixed bug #2431 : Use function/const not tokenized as T_STRING when preceded by comment
   </notes>
  </release>
  <release>
   <version>
    <release>3.4.0</release>
    <api>3.4.0</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <date>2018-12-20</date>
   <license uri="https://github.com/squizlabs/PHP_CodeSniffer/blob/master/licence.txt">BSD License</license>
   <notes>
- The Generic.Formatting.NoSpaceAfterCast sniff has been deprecated and will be removed in version 4
  -- The functionality of this sniff is now available in the Generic.Formatting.SpaceAfterCast sniff
     --- Include the Generic.Formatting.SpaceAfterCast sniff and set the &quot;spacing&quot; property to &quot;0&quot;
  -- As soon as possible, replace all instances of the old sniff code with the new sniff code and property setting
     --- The existing sniff will continue to work until version 4 has been released

- Rule include patterns in a ruleset.xml file are now evaluated as OR instead of AND
  -- Previously, a file had to match every include pattern and no exclude patterns to be included
  -- Now, a file must match at least one include pattern and no exclude patterns to be included
  -- This is a bug fix as include patterns are already documented to work this way
- New token T_BITWISE_NOT added for the bitwise not operator
  -- This token was previously tokenized as T_NONE
  -- Any sniffs specifically looking for T_NONE tokens with a tilde as the contents must now also look for T_BITWISE_NOT
  -- Sniffs can continue looking for T_NONE as well as T_BITWISE_NOT to support older PHP_CodeSniffer versions
- All types of binary casting are now tokenized as T_BINARY_CAST
  -- Previously, the &apos;b&apos; in &apos;b&quot;some string with $var&quot;&apos; would be a T_BINARY_CAST, but only when the string contained a var
  -- This change ensures the &apos;b&apos; is always tokenized as T_BINARY_CAST
  -- This change also converts &apos;(binary)&apos; from T_STRING_CAST to T_BINARY_CAST
  -- Thanks to Juliette Reinders Folmer for the help with this patch
- Array properties set inside a ruleset.xml file can now extend a previous value instead of always overwriting it
  -- e.g., if you include a ruleset that defines forbidden functions, can you now add to that list instead of having to   redefine it
  -- To use this feature, add extends=&quot;true&quot; to the property tag
     --- e.g., property name=&quot;forbiddenFunctionNames&quot; type=&quot;array&quot; extend=&quot;true&quot;
  -- Thanks to Michael Moravec for the patch
- If $XDG_CACHE_HOME is set and points to a valid directory, it will be used for caching instead of the system temp directory
- PHPCBF now disables parallel running if you are passing content on STDIN
  -- Stops an error from being shown after the fixed output is printed
- The progress report now shows files with tokenizer errors as skipped (S) instead of a warning (W)
  -- The tokenizer error is still displayed in reports as normal
  -- Thanks to Juliette Reinders Folmer for the patch
- The Squiz standard now ensures there is no space between an increment/decrement operator and its variable
- The File::getMethodProperties() method now includes a has_body array index in the return value
  -- FALSE if the method has no body (as with abstract and interface methods) or TRUE otherwise
  -- Thanks to Chris Wilkinson for the patch
- The File::getTokensAsString() method now throws an exception if the $start param is invalid
  -- If the $length param is invalid, an empty string will be returned
  -- Stops an infinite loop when the function is passed invalid data
  -- Thanks to Juliette Reinders Folmer for the patch
- Added new Generic.CodeAnalysis.EmptyPHPStatement sniff
  -- Warns when it finds empty PHP open/close tag combinations or superfluous semicolons
  -- Thanks to Juliette Reinders Folmer for the contribution
- Added new Generic.Formatting.SpaceBeforeCast sniff
  -- Ensures there is exactly 1 space before a type cast, unless the cast statement is indented or multi-line
  -- Thanks to Juliette Reinders Folmer for the contribution
- Added new Generic.VersionControl.GitMergeConflict sniff
  -- Detects merge conflict artifacts left in files
  -- Thanks to Juliette Reinders Folmer for the contribution
- Added Generic.WhiteSpace.IncrementDecrementSpacing sniff
  -- Ensures there is no space between the operator and the variable it applies to
  -- Thanks to Juliette Reinders Folmer for the contribution
- Added PSR12.Functions.NullableTypeDeclaration sniff
  -- Ensures there is no space after the question mark in a nullable type declaration
  -- Thanks to Timo Schinkel for the contribution
- A number of sniffs have improved support for methods in anonymous classes
  -- These sniffs would often throw the same error twice for functions in nested classes
  -- Error messages have also been changed to be less confusing
  -- The full list of affected sniffs is:
     --- Generic.NamingConventions.CamelCapsFunctionName
     --- PEAR.NamingConventions.ValidFunctionName
     --- PSR1.Methods.CamelCapsMethodName
     --- PSR2.Methods.MethodDeclaration
     --- Squiz.Scope.MethodScope
     --- Squiz.Scope.StaticThisUsage
  -- Thanks to Juliette Reinders Folmer for the patch
- Generic.CodeAnalysis.UnusedFunctionParameter now only skips functions with empty bodies when the class implements an   interface
  -- Thanks to Juliette Reinders Folmer for the patch
- Generic.CodeAnalysis.UnusedFunctionParameter now has additional error codes to indicate where unused params were found
  -- The new error code prefixes are:
     --- FoundInExtendedClass: when the class extends another
     --- FoundInImplementedInterface: when the class implements an interface
     --- Found: used in all other cases, including closures
  -- The new error code suffixes are:
     --- BeforeLastUsed: the unused param was positioned before the last used param in the function signature
     --- AfterLastUsed: the unused param was positioned after the last used param in the function signature
  -- This makes the new error code list for this sniff:
     --- Found
     --- FoundBeforeLastUsed
     --- FoundAfterLastUsed
     --- FoundInExtendedClass
     --- FoundInExtendedClassBeforeLastUsed
     --- FoundInExtendedClassAfterLastUsed
     --- FoundInImplementedInterface
     --- FoundInImplementedInterfaceBeforeLastUsed
     --- FoundInImplementedInterfaceAfterLastUsed
  -- These errors code make it easier for specific cases to be ignored or promoted using a ruleset.xml file
  -- Thanks to Juliette Reinders Folmer for the contribution
- Generic.Classes.DuplicateClassName now inspects traits for duplicate names as well as classes and interfaces
  -- Thanks to Chris Wilkinson for the patch
- Generic.Files.InlineHTML now ignores a BOM at the start of the file
  -- Thanks to Chris Wilkinson for the patch
- Generic.PHP.CharacterBeforePHPOpeningTag now ignores a BOM at the start of the file
  -- Thanks to Chris Wilkinson for the patch
- Generic.Formatting.SpaceAfterCast now has a setting to specify how many spaces are required after a type cast
  -- Default remains 1
  -- Override the &quot;spacing&quot; setting in a ruleset.xml file to change
  -- Thanks to Juliette Reinders Folmer for the patch
- Generic.Formatting.SpaceAfterCast now has a setting to ignore newline characters after a type cast
  -- Default remains FALSE, so newlines are not allowed
  -- Override the &quot;ignoreNewlines&quot; setting in a ruleset.xml file to change
  -- Thanks to Juliette Reinders Folmer for the patch
- Generic.Formatting.SpaceAfterNot now has a setting to specify how many spaces are required after a NOT operator
  -- Default remains 1
  -- Override the &quot;spacing&quot; setting in a ruleset.xml file to change
  -- Thanks to Juliette Reinders Folmer for the patch
- Generic.Formatting.SpaceAfterNot now has a setting to ignore newline characters after the NOT operator
  -- Default remains FALSE, so newlines are not allowed
  -- Override the &quot;ignoreNewlines&quot; setting in a ruleset.xml file to change
  -- Thanks to Juliette Reinders Folmer for the patch
- PEAR.Functions.FunctionDeclaration now checks spacing before the opening parenthesis of functions with no body
  -- Thanks to Chris Wilkinson for the patch
- PEAR.Functions.FunctionDeclaration now enforces no space before the semicolon in functions with no body
  -- Thanks to Chris Wilkinson for the patch
- PSR2.Classes.PropertyDeclaration now checks the order of property modifier keywords
  -- This is a rule that is documented in PSR-2 but was not enforced by the included PSR2 standard until now
  -- This sniff is also able to fix the order of the modifier keywords if they are incorrect
  -- Thanks to Juliette Reinders Folmer for the patch
- PSR2.Methods.MethodDeclaration now checks method declarations inside traits
  -- Thanks to Chris Wilkinson for the patch
- Squiz.Commenting.InlineComment now has better detection of comment block boundaries
- Squiz.Classes.ClassFileName now checks that a trait name matches the filename
  -- Thanks to Chris Wilkinson for the patch
- Squiz.Classes.SelfMemberReference now supports scoped declarations and anonymous classes
  -- Thanks to Juliette Reinders Folmer for the patch
- Squiz.Classes.SelfMemberReference now fixes multiple errors at once, increasing fixer performance
  -- Thanks to Gabriel Ostrolucký for the patch
- Squiz.Functions.LowercaseFunctionKeywords now checks abstract and final prefixes, and auto-fixes errors
  -- Thanks to Juliette Reinders Folmer for the patch
- Squiz.Objects.ObjectMemberComma.Missing has been renamed to Squiz.Objects.ObjectMemberComma.Found
  -- The error is thrown when the comma is found but not required, so the error code was incorrect
  -- If you are referencing the old error code in a ruleset XML file, please use the new code instead
  -- If you wish to maintain backwards compatibility, you can provide rules for both the old and new codes
  -- Thanks to Juliette Reinders Folmer for the patch
- Squiz.WhiteSpace.ObjectOperatorSpacing is now more tolerant of parse errors
- Squiz.WhiteSpace.ObjectOperatorSpacing now fixes errors more efficiently
  -- Thanks to Juliette Reinders Folmer for the patch
- Fixed bug #2109 : Generic.Functions.CallTimePassByReference false positive for bitwise and used in function argument
- Fixed bug #2165 : Conflict between Squiz.Arrays.ArrayDeclaration and ScopeIndent sniffs when heredoc used in array
- Fixed bug #2167 : Generic.WhiteSpace.ScopeIndent shows invalid error when scope opener indented inside inline HTML
- Fixed bug #2178 : Generic.NamingConventions.ConstructorName matches methods in anon classes with same name as containing   class
  -- Thanks to Juliette Reinders Folmer for the patch
- Fixed bug #2190 : PEAR.Functions.FunctionCallSignature incorrect error when encountering trailing PHPCS annotation
  -- Thanks to Juliette Reinders Folmer for the patch
- Fixed bug #2194 : Generic.Whitespace.LanguageConstructSpacing should not be checking namespace operators
  -- Thanks to Juliette Reinders Folmer for the patch
- Fixed bug #2202 : Squiz.WhiteSpace.OperatorSpacing throws error for negative index when using curly braces for string   access
  -- Same issue fixed in Squiz.Formatting.OperatorBracket
  -- Thanks to Andreas Buchenrieder for the patch
- Fixed bug #2210 : Generic.NamingConventions.CamelCapsFunctionName not ignoring SoapClient __getCookies() method
  -- Thanks to Juliette Reinders Folmer for the patch
- Fixed bug #2211 : PSR2.Methods.MethodDeclaration gets confused over comments between modifier keywords
  -- Thanks to Juliette Reinders Folmer for the patch
- Fixed bug #2212 : FUNCTION and CONST in use groups being tokenised as T_FUNCTION and T_CONST
  -- Thanks to Chris Wilkinson for the patch
- Fixed bug #2214 : File::getMemberProperties() is recognizing method params as properties
  -- Thanks to Juliette Reinders Folmer for the patch
- Fixed bug #2236 : Memory info measurement unit is Mb but probably should be MB
- Fixed bug #2246 : CSS tokenizer does not tokenize class names correctly when they contain the string NEW
  -- Thanks to Juliette Reinders Folmer for the patch
- Fixed bug #2278 : Squiz.Operators.ComparisonOperatorUsage false positive when inline IF contained in parentheses
  -- Thanks to Arnout Boks for the patch
- Fixed bug #2284 : Squiz.Functions.FunctionDeclarationArgumentSpacing removing type hint during fixing
  -- Thanks to Michał Bundyra for the patch
- Fixed bug #2297 : Anonymous class not tokenized correctly when used as argument to another anon class
  -- Thanks to Michał Bundyra for the patch
   </notes>
  </release>
  <release>
   <version>
    <release>2.9.2</release>
    <api>2.9.2</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <date>2018-11-08</date>
   <license uri="https://github.com/squizlabs/PHP_CodeSniffer/blob/master/licence.txt">BSD License</license>
   <notes>
- PHPCS should now run under PHP 7.3 without deprecation warnings
  -- Thanks to Nick Wilde for the patch
- Fixed bug #1496 : Squiz.Strings.DoubleQuoteUsage not unescaping dollar sign when fixing
  -- Thanks to Michał Bundyra for the patch
- Fixed bug #1549 : Squiz.PHP.EmbeddedPhp fixer conflict with // comment before PHP close tag
  -- Thanks to Juliette Reinders Folmer for the patch
- Fixed bug #1890 : Incorrect Squiz.WhiteSpace.ControlStructureSpacing.NoLineAfterClose error between catch and finally statements
   </notes>
  </release>
  <release>
   <version>
    <release>3.3.2</release>
    <api>3.3.2</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <date>2018-09-24</date>
   <license uri="https://github.com/squizlabs/PHP_CodeSniffer/blob/master/licence.txt">BSD License</license>
   <notes>
- Fixed a problem where the report cache was not being cleared when the sniffs inside a standard were updated
- The info report (--report=info) now has improved formatting for metrics that span multiple lines
  -- Thanks to Juliette Reinders Folmer for the patch
- The unit test runner now skips .bak files when looking for test cases
  -- Thanks to Juliette Reinders Folmer for the patch
- The Squiz standard now ensures underscores are not used to indicate visibility of private members vars and methods
  -- Previously, this standard enforced the use of underscores
- Generic.PHP.NoSilencedErrors error messages now contain a code snippet to show the context of the error
  -- Thanks to Juliette Reinders Folmer for the patch
- Squiz.Arrays.ArrayDeclaration no longer reports errors for a comma on a line new after a here/nowdoc
  -- Also stops a parse error being generated when auto-fixing
  -- The SpaceBeforeComma error message has been changed to only have one data value instead of two
- Squiz.Commenting.FunctionComment no longer errors when trying to fix indents of multi-line param comments
- Squiz.Formatting.OperatorBracket now correctly fixes statements that contain strings
- Squiz.PHP.CommentedOutCode now ignores more @-style annotations and includes better comment block detection
  -- Thanks to Juliette Reinders Folmer for the patch
- Fixed a problem where referencing a relative file path in a ruleset XML file could add unnecessary sniff exclusions
  -- This didn&apos;t actually exclude anything, but caused verbose output to list strange exclusion rules
- Fixed bug #2110 : Squiz.WhiteSpace.FunctionSpacing is removing indents from the start of functions when fixing
  -- Thanks to Juliette Reinders Folmer for the patch
- Fixed bug #2115 : Squiz.Commenting.VariableComment not checking var types when the @var line contains a comment
- Fixed bug #2120 : Tokenizer fails to match T_INLINE_ELSE when used after function call containing closure
- Fixed bug #2121 : Squiz.PHP.DisallowMultipleAssignments false positive in while loop conditions
  -- Thanks to Juliette Reinders Folmer for the patch
- Fixed bug #2127 : File::findExtendedClassName() doesn&apos;t support nested classes
  -- Thanks to Juliette Reinders Folmer for the patch
- Fixed bug #2138 : Tokenizer detects wrong token for php ::class feature with spaces
- Fixed bug #2143 : PSR2.Namespaces.UseDeclaration does not properly fix &quot;use function&quot; and &quot;use const&quot; statements
  -- Thanks to Chris Wilkinson for the patch
- Fixed bug #2144 : Squiz.Arrays.ArrayDeclaration does incorrect align calculation in array with cyrillic keys
- Fixed bug #2146 : Zend.Files.ClosingTag removes closing tag from end of file without inserting a semicolon
- Fixed bug #2151 : XML schema not updated with the new array property syntax
   </notes>
  </release>
  <release>
   <version>
    <release>3.3.1</release>
    <api>3.3.1</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <date>2018-07-27</date>
   <license uri="https://github.com/squizlabs/PHP_CodeSniffer/blob/master/licence.txt">BSD License</license>
   <notes>
- Support for HHVM has been dropped due to recent unfixed bugs and HHVM refocus on Hack only
  -- Thanks to Walt Sorensen and Juliette Reinders Folmer for helping to remove all HHVM exceptions from the core

- The full report (the default report) now has improved word wrapping for multi-line messages and sniff codes
  -- Thanks to Juliette Reinders Folmer for the patch
- The summary report now sorts files based on their directory location instead of just a basic string sort
  -- Thanks to Juliette Reinders Folmer for the patch
- The source report now orders error codes by name when they have the same number of errors
  -- Thanks to Juliette Reinders Folmer for the patch
- The junit report no longer generates validation errors with the Jenkins xUnit plugin
  -- Thanks to Nikolay Geo for the patch
- Generic.Commenting.DocComment no longer generates the SpacingBeforeTags error if tags are the first content in the docblock
  -- The sniff will still generate a MissingShort error if there is no short comment
  -- This allows the MissingShort error to be suppressed in a ruleset to make short descriptions optional
- Generic.Functions.FunctionCallArgumentSpacing now properly fixes multi-line function calls with leading commas
  -- Previously, newlines between function arguments would be removed
  -- Thanks to Juliette Reinders Folmer for the patch
- Generic.PHP.Syntax will now use PHP_BINARY instead of trying to discover the executable path
  -- This ensures that the sniff will always syntax check files using the PHP version that PHPCS is running under
  -- Setting the php_path config var will still override this value as normal
  -- Thanks to Willem Stuursma-Ruwen for the patch
- PSR2.Namespaces.UseDeclaration now supports commas at the end of group use declarations
  -- Also improves checking and fixing for use statements containing parse errors
  -- Thanks to Juliette Reinders Folmer for the patch
- Squiz.Arrays.ArrayDeclaration no longer removes the array opening brace while fixing
  -- This could occur when the opening brace was on a new line and the first array key directly followed
  -- This change also stops the KeyNotAligned error message being incorrectly reported in these cases
- Squiz.Arrays.ArrayDeclaration no longer tries to change multi-line arrays to single line when they contain comments
  -- Fixes a conflict between this sniff and some indentation sniffs
- Squiz.Classes.ClassDeclaration no longer enforces spacing rules when a class is followed by a function
  -- Fixes a conflict between this sniff and the Squiz.WhiteSpace.FunctionSpacing sniff
- The Squiz.Classes.ValidClassName.NotCamelCaps message now references PascalCase instead of CamelCase
  -- The &quot;CamelCase class name&quot; metric produced by the sniff has been changed to &quot;PascalCase class name&quot;
  -- This reflects the fact that the class name check is actually a Pascal Case check and not really Camel Case
  -- Thanks to Tom H Anderson for the patch
- Squiz.Commenting.InlineComment no longer enforces spacing rules when an inline comment is followed by a docblock
  -- Fixes a conflict between this sniff and the Squiz.WhiteSpace.FunctionSpacing sniff
- Squiz.WhiteSpace.OperatorSpacing no longer tries to fix operator spacing if the next content is a comment on a new line
  -- Fixes a conflict between this sniff and the Squiz.Commenting.PostStatementComment sniff
  -- Also stops PHPCS annotations from being moved to a different line, potentially changing their meaning
  -- Thanks to Juliette Reinders Folmer for the patch
- Squiz.WhiteSpace.FunctionSpacing no longer checks spacing of functions at the top of an embedded PHP block
  -- Fixes a conflict between this sniff and the Squiz.PHP.EmbeddedPHP sniff
  -- Thanks to Juliette Reinders Folmer for the patch
- Squiz.WhiteSpace.MemberVarSpacing no longer checks spacing before member vars that come directly after methods
  -- Fixes a conflict between this sniff and the Squiz.WhiteSpace.FunctionSpacing sniff
- Squiz.WhiteSpace.SuperfluousWhitespace now recognizes unicode whitespace at the start and end of a file
  -- Thanks to Juliette Reinders Folmer for the patch
- Fixed bug #2029 : Squiz.Scope.MemberVarScope throws fatal error when a property is found in an interface
  -- Thanks to Juliette Reinders Folmer for the patch
- Fixed bug #2047 : PSR12.Classes.ClassInstantiation false positive when instantiating class from array index
- Fixed bug #2048 : GenericFormatting.MultipleStatementAlignment false positive when assigning values inside an array
- Fixed bug #2053 : PSR12.Classes.ClassInstantiation incorrectly fix when using member vars and some variable formats
- Fixed bug #2065 : Generic.ControlStructures.InlineControlStructure fixing fails when inline control structure contains closure
- Fixed bug #2072 : Squiz.Arrays.ArrayDeclaration throws NoComma error when array value is a shorthand IF statement
- Fixed bug #2082 : File with &quot;defined() or define()&quot; syntax triggers PSR1.Files.SideEffects.FoundWithSymbols
- Fixed bug #2095 : PSR2.Namespaces.NamespaceDeclaration does not handle namespaces defined over multiple lines
   </notes>
  </release>
  <release>
   <version>
    <release>3.3.0</release>
    <api>3.3.0</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <date>2018-06-07</date>
   <license uri="https://github.com/squizlabs/PHP_CodeSniffer/blob/master/licence.txt">BSD License</license>
   <notes>
- The Squiz.WhiteSpace.LanguageConstructSpacing sniff has been deprecated and will be removed in version 4
  -- The sniff has been moved to the Generic standard, with a new code of Generic.WhiteSpace.LanguageConstructSpacing
  -- As soon as possible, replace all instances of the old sniff code with the new sniff code in your ruleset.xml files
     --- The existing Squiz sniff will continue to work until version 4 has been released
  -- The new Generic sniff now also checks many more language constructs to enforce additional spacing rules
     --- Thanks to Mponos George for the contribution

- The current method for setting array properties in ruleset files has been deprecated and will be removed in version 4
  -- Currently, setting an array value uses the string syntax &quot;print=&gt;echo,create_function=&gt;null&quot;
  -- Now, individual array elements are specified using a new &quot;element&quot; tag with &quot;key&quot; and &quot;value&quot; attributes
     --- For example, element key=&quot;print&quot; value=&quot;echo&quot;
  -- Thanks to Michał Bundyra for the patch

- The T_ARRAY_HINT token has been deprecated and will be removed in version 4
  -- The token was used to ensure array type hints were not tokenized as T_ARRAY, but no other type hints were given a special token
  -- Array type hints now use the standard T_STRING token instead
  -- Sniffs referencing this token type will continue to run without error until version 4, but will not find any T_ARRAY_HINT tokens

- The T_RETURN_TYPE token has been deprecated and will be removed in version 4
  -- The token was used to ensure array/self/parent/callable return types were tokenized consistently
  -- For namespaced return types, only the last part of the string (the class name) was tokenized as T_RETURN_TYPE
  -- This was not consistent and so return types are now left using their original token types so they are not skipped by sniffs
     --- The exception are array return types, which are tokenized as T_STRING instead of T_ARRAY, as they are for type hints
  -- Sniffs referencing this token type will continue to run without error until version 4, but will not find any T_RETUTN_TYPE tokens
  -- To get the return type of a function, use the File::getMethodProperties() method, which now contains a &quot;return_type&quot; array index
     --- This contains the return type of the function or closer, or a blank string if not specified
     --- If the return type is nullable, the return type will contain the leading ?
         ---- A nullable_return_type array index in the return value will also be set to true
     --- If the return type contains namespace information, it will be cleaned of whitespace and comments
         ---- To access the original return value string, use the main tokens array

- This release contains an incomplete version of the PSR-12 coding standard
  -- Errors found using this standard should be valid, but it will miss a lot of violations until it is complete
  -- If you&apos;d like to test and help, you can use the standard by running PHPCS with --standard=PSR12

- Config values set using --runtime-set now override any config values set in rulesets or the CodeSniffer.conf file
- You can now apply include-pattern rules to individual message codes in a ruleset like you can with exclude-pattern rules
  -- Previously, include-pattern rules only applied to entire sniffs
  -- If a message code has both include and exclude patterns, the exclude patterns will be ignored
- Using PHPCS annotations to selectively re-enable sniffs is now more flexible
  -- Previously, you could only re-enable a sniff/category/standard using the exact same code that was disabled
  -- Now, you can disable a standard and only re-enable a specific category or sniff
  -- Or, you can disable a specific sniff and have it re-enable when you re-enable the category or standard
- The value of array sniff properties can now be set using phpcs:set annotations
  -- e.g., phpcs:set Standard.Category.SniffName property[] key=&gt;value,key2=&gt;value2
  -- Thanks to Michał Bundyra for the patch
- PHPCS annotations now remain as T_PHPCS_* tokens instead of reverting to comment tokens when --ignore-annotations is used
  -- This stops sniffs (especially commenting sniffs) from generating a large number of false errors when ignoring
  -- Any custom sniffs that are using the T_PHPCS_* tokens to detect annotations may need to be changed to ignore them
     --- Check $phpcsFile-&gt;config-&gt;annotations to see if annotations are enabled and ignore when false
- You can now use fully or partially qualified class names for custom reports instead of absolute file paths
  -- To support this, you must specify an autoload file in your ruleset.xml file and use it to register an autoloader
  -- Your autoloader will need to load your custom report class when requested
  -- Thanks to Juliette Reinders Folmer for the patch
- The JSON report format now does escaping in error source codes as well as error messages
  -- Thanks to Martin Vasel for the patch
- Invalid installed_paths values are now ignored instead of causing a fatal error
- Improved testability of custom rulesets by allowing the installed standards to be overridden
  -- Thanks to Timo Schinkel for the patch
- The key used for caching PHPCS runs now includes all set config values
  -- This fixes a problem where changing config values (e.g., via --runtime-set) used an incorrect cache file
- The &quot;Function opening brace placement&quot; metric has been separated into function and closure metrics in the info report
  -- Closures are no longer included in the &quot;Function opening brace placement&quot; metric
  -- A new &quot;Closure opening brace placement&quot; metric now shows information for closures
- Multi-line T_YIELD_FROM statements are now replicated properly for older PHP versions
- The PSR2 standard no longer produces 2 error messages when the AS keyword in a foreach loop is not lowercase
- Specifying a path to a non-existent dir when using the --report-[reportType]=/path/to/report CLI option no longer throws an exception
  -- This now prints a readable error message, as it does when using --report-file
- The File::getMethodParamaters() method now includes a type_hint_token array index in the return value
  -- Provides the position in the token stack of the first token in the type hint
- The File::getMethodProperties() method now includes a return_type_token array index in the return value
  -- Provides the position in the token stack of the first token in the return type
- The File::getTokensAsString() method can now optionally return original (non tab-replaced) content
  -- Thanks to Juliette Reinders Folmer for the patch
- Removed Squiz.PHP.DisallowObEndFlush from the Squiz standard
  -- If you use this sniff and want to continue banning ob_end_flush(), use Generic.PHP.ForbiddenFunctions instead
  -- You will need to set the forbiddenFunctions property in your ruleset.xml file
- Removed Squiz.PHP.ForbiddenFunctions from the Squiz standard
  -- Replaced by using the forbiddenFunctions property of Generic.PHP.ForbiddenFunctions in the Squiz ruleset.xml
  -- Functionality of the Squiz standard remains the same, but the error codes are now different
  -- Previously, Squiz.PHP.ForbiddenFunctions.Found and Squiz.PHP.ForbiddenFunctions.FoundWithAlternative
  -- Now, Generic.PHP.ForbiddenFunctions.Found and Generic.PHP.ForbiddenFunctions.FoundWithAlternative
- Added new Generic.PHP.LowerCaseType sniff
  -- Ensures PHP types used for type hints, return types, and type casting are lowercase
  -- Thanks to Juliette Reinders Folmer for the contribution
- Added new Generic.WhiteSpace.ArbitraryParenthesesSpacing sniff
  -- Generates an error for whitespace inside parenthesis that don&apos;t belong to a function call/declaration or control structure
  -- Generates a warning for any empty parenthesis found
  -- Allows the required spacing to be set using the spacing sniff property (default is 0)
  -- Allows newlines to be used by setting the ignoreNewlines sniff property (default is false)
  -- Thanks to Juliette Reinders Folmer for the contribution
- Added new PSR12.Classes.ClassInstantiation sniff
  -- Ensures parenthesis are used when instantiating a new class
- Added new PSR12.Keywords.ShortFormTypeKeywords sniff
  -- Ensures the short form of PHP types is used when type casting
- Added new PSR12.Namespaces.CompundNamespaceDepth sniff
  -- Ensures compound namespace use statements have a max depth of 2 levels
  -- The max depth can be changed by setting the &apos;maxDepth&apos; sniff property in a ruleset.xml file
- Added new PSR12.Operators.OperatorSpacing sniff
  -- Ensures operators are preceded and followed by at least 1 space
- Improved core support for grouped property declarations
  -- Also improves support in Squiz.WhiteSpace.ScopeKeywordSpacing and Squiz.WhiteSpace.MemberVarSpacing
  -- Thanks to Juliette Reinders Folmer for the patch
- Generic.Commenting.DocComment now produces a NonParamGroup error when tags are mixed in with the @param tag group
  -- It would previously throw either a NonParamGroup or ParamGroup error depending on the order of tags
  -- This change allows the NonParamGroup error to be suppressed in a ruleset to allow the @param group to contain other tags
  -- Thanks to Phil Davis for the patch
- Generic.Commenting.DocComment now continues checks param tags even if the doc comment short description is missing
  -- This change allows the MissingShort error to be suppressed in a ruleset without all other errors being suppressed as well
  -- Thanks to Phil Davis for the patch
- Generic.CodeAnalysis.AssignmentInCondition now reports a different error code for assignments found in WHILE conditions
  -- The return value of a function call is often assigned in a WHILE condition, so this change makes it easier to exclude these cases
  -- The new code for this error message is Generic.CodeAnalysis.AssignmentInCondition.FoundInWhileCondition
  -- The error code for all other cases remains as Generic.CodeAnalysis.AssignmentInCondition.Found
  -- Thanks to Juliette Reinders Folmer for the patch
- Generic.Functions.OpeningFunctionBraceBsdAllman now longer leaves trailing whitespace when moving the opening brace during fixing
  -- Also applies to fixes made by PEAR.Functions.FunctionDeclaration and Squiz.Functions.MultiLineFunctionDeclaration
- Generic.WhiteSpace.ScopeIndent now does a better job of fixing the indent of multi-line comments
- Generic.WhiteSpace.ScopeIndent now does a better job of fixing the indent of PHP open and close tags
- PEAR.Commenting.FunctionComment now report a different error code for param comment lines with too much padding
  -- Previously, any lines of a param comment that don&apos;t start at the exact comment position got the same error code
  -- Now, only comment lines with too little padding use ParamCommentAlignment as they are clearly mistakes
  -- Comment lines with too much padding may be using precision alignment as now use ParamCommentAlignmentExceeded
  -- This allows for excessive padding to be excluded from a ruleset while continuing to enforce a minimum padding
- PEAR.WhiteSpace.ObjectOperatorIndent now checks the indent of more chained operators
  -- Previously, it only checked chains beginning with a variable
  -- Now, it checks chains beginning with function calls, static class names, etc
- Squiz.Arrays.ArrayDeclaration now continues checking array formatting even if the key indent is not correct
  -- Allows for using different array indent rules while still checking/fixing double arrow and value alignment
- Squiz.Commenting.BlockComment has improved support for tab-indented comments
  -- Thanks to Juliette Reinders Folmer for the patch
- Squiz.Commenting.BlockComment auto fixing no longer breaks when two block comments follow each other
  -- Also stopped single-line block comments from being auto fixed when they are embedded in other code
  -- Also fixed as issue found when PHPCS annotations were used inside a block comment
  -- Thanks to Juliette Reinders Folmer for the patch
- Squiz.Commenting.BlockComment.LastLineIndent is now able to be fixed with phpcbf
  -- Thanks to Juliette Reinders Folmer for the patch
- Squiz.Commenting.BlockComment now aligns star-prefixed lines under the opening tag while fixing, instead of indenting them
  -- Thanks to Juliette Reinders Folmer for the patch
- Squiz.Commenting.FunctionComment.IncorrectTypeHint message no longer contains cut-off suggested type hints
- Squiz.Commenting.InlineComment now uses a new error code for inline comments at the end of a function
  -- Previously, all inline comments followed by a blank line threw a Squiz.Commenting.InlineComment.SpacingAfter error
  -- Now, inline comments at the end of a function will instead throw Squiz.Commenting.InlineComment.SpacingAfterAtFunctionEnd
  -- If you previously excluded SpacingAfter, add an exclusion for SpacingAfterAtFunctionEnd to your ruleset as well
  -- If you previously only included SpacingAfter, consider including SpacingAfterAtFunctionEnd as well
  -- The Squiz standard now excludes SpacingAfterAtFunctionEnd as the blank line is checked elsewhere
  -- Thanks to Juliette Reinders Folmer for the patch
- Squiz.ControlStructures.ControlSignature now errors when a comment follows the closing brace of an earlier body
  -- Applies to catch, finally, else, elseif, and do/while structures
  -- The included PSR2 standard now enforces this rule
  -- Thanks to Juliette Reinders Folmer for the patch
- Squiz.Formatting.OperatorBracket.MissingBrackets message has been changed to remove the word &quot;arithmetic&quot;
  -- The sniff checks more than just arithmetic operators, so the message is now clearer
- Sniffs.Operators.ComparisonOperatorUsage now detects more cases of implicit true comparisons
  -- It could previously be confused by comparisons used as function arguments
- Squiz.PHP.CommentedOutCode now ignores simple @-style annotation comments so they are not flagged as commented out code
  -- Thanks to Juliette Reinders Folmer for the patch
- Squiz.PHP.CommentedOutCode now ignores a greater number of short comments so they are not flagged as commented out code
  -- Thanks to Juliette Reinders Folmer for the patch
- Squiz.PHP.DisallowComparisonAssignment no longer errors when using the null coalescing operator
  -- Given this operator is used almost exclusively to assign values, it didn&apos;t make sense to generate an error
- Squiz.WhiteSpacing.FunctionSpacing now has a property to specify how many blank lines should be before the first class method
  -- Only applies when a method is the first code block in a class (i.e., there are no member vars before it)
  -- Override the &apos;spacingBeforeFirst&apos; property in a ruleset.xml file to change
  -- If not set, the sniff will use whatever value is set for the existing &apos;spacing&apos; property
- Squiz.WhiteSpacing.FunctionSpacing now has a property to specify how many blank lines should be after the last class method
  -- Only applies when a method is the last code block in a class (i.e., there are no member vars after it)
  -- Override the &apos;spacingAfterLast&apos; property in a ruleset.xml file to change
  -- If not set, the sniff will use whatever value is set for the existing &apos;spacing&apos; property
- Fixed bug #1863 : File::findEndOfStatement() not working when passed a scope opener
- Fixed bug #1876 : PSR2.Namespaces.UseDeclaration not giving error for use statements before the namespace declaration
  -- Adds a new PSR2.Namespaces.UseDeclaration.UseBeforeNamespace error message
- Fixed bug #1881 : Generic.Arrays.ArrayIndent is indenting sub-arrays incorrectly when comma not used after the last value
- Fixed bug #1882 : Conditional with missing braces confused by indirect variables
- Fixed bug #1915 : JS tokenizer fails to tokenize regular expression proceeded by boolean not operator
- Fixed bug #1920 : Directory exclude pattern improperly excludes files with names that start the same
  -- Thanks to Jeff Puckett for the patch
- Fixed bug #1922 : Equal sign alignment check broken when list syntax used before assignment operator
- Fixed bug #1925 : Generic.Formatting.MultipleStatementAlignment skipping assignments within closures
- Fixed bug #1931 : Generic opening brace placement sniffs do not correctly support function return types
- Fixed bug #1932 : Generic.ControlStructures.InlineControlStructure fixer moves new PHPCS annotations
- Fixed bug #1938 : Generic opening brace placement sniffs incorrectly move PHPCS annotations
  -- Thanks to Juliette Reinders Folmer for the patch
- Fixed bug #1939 : phpcs:set annotations do not cause the line they are on to be ignored
  -- Thanks to Juliette Reinders Folmer for the patch
- Fixed bug #1949 : Squiz.PHP.DisallowMultipleAssignments false positive when using namespaces with static assignments
- Fixed bug #1959 : SquizMultiLineFunctionDeclaration error when param has trailing comment
  -- Thanks to Juliette Reinders Folmer for the patch
- Fixed bug #1963 : Squiz.Scope.MemberVarScope does not work for multiline member declaration
  -- Thanks to Juliette Reinders Folmer for the patch
- Fixed bug #1971 : Short array list syntax not correctly tokenized if short array is the first content in a file
- Fixed bug #1979 : Tokenizer does not change heredoc to nowdoc token if the start tag contains spaces
- Fixed bug #1982 : Squiz.Arrays.ArrayDeclaration fixer sometimes puts a comma in front of the last array value
- Fixed bug #1993 : PSR1/PSR2 not reporting or fixing short open tags
- Fixed bug #1996 : Custom report paths don&apos;t work on case-sensitive filesystems
- Fixed bug #2006 : Squiz.Functions.FunctionDeclarationArgumentSpacing fixer removes comment between parens when no args
  -- The SpacingAfterOpenHint error message has been removed
     --- It is replaced by the the existing SpacingAfterOpen message
  -- The error message format for the SpacingAfterOpen and SpacingBeforeClose messages has been changed
     --- These used to contain 3 pieces of data, but now only contain 2
  -- If you have customised the error messages of this sniff, please review your ruleset after upgrading
- Fixed bug #2018 : Generic.Formatting.MultipleStatementAlignment does see PHP close tag as end of statement block
  -- Thanks to Juliette Reinders Folmer for the patch
- Fixed bug #2027 : PEAR.NamingConventions.ValidFunctionName error when function name includes double underscore
  -- Thanks to Juliette Reinders Folmer for the patch
   </notes>
  </release>
  <release>
   <version>
    <release>3.2.3</release>
    <api>3.2.3</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <date>2018-02-21</date>
   <license uri="https://github.com/squizlabs/PHP_CodeSniffer/blob/master/licence.txt">BSD License</license>
   <notes>
- The new phpcs: comment syntax can now be prefixed with an at symbol ( @phpcs: )
  -- This restores the behaviour of the previous syntax where these comments are ignored by doc generators
- The current PHP version ID is now used to generate cache files
  -- This ensures that only cache files generated by the current PHP version are selected
  -- This change fixes caching issues when using sniffs that produce errors based on the current PHP version
- A new Tokens::$phpcsCommentTokens array is now available for sniff developers to detect phpcs: comment syntax
  -- Thanks to Juliette Reinders Folmer for the patch
- The PEAR.Commenting.FunctionComment.Missing error message now includes the name of the function
  -- Thanks to Yorman Arias for the patch
- The PEAR.Commenting.ClassComment.Missing and Squiz.Commenting.ClassComment.Missing error messages now include the name of the class
  -- Thanks to Yorman Arias for the patch
- PEAR.Functions.FunctionCallSignature now only forces alignment at a specific tab stop while fixing
  -- It was enforcing this during checking, but this meant invalid errors if the OpeningIndent message was being muted
  -- This fixes incorrect errors when using the PSR2 standard with some code blocks
- Generic.Files.LineLength now ignores lines that only contain phpcs: annotation comments
  -- Thanks to Juliette Reinders Folmer for the patch
- Generic.Formatting.MultipleStatementAlignment now skips over arrays containing comments
  -- Thanks to Juliette Reinders Folmer for the patch
- Generic.PHP.Syntax now forces display_errors to ON when linting
  -- Thanks to Raúl Arellano for the patch
- PSR2.Namespaces.UseDeclaration has improved syntax error handling and closure detection
  -- Thanks to Juliette Reinders Folmer for the patch
- Squiz.PHP.CommentedOutCode now has improved comment block detection for improved accuracy
  -- Thanks to Juliette Reinders Folmer for the patch
- Squiz.PHP.NonExecutableCode could fatal error while fixing file with syntax error
- Squiz.PHP.NonExecutableCode now detects unreachable code after a goto statement
  -- Thanks to Juliette Reinders Folmer for the patch
- Squiz.WhiteSpace.LanguageConstructSpacing has improved syntax error handling while fixing
  -- Thanks to Juliette Reinders Folmer for the patch
- Improved phpcs: annotation syntax handling for a number of sniffs
  -- Thanks to Juliette Reinders Folmer for the patch
- Improved auto-fixing of files with incomplete comment blocks for various commenting sniffs
  -- Thanks to Juliette Reinders Folmer for the patch
- Fixed test suite compatibility with PHPUnit 7
- Fixed bug #1793 : PSR2 forcing exact indent for function call opening statements
- Fixed bug #1803 : Squiz.WhiteSpace.ScopeKeywordSpacing removes member var name while fixing if no space after scope keyword
- Fixed bug #1817 : Blank line not enforced after control structure if comment on same line as closing brace
- Fixed bug #1827 : A phpcs:enable comment is not tokenized correctly if it is outside a phpcs:disable block
  -- Thanks to Juliette Reinders Folmer for the patch
- Fixed bug #1828 : Squiz.WhiteSpace.SuperfluousWhiteSpace ignoreBlankLines property ignores whitespace after single line comments
  -- Thanks to Juliette Reinders Folmer for the patch
- Fixed bug #1840 : When a comment has too many asterisks, phpcbf gives FAILED TO FIX error
- Fixed bug #1867 : Cant use phpcs:ignore where the next line is HTML
- Fixed bug #1870 : Invalid warning in multiple assignments alignment with closure or anon class
- Fixed bug #1890 : Incorrect Squiz.WhiteSpace.ControlStructureSpacing.NoLineAfterClose error between catch and finally statements
- Fixed bug #1891 : Comment on last USE statement causes false positive for PSR2.Namespaces.UseDeclaration.SpaceAfterLastUse
  -- Thanks to Matt Coleman, Daniel Hensby, and Juliette Reinders Folmer for the patch
- Fixed bug #1901 : Fixed PHPCS annotations in multi-line tab-indented comments + not ignoring whole line for phpcs:set
  -- Thanks to Juliette Reinders Folmer for the patch
   </notes>
  </release>
  <release>
   <version>
    <release>3.2.2</release>
    <api>3.2.2</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <date>2017-12-20</date>
   <license uri="https://github.com/squizlabs/PHP_CodeSniffer/blob/master/licence.txt">BSD License</license>
   <notes>
- Disabled STDIN detection on Windows
  -- This fixes a problem with IDE plugins (e.g., PHPStorm) hanging on Windows
   </notes>
  </release>
  <release>
   <version>
    <release>3.2.1</release>
    <api>3.2.1</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <date>2017-12-18</date>
   <license uri="https://github.com/squizlabs/PHP_CodeSniffer/blob/master/licence.txt">BSD License</license>
   <notes>
- Fixed problems with some scripts and plugins waiting for STDIN
  -- This was a notable problem with IDE plugins (e.g., PHPStorm) and build systems
- Empty diffs are no longer followed by a newline character (request #1781)
- Generic.Functions.OpeningFunctionBraceKernighanRitchie no longer complains when the open brace is followed by a close tag
  -- This makes the sniff more useful when used in templates
  -- Thanks to Joseph Zidell for the patch
- Fixed bug #1782 : Incorrect detection of operator in ternary + anonymous function
   </notes>
  </release>
  <release>
   <version>
    <release>3.2.0</release>
    <api>3.2.0</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <date>2017-12-13</date>
   <license uri="https://github.com/squizlabs/PHP_CodeSniffer/blob/master/licence.txt">BSD License</license>
   <notes>
- This release deprecates the @codingStandards comment syntax used for sending commands to PHP_CodeSniffer
  -- The existing syntax will continue to work in all version 3 releases, but will be removed in version 4
  -- The comment formats have been replaced by a shorter syntax:
     --- @codingStandardsIgnoreFile becomes phpcs:ignoreFile
     --- @codingStandardsIgnoreStart becomes phpcs:disable
     --- @codingStandardsIgnoreEnd becomes phpcs:enable
     --- @codingStandardsIgnoreLine becomes phpcs:ignore
     --- @codingStandardsChangeSetting becomes phpcs:set
  -- The new syntax allows for additional developer comments to be added after a -- separator
     --- This is useful for describing why a code block is being ignored, or why a setting is being changed
     --- E.g., phpcs:disable -- This code block must be left as-is.
  -- Comments using the new syntax are assigned new comment token types to allow them to be detected:
     --- phpcs:ignoreFile has the token T_PHPCS_IGNORE_FILE
     --- phpcs:disable has the token T_PHPCS_DISABLE
     --- phpcs:enable has the token T_PHPCS_ENABLE
     --- phpcs:ignore has the token T_PHPCS_IGNORE
     --- phpcs:set has the token T_PHPCS_SET

- The phpcs:disable and phpcs:ignore comments can now selectively ignore specific sniffs (request #604)
  -- E.g., phpcs:disable Generic.Commenting.Todo.Found for a specific message
  -- E.g., phpcs:disable Generic.Commenting.Todo for a whole sniff
  -- E.g., phpcs:disable Generic.Commenting for a whole category of sniffs
  -- E.g., phpcs:disable Generic for a whole standard
  -- Multiple sniff codes can be specified by comma separating them
     --- E.g., phpcs:disable Generic.Commenting.Todo,PSR1.Files
- @codingStandardsIgnoreLine comments now only ignore the following line if they are on a line by themselves
  -- If they are at the end of an existing line, they will only ignore the line they are on
  -- Stops some lines from accidentally being ignored
  -- Same rule applies for the new phpcs:ignore comment syntax
- PSR1.Files.SideEffects now respects the new phpcs:disable comment syntax
  -- The sniff will no longer check any code that is between phpcs:disable and phpcs:enable comments
  -- The sniff does not support phpcs:ignore; you must wrap code structures with disable/enable comments
  -- Previously, there was no way to have this sniff ignore parts of a file
- Fixed a problem where PHPCS would sometimes hang waiting for STDIN, or read incomplete versions of large files
  -- Thanks to Arne Jørgensen for the patch
- Array properties specified in ruleset files now have their keys and values trimmed
  -- This saves having to do this in individual sniffs and stops errors introduced by whitespace in rulesets
  -- Thanks to Juliette Reinders Folmer for the patch
- Added phpcs.xsd to allow validation of ruleset XML files
  -- Thanks to Renaat De Muynck for the contribution
- File paths specified using --stdin-path can now point to fake file locations (request #1488)
  -- Previously, STDIN files using fake file paths were excluded from checking
- Setting an empty basepath (--basepath=) on the CLI will now clear a basepath set directly in a ruleset
  -- Thanks to Xaver Loppenstedt for the patch
- Ignore patterns are now checked on symlink target paths instead of symlink source paths
  -- Restores previous behaviour of this feature
- Metrics were being double counted when multiple sniffs were recording the same metric
- Added support for bash process substitution
  -- Thanks to Scott Dutton for the contribution
- Files included in the cache file code hash are now sorted to aid in cache file reuse across servers
- Windows BAT files can now be used outside a PEAR install
  -- You must have the path to PHP set in your PATH environment variable
  -- Thanks to Joris Debonnet for the patch
- The JS unsigned right shift assignment operator is now properly classified as an assignment operator
  -- Thanks to Juliette Reinders Folmer for the patch
- The AbstractVariableSniff abstract sniff now supports anonymous classes and nested functions
  -- Also fixes an issue with Squiz.Scope.MemberVarScope where member vars of anonymous classes were not being checked
- Added AbstractArraySniff to make it easier to create sniffs that check array formatting
  -- Allows for checking of single and multi line arrays easily
  -- Provides a parsed structure of the array including positions of keys, values, and double arrows
- Added Generic.Arrays.ArrayIndent to enforce a single tab stop indent for array keys in multi-line arrays
 -- Also ensures the close brace is on a new line and indented to the same level as the original statement
 -- Allows for the indent size to be set using an &quot;indent&quot; property of the sniff
- Added Generic.PHP.DiscourageGoto to warn about the use of the GOTO language construct
  -- Thanks to Juliette Reinders Folmer for the contribution
- Generic.Debug.ClosureLinter was not running the gjslint command
  -- Thanks to Michał Bundyra for the patch
- Generic.WhiteSpace.DisallowSpaceIndent now fixes space indents in multi-line block comments
  -- Thanks to Juliette Reinders Folmer for the patch
- Generic.WhiteSpace.DisallowSpaceIndent now fixes mixed space/tab indents more accurately
  -- Thanks to Juliette Reinders Folmer for the patch
- Generic.WhiteSpace.DisallowTabIndent now fixes tab indents in multi-line block comments
  -- Thanks to Juliette Reinders Folmer for the patch
- PEAR.Functions.FunctionDeclaration no longer errors when a function declaration is the first content in a JS file
  -- Thanks to Juliette Reinders Folmer for the patch
- PEAR.Functions.FunctionCallSignature now requires the function name to be indented to an exact tab stop
  -- If the function name is not the start of the statement, the opening statement must be indented correctly instead
  -- Added a new fixable error code PEAR.Functions.FunctionCallSignature.OpeningIndent for this error
- Squiz.Functions.FunctionDeclarationArgumentSpacing is no longer confused about comments in function declarations
  -- Thanks to Juliette Reinders Folmer for the patch
- Squiz.PHP.NonExecutableCode error messages now indicate which line the code block ending is on
  -- Makes it easier to identify where the code block exited or returned
  -- Thanks to Juliette Reinders Folmer for the patch
- Squiz.Commenting.FunctionComment now supports nullable type hints
- Squiz.Commenting.FunctionCommentThrowTag no longer assigns throw tags inside anon classes to the enclosing function
- Squiz.WhiteSpace.SemicolonSpacing now ignores semicolons used for empty statements inside FOR conditions
  -- Thanks to Juliette Reinders Folmer for the patch
- Squiz.ControlStructures.ControlSignature now allows configuring the number of spaces before the colon in alternative syntax
  -- Override the &apos;requiredSpacesBeforeColon&apos; setting in a ruleset.xml file to change
  -- Default remains at 1
  -- Thanks to Nikola Kovacs for the patch
- The Squiz standard now ensures array keys are indented 4 spaces from the main statement
  -- Previously, this standard aligned keys 1 space from the start of the array keyword
- The Squiz standard now ensures array end braces are aligned with the main statement
  -- Previously, this standard aligned the close brace with the start of the array keyword
- The standard for PHP_CodeSniffer itself now enforces short array syntax
- The standard for PHP_CodeSniffer itself now uses the Generic.Arrays/ArrayIndent sniff rules
- Improved fixer conflicts and syntax error handling for a number of sniffs
  -- Thanks to Juliette Reinders Folmer for the patch
- Fixed bug #1462 : Error processing cyrillic strings in Tokenizer
- Fixed bug #1573 : Squiz.WhiteSpace.LanguageConstructSpacing does not properly check for tabs and newlines
  -- Thanks to Michał Bundyra for the patch
- Fixed bug #1590 : InlineControlStructure CBF issue while adding braces to an if thats returning a nested function
- Fixed bug #1718 : Unclosed strings at EOF sometimes tokenized as T_WHITESPACE by the JS tokenizer
- Fixed bug #1731 : Directory exclusions do not work as expected when a single file name is passed to phpcs
- Fixed bug #1737 : Squiz.CSS.EmptyStyleDefinition sees comment as style definition and fails to report error
- Fixed bug #1746 : Very large reports can sometimes become garbled when using the parallel option
- Fixed bug #1747 : Squiz.Scope.StaticThisUsage incorrectly looking inside closures
- Fixed bug #1757 : Unknown type hint &quot;object&quot; in Squiz.Commenting.FunctionComment
- Fixed bug #1758 : PHPCS gets stuck creating file list when processing circular symlinks
- Fixed bug #1761 : Generic.WhiteSpace.ScopeIndent error on multi-line function call with static closure argument
- Fixed bug #1762 : Generic.WhiteSpace.Disallow[Space/Tab]Indent not inspecting content before open tag
  -- Thanks to Juliette Reinders Folmer for the patch
- Fixed bug #1769 : Custom &quot;define&quot; function triggers a warning about declaring new symbols
- Fixed bug #1776 : Squiz.Scope.StaticThisUsage incorrectly looking inside anon classes
- Fixed bug #1777 : Generic.WhiteSpace.ScopeIndent incorrect indent errors when self called function proceeded by comment
   </notes>
  </release>
  <release>
   <version>
    <release>3.1.1</release>
    <api>3.1.1</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <date>2017-10-17</date>
   <license uri="https://github.com/squizlabs/PHP_CodeSniffer/blob/master/licence.txt">BSD License</license>
   <notes>
- Restored preference of non-dist files over dist files for phpcs.xml and phpcs.xml.dist
  -- The order that the files are searched is now: .phpcs.xml, phpcs.xml, .phpcs.xml.dist, phpcs.xml.dist
  -- Thanks to Juliette Reinders Folmer for the patch
- Progress output now correctly shows skipped files
- Progress output now shows 100% when the file list has finished processing (request #1697)
- Stopped some IDEs complaining about testing class aliases
  -- Thanks to Vytautas Stankus for the patch
- Squiz.Commenting.InlineComment incorrectly identified comment blocks in some cases, muting some errors
  -- Thanks to Juliette Reinders Folmer for the patch
- Fixed bug #1512 : PEAR.Functions.FunctionCallSignature enforces spaces when no arguments if required spaces is not 0
- Fixed bug #1522 : Squiz Arrays.ArrayDeclaration and Strings.ConcatenationSpacing fixers causing parse errors with here/  nowdocs
- Fixed bug #1570 : Squiz.Arrays.ArrayDeclaration fixer removes comments between array keyword and open parentheses
- Fixed bug #1604 : File::isReference has problems with some bitwise operators and class property references
  -- Thanks to Juliette Reinders Folmer for the patch
- Fixed bug #1645 : Squiz.Commenting.InlineComment will fail to fix comments at the end of the file
  -- Thanks to Juliette Reinders Folmer for the patch
- Fixed bug #1656 : Using the --sniffs argument has a problem with case sensitivity
- Fixed bug #1657 : Uninitialized string offset: 0 when sniffing CSS
- Fixed bug #1669 : Temporary expression proceeded by curly brace is detected as function call
- Fixed bug #1681 : Huge arrays are super slow to scan with Squiz.Arrays.ArrayDeclaration sniff
- Fixed bug #1694 : Squiz.Arrays.ArrayBracketSpacing is removing some comments during fixing
  -- Thanks to Juliette Reinders Folmer for the patch
- Fixed bug #1702 : Generic.WhiteSpaceDisallowSpaceIndent fixer bug when line only contains superfluous whitespace
   </notes>
  </release>
  <release>
   <version>
    <release>3.1.0</release>
    <api>3.1.0</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <date>2017-09-20</date>
   <license uri="https://github.com/squizlabs/PHP_CodeSniffer/blob/master/licence.txt">BSD License</license>
   <notes>
- This release includes a change to support newer versions of PHPUnit (versions 4, 5, and 6 are now supported)
 -- The custom PHP_CodeSniffer test runner now requires a bootstrap file
 -- Developers with custom standards using the PHP_CodeSniffer test runner will need to do one of the following:
    --- run your unit tests from the PHP_CodeSniffer root dir so the bootstrap file is included
    --- specify the PHP_CodeSniffer bootstrap file on the command line: phpunit --bootstrap=/path/to/phpcs/tests/bootstrap.php
    --- require the PHP_CodeSniffer bootstrap file from your own bootstrap file
 -- If you don&apos;t run PHP_CodeSniffer unit tests, this change will not affect you
 -- Thanks to Juliette Reinders Folmer for the patch

- A phpcs.xml or phpcs.xml.dist file now takes precedence over the default_standard config setting
  -- Thanks to Björn Fischer for the patch
- Both phpcs.xml and phpcs.xml.dist files can now be prefixed with a dot (request #1566)
  -- The order that the files are searched is: .phpcs.xml, .phpcs.xml.dist, phpcs.xml, phpcs.xml.dist
- The autoloader will now search for files during unit tests runs from the same locations as during normal phpcs runs
  -- Allows for easier unit testing of custom standards that use helper classes or custom namespaces
- Include patterns for sniffs now use OR logic instead of AND logic
  -- Previously, a file had to be in each of the include patterns to be processed by a sniff
  -- Now, a file has to only be in at least one of the patterns
  -- This change reflects the original intention of the feature
- PHPCS will now follow symlinks under the list of checked directories
  -- This previously only worked if you specified the path to a symlink on the command line
- Output from --config-show, --config-set, and --config-delete now includes the path to the loaded config file
- PHPCS now cleanly exits if its config file is not readable
  -- Previously, a combination of PHP notices and PHPCS errors would be generated
- Comment tokens that start with /** are now always tokenized as docblocks
  -- Thanks to Michał Bundyra for the patch
- The PHP-supplied T_YIELD and T_YIELD_FROM token have been replicated for older PHP versions
  -- Thanks to Michał Bundyra for the patch
- Added new Generic.CodeAnalysis.AssignmentInCondition sniff to warn about variable assignments inside conditions
  -- Thanks to Juliette Reinders Folmer for the contribution
- Added Generic.Files.OneObjectStructurePerFile sniff to ensure there is a single class/interface/trait per file
  -- Thanks to Mponos George for the contribution
- Function call sniffs now check variable function names and self/static object creation
  -- Specific sniffs are Generic.Functions.FunctionCallArgumentSpacing, PEAR.Functions.FunctionCallSignature, and   PSR2.Methods.FunctionCallSignature
  -- Thanks to Michał Bundyra for the patch
- Generic.Files.LineLength can now be configured to ignore all comment lines, no matter their length
  -- Set the ignoreComments property to TRUE (default is FALSE) in your ruleset.xml file to enable this
  -- Thanks to Juliette Reinders Folmer for the patch
- Generic.PHP.LowerCaseKeyword now checks self, parent, yield, yield from, and closure (function) keywords
  -- Thanks to Michał Bundyra for the patch
- PEAR.Functions.FunctionDeclaration now removes a blank line if it creates one by moving the curly brace during fixing
- Squiz.Commenting.FunctionCommentThrowTag now supports PHP 7.1 multi catch exceptions
- Squiz.Formatting.OperatorBracket no longer throws errors for PHP 7.1 multi catch exceptions
- Squiz.Commenting.LongConditionClosingComment now supports finally statements
- Squiz.Formatting.OperatorBracket now correctly fixes pipe separated flags
- Squiz.Formatting.OperatorBracket now correctly fixes statements containing short array syntax
- Squiz.PHP.EmbeddedPhp now properly fixes cases where the only content in an embedded PHP block is a comment
  -- Thanks to Juliette Reinders Folmer for the patch
- Squiz.WhiteSpace.ControlStructureSpacing now ignores comments when checking blank lines at the top of control structures
- Squiz.WhiteSpace.ObjectOperatorSpacing now detects and fixes spaces around double colons
  -- Thanks to Julius Šmatavičius for the patch
- Squiz.WhiteSpace.MemberVarSpacing can now be configured to check any number of blank lines between member vars
  -- Set the spacing property (default is 1) in your ruleset.xml file to set the spacing
- Squiz.WhiteSpace.MemberVarSpacing can now be configured to check a different number of blank lines before the first member var
  -- Set the spacingBeforeFirst property (default is 1) in your ruleset.xml file to set the spacing
- Added a new PHP_CodeSniffer\Util\Tokens::$ooScopeTokens static member var for quickly checking object scope
  -- Includes T_CLASS, T_ANON_CLASS, T_INTERFACE, and T_TRAIT
  -- Thanks to Juliette Reinders Folmer for the patch
- PHP_CodeSniffer\Files\File::findExtendedClassName() now supports extended interfaces
  -- Thanks to Martin Hujer for the patch
- Fixed bug #1550 : Squiz.Commenting.FunctionComment false positive when function contains closure
- Fixed bug #1577 : Generic.InlineControlStructureSniff breaks with a comment between body and condition in do while loops
- Fixed bug #1581 : Sniffs not loaded when one-standard directories are being registered in installed_paths
- Fixed bug #1591 : Autoloader failing to load arbitrary files when installed_paths only set via a custom ruleset
- Fixed bug #1605 : Squiz.WhiteSpace.OperatorSpacing false positive on unary minus after comment
  -- Thanks to Juliette Reinders Folmer for the patch
- Fixed bug #1615 : Uncaught RuntimeException when phpcbf fails to fix files
- Fixed bug #1637 : Generic.WhiteSpaceScopeIndent closure argument indenting incorrect with multi-line strings
- Fixed bug #1638 : Squiz.WhiteSpace.ScopeClosingBrace closure argument indenting incorrect with multi-line strings
- Fixed bug #1640 : Squiz.Strings.DoubleQuoteUsage replaces tabs with spaces when fixing
  -- Thanks to Juliette Reinders Folmer for the patch
   </notes>
  </release>
  <release>
   <version>
    <release>3.0.2</release>
    <api>3.0.2</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <date>2017-07-18</date>
   <license uri="https://github.com/squizlabs/PHP_CodeSniffer/blob/master/licence.txt">BSD License</license>
   <notes>
- Fixed a problem where the source report was not printing the correct number of errors found
- Fixed a problem where the --cache=/path/to/cachefile CLI argument was not working
- The code report now gracefully handles tokenizer exceptions
- The phpcs and phpcbf scripts and now the only places that exit() in the code
  -- This allows for easier usage of core PHPCS functions from external scripts
  -- If you are calling Runner::runPHPCS() or Runner::runPHPCBF() directly, you will get back the full range of exit codes
  -- If not, catch the new DeepExitException to get the error message ($e-&gt;getMessage()) and exit code ($e-&gt;getCode());
- NOWDOC tokens are now considered conditions, just as HEREDOC tokens are
  -- This makes it easier to find the start and end of a NOWDOC from any token within it
  -- Thanks to Michał Bundyra for the patch
- Custom autoloaders are now only included once in case multiple standards are using the same one
  -- Thanks to Juliette Reinders Folmer for the patch
- Improved tokenizing of fallthrough CASE and DEFAULT statements that share a closing statement and use curly braces
- Improved the error message when Squiz.ControlStructures.ControlSignature detects a newline after the closing parenthesis
- Fixed bug #1465 : Generic.WhiteSpace.ScopeIndent reports incorrect errors when indenting double arrows in short arrays
- Fixed bug #1478 : Indentation in fallthrough CASE that contains a closure
- Fixed bug #1497 : Fatal error if composer prepend-autoloader is set to false
  -- Thanks to Kunal Mehta for the patch
- Fixed bug #1503 : Alternative control structure syntax not always recognized as scoped
- Fixed bug #1523 : Fatal error when using the --suffix argument
  -- Thanks to Juliette Reinders Folmer for the patch
- Fixed bug #1526 : Use of basepath setting can stop PHPCBF being able to write fixed files
- Fixed bug #1530 : Generic.WhiteSpace.ScopeIndent can increase indent too much for lines within code blocks
- Fixed bug #1547 : Wrong token type for backslash in use function
  -- Thanks to Michał Bundyra for the patch
- Fixed bug #1549 : Squiz.PHP.EmbeddedPhp fixer conflict with // comment before PHP close tag
  -- Thanks to Juliette Reinders Folmer for the patch
- Fixed bug #1560 : Squiz.Commenting.FunctionComment fatal error when fixing additional param comment lines that have no indent
   </notes>
  </release>
  <release>
   <version>
    <release>3.0.1</release>
    <api>3.0.1</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <date>2017-06-14</date>
   <license uri="https://github.com/squizlabs/PHP_CodeSniffer/blob/master/licence.txt">BSD License</license>
   <notes>
- This release contains a fix for a security advisory related to the improper handling of a shell command
  -- A properly crafted filename would allow for arbitrary code execution when using the --filter=gitmodified command line option
  -- All version 3 users are encouraged to upgrade to this version, especially if you are checking 3rd-party code
     --- e.g., you run PHPCS over libraries that you did not write
     --- e.g., you provide a web service that runs PHPCS over user-uploaded files or 3rd-party repositories
     --- e.g., you allow external tool paths to be set by user-defined values
  -- If you are unable to upgrade but you check 3rd-party code, ensure you are not using the Git modified filter
  -- This advisory does not affect PHP_CodeSniffer version 2.
  -- Thanks to Sergei Morozov for the report and patch

- Arguments on the command line now override or merge with those specified in a ruleset.xml file in all cases
- PHPCS now stops looking for a phpcs.xml file as soon as one is found, favoring the closest one to the current dir
- Added missing help text for the --stdin-path CLI option to --help
- Re-added missing help text for the --file-list and --bootstrap CLI options to --help
- Runner::runPHPCS() and Runner::runPHPCBF() now return an exit code instead of exiting directly (request #1484)
- The Squiz standard now enforces short array syntax by default
- The autoloader is now working correctly with classes created with class_alias()
- The autoloader will now search for files inside all directories in the installed_paths config var
  -- This allows autoloading of files inside included custom coding standards without manually requiring them
- You can now specify a namespace for a custom coding standard, used by the autoloader to load non-sniff helper files
  -- Also used by the autoloader to help other standards directly include sniffs for your standard
  -- Set the value to the namespace prefix you are using for sniff files (everything up to \Sniffs\)
  -- e.g., if your namespace format is MyProject\CS\Standard\Sniffs\Category set the namespace to MyProject\CS\Standard
  -- If omitted, the namespace is assumed to be the same as the directory name containing the ruleset.xml file
  -- The namespace is set in the ruleset tag of the ruleset.xml file
  -- e.g., ruleset name=&quot;My Coding Standard&quot; namespace=&quot;MyProject\CS\Standard&quot;
- Rulesets can now specify custom autoloaders using the new autoload tag
  -- Autoloaders are included while the ruleset is being processed and before any custom sniffs are included
  -- Allows for very custom autoloading of helper classes well before the boostrap files are included
- The PEAR standard now includes Squiz.Commenting.DocCommentAlignment
  -- It previously broke comments onto multiple lines, but didn&apos;t align them
- Fixed a problem where excluding a message from a custom standard&apos;s own sniff would exclude the whole sniff
  -- This caused some PSR2 errors to be under-reported
- Fixed bug #1442 : T_NULLABLE detection not working for nullable parameters and return type hints in some cases
- Fixed bug #1447 : Running the unit tests with a phpunit config file breaks the test suite
  -- Unknown arguments were not being handled correctly, but are now stored in $config-&gt;unknown
- Fixed bug #1449 : Generic.Classes.OpeningBraceSameLine doesn&apos;t detect comment before opening brace
  -- Thanks to Juliette Reinders Folmer for the patch
- Fixed bug #1450 : Coding standard located under an installed_path with the same directory name throws an error
  -- Thanks to Juliette Reinders Folmer for the patch
- Fixed bug #1451 : Sniff exclusions/restrictions dont work with custom sniffs unless they use the PHP_CodeSniffer NS
- Fixed bug #1454 : Squiz.WhiteSpace.OperatorSpacing is not checking spacing on either side of a short ternary operator
  -- Thanks to Mponos George for the patch
- Fixed bug #1495 : Setting an invalid installed path breaks all commands
- Fixed bug #1496 : Squiz.Strings.DoubleQuoteUsage not unescaping dollar sign when fixing
  -- Thanks to Michał Bundyra for the patch
- Fixed bug #1501 : Interactive mode is broken
- Fixed bug #1504 : PSR2.Namespaces.UseDeclaration hangs fixing use statement with no trailing code
   </notes>
  </release>
  <release>
   <version>
    <release>2.9.1</release>
    <api>2.9.1</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <date>2017-05-22</date>
   <license uri="https://github.com/squizlabs/PHP_CodeSniffer/blob/master/licence.txt">BSD License</license>
   <notes>
- Fixed bug #1442 : T_NULLABLE detection not working for nullable parameters and return type hints in some cases
- Fixed bug #1448 : Generic.Classes.OpeningBraceSameLine doesn&apos;t detect comment before opening brace
  -- Thanks to Juliette Reinders Folmer for the patch
   </notes>
  </release>
  <release>
   <version>
    <release>3.0.0</release>
    <api>3.0.0</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <date>2017-05-04</date>
   <license uri="https://github.com/squizlabs/PHP_CodeSniffer/blob/master/licence.txt">BSD License</license>
   <notes>
- Added an --ignore-annotations command line argument to ignore all @codingStandards annotations in code comments (request #811)
-- This allows you to force errors to be shown that would otherwise be ignored by code comments
  -- Also stop files being able to change sniff properties mid way through processing
- An error is now reported if no sniffs were registered to be run (request #1129)
- The autoloader will now search for files inside the directory of any loaded coding standard
  -- This allows autoloading of any file inside a custom coding standard without manually requiring them
  -- Ensure your namespace begins with your coding standard&apos;s directory name and follows PSR-4
  -- e.g., StandardName\Sniffs\CategoryName\AbstractHelper or StandardName\Helpers\StringSniffHelper
- Fixed an error where STDIN was sometimes not checked when using the --parallel CLI option
- The is_closure index has been removed from the return value of File::getMethodProperties()
  -- This value was always false because T_FUNCTION tokens are never closures
  -- Closures have a token type of T_CLOSURE
- The File::isAnonymousFunction() method has been removed
  -- This function always returned false because it only accepted T_FUNCTION tokens, which are never closures
  -- Closures have a token type of T_CLOSURE
- Includes all changes from the 2.9.0 release
- Fixed bug #834 : PSR2.ControlStructures.SwitchDeclaration does not handle if branches with returns
  -- Thanks to Fabian Wiget for the patch
   </notes>
  </release>
  <release>
   <version>
    <release>3.0.0RC4</release>
    <api>3.0.0RC4</api>
   </version>
   <stability>
    <release>beta</release>
    <api>beta</api>
   </stability>
   <date>2017-03-02</date>
   <license uri="https://github.com/squizlabs/PHP_CodeSniffer/blob/master/licence.txt">BSD License</license>
   <notes>
- This release contains a fix for a security advisory related to the improper handling of shell commands
  -- Uses of shell_exec() and exec() were not escaping filenames and configuration settings in most cases
  -- A properly crafted filename or configuration option would allow for arbitrary code execution when using some features
  -- All users are encouraged to upgrade to this version, especially if you are checking 3rd-party code
     --- e.g., you run PHPCS over libraries that you did not write
     --- e.g., you provide a web service that runs PHPCS over user-uploaded files or 3rd-party repositories
     --- e.g., you allow external tool paths to be set by user-defined values
  -- If you are unable to upgrade but you check 3rd-party code, ensure you are not using the following features:
     --- The diff report
     --- The notify-send report
     --- The Generic.PHP.Syntax sniff
     --- The Generic.Debug.CSSLint sniff
     --- The Generic.Debug.ClosureLinter sniff
     --- The Generic.Debug.JSHint sniff
     --- The Squiz.Debug.JSLint sniff
     --- The Squiz.Debug.JavaScriptLint sniff
     --- The Zend.Debug.CodeAnalyzer sniff
  -- Thanks to Klaus Purer for the report

- The indent property of PEAR.Classes.ClassDeclaration has been removed
  -- Instead of calculating the indent of the brace, it just ensures the brace is aligned with the class keyword
  -- Other sniffs can be used to ensure the class itself is indented correctly
- Invalid exclude rules inside a ruleset.xml file are now ignored instead of potentially causing out of memory errors
  -- Using the -vv command line argument now also shows the invalid exclude rule as XML
- Includes all changes from the 2.8.1 release
- Fixed bug #1333 : The new autoloader breaks some frameworks with custom autoloaders
- Fixed bug #1334 : Undefined offset when explaining standard with custom sniffs
   </notes>
  </release>
  <release>
   <version>
    <release>3.0.0RC3</release>
    <api>3.0.0RC3</api>
   </version>
   <stability>
    <release>beta</release>
    <api>beta</api>
   </stability>
   <date>2017-02-02</date>
   <license uri="https://github.com/squizlabs/PHP_CodeSniffer/blob/master/licence.txt">BSD License</license>
   <notes>
- Added support for ES6 class declarations
  -- Previously, these class were tokenized as JS objects but are now tokenized as normal T_CLASS structures
- Added support for ES6 method declarations, where the &quot;function&quot; keyword is not used
  -- Previously, these methods were tokenized as JS objects (fixes bug #1251)
  -- The name of the ES6 method is now assigned the T_FUNCTION keyword and treated like a normal function
  -- Custom sniffs that support JS and listen for T_FUNCTION tokens can&apos;t assume the token represents the word   &quot;function&quot;
  -- Check the contents of the token first, or use $phpcsFile-&gt;getDeclarationName($stackPtr) if you just want its name
  -- There is no change for custom sniffs that only check PHP code
- PHPCBF exit codes have been changed so they are now more useful (request #1270)
  -- Exit code 0 is now used to indicate that no fixable errors were found, and so nothing was fixed
  -- Exit code 1 is now used to indicate that all fixable errors were fixed correctly
  -- Exit code 2 is now used to indicate that PHPCBF failed to fix some of the fixable errors it found
  -- Exit code 3 is now used for general script execution errors
- Added PEAR.Commenting.FileComment.ParamCommentAlignment to check alignment of multi-line param comments
- Includes all changes from the 2.8.0 release
- Fixed an issue where excluding a file using a @codingStandardsIgnoreFile comment would produce errors
  -- For PHPCS, it would show empty files being processed
  -- For PHPCBF, it would produce a PHP error
- Fixed bug #1233 : Can&apos;t set config data inside ruleset.xml file
- Fixed bug #1241 : CodeSniffer.conf not working with 3.x PHAR file
   </notes>
  </release>
  <release>
   <version>
    <release>3.0.0RC2</release>
    <api>3.0.0RC2</api>
   </version>
   <stability>
    <release>beta</release>
    <api>beta</api>
   </stability>
   <date>2016-11-30</date>
   <license uri="https://github.com/squizlabs/PHP_CodeSniffer/blob/master/licence.txt">BSD License</license>
   <notes>
- Fixed an undefined var name error that could be produced while running PHPCBF
- Made the Runner class easier to use with wrapper scripts
- Full usage information is no longer printed when a usage error is encountered (request #1186)
  -- Makes it a lot easier to find and read the error message that was printed
- Includes all changes from the 2.7.1 release
- Fixed bug #1167 : 3.0.0RC1 PHAR does not work with PEAR standard
- Fixed bug #1208 : Excluding files doesn&apos;t work when using STDIN with a filename specified
   </notes>
  </release>
  <release>
   <version>
    <release>3.0.0RC1</release>
    <api>3.0.0RC1</api>
   </version>
   <stability>
    <release>beta</release>
    <api>beta</api>
   </stability>
   <date>2016-09-02</date>
   <license uri="https://github.com/squizlabs/PHP_CodeSniffer/blob/master/licence.txt">BSD License</license>
   <notes>
- Progress output now shows E and W in green when a file has fixable errors or warnings
  -- Only supported if colors are enabled
- PHPCBF no longer produces verbose output by default (request #699)
  -- Use the -v command line argument to show verbose fixing output
  -- Use the -q command line argument to disable verbose information if enabled by default
- PHPBF now prints a summary report after fixing files
  -- Report shows files that were fixed, how many errors were fixed, and how many remain
- PHPCBF now supports the -p command line argument to print progress information
  -- Prints a green F for files where fixes occurred
  -- Prints a red E for files that could not be fixed due to an error
  -- Use the -q command line argument to disable progress information if enabled by default
- Running unit tests using --verbose no longer throws errors
- Fixed shell error appearing on some systems when trying to find executable paths
- Includes all changes from the 2.7.0 release
   </notes>
  </release>
  <release>
   <version>
    <release>3.0.0a1</release>
    <api>3.0.0a1</api>
   </version>
   <stability>
    <release>alpha</release>
    <api>alpha</api>
   </stability>
   <date>2016-07-20</date>
   <license uri="https://github.com/squizlabs/PHP_CodeSniffer/blob/master/licence.txt">BSD License</license>
   <notes>
- Min PHP version increased from 5.1.2 to 5.4.0
- Added optional caching of results between runs (request #530)
  -- Enable the cache by using the --cache command line argument
  -- If you want the cache file written somewhere specific, use --cache=/path/to/cacheFile
  -- Use the command &quot;phpcs --config-set cache true&quot; to turn caching on by default
  -- Use the --no-cache command line argument to disable caching if it is being turned on automatically
- Add support for checking file in parallel (request #421)
  -- Tell PHPCS how many files to check at once using the --parallel command line argument
  -- To check 100 files at once, using --parallel=100
  -- To disable parallel checking if it is being turned on automatically, use --parallel=1
  -- Requires PHP to be compiled with the PCNTL package
- The default encoding has been changed from iso-8859-1 to utf-8 (request #760)
  -- The --encoding command line argument still works, but you no longer have to set it to process files as utf-8
  -- If encoding is being set to utf-8 in a ruleset or on the CLI, it can be safely removed
  -- If the iconv PHP extension is not installed, standard non-multibyte aware functions will be used
- Added a new &quot;code&quot; report type to show a code snippet for each error (request #419)
  -- The line containing the error is printed, along with 2 lines above and below it to show context
  -- The location of the errors is underlined in the code snippet if you also use --colors
  -- Use --report=code to generate this report
- Added support for custom filtering of the file list
  -- Developers can write their own filter classes to perform custom filtering of the list before the run starts
  -- Use the command line arg --filter=/path/to/filter.php to specify a filter to use
  -- Extend \PHP_CodeSniffer\Filters\Filter to also support the core PHPCS extension and path filtering
  -- Extend \PHP_CodeSniffer\Filters\ExactMatch to get the core filtering and the ability to use blacklists and whitelists
  -- The included \PHP_CodeSniffer\Filters\GitModified filter is a good example of an ExactMatch filter
- Added support for only checking files that have been locally modified or added in a git repo
  -- Use --filter=gitmodified to check these files
  -- You still need to give PHPCS a list of files or directories in which to check
- Added automatic discovery of executable paths (request #571)
  -- Thanks to Sergey Morozov for the patch
- You must now pass &quot;-&quot; on the command line to have PHPCS wait for STDIN
  -- E.g., phpcs --standard=PSR2 -
  -- You can still pipe content via STDIN as normal as PHPCS will see this and process it
  -- But without the &quot;-&quot;, PHPCS will throw an error if no content or files are passed to it
- All PHP errors generated by sniffs are caught, re-thrown as exceptions, and reported in the standard error reports
  -- This should stop bugs inside sniffs causing infinite loops
  -- Also stops invalid reports being produced as errors don&apos;t print to the screen directly
- Sniff codes are no longer optional
  -- If a sniff throws and error or a warning, it must specify an internal code for that message
- The installed_paths config setting can now point directly to a standard
  -- Previously, it had to always point to the directory in which the standard lives
- Multiple reports can now be specified using the --report command line argument
  -- Report types are separated by commas
  -- E.g., --report=full,summary,info
  -- Previously, you had to use one argument for each report such as --report=full --report=summary --report=info
- You can now set the severity, message type, and exclude patterns for and entire sniff, category, or standard
  -- Previously, this was only available for a single message
- You can now include a single sniff code in a ruleset instead of having to include an entire sniff
  -- Including a sniff code will automatically exclude all other messages from that sniff
  -- If the sniff is already included by an imported standard, set the sniff severity to 0 and include the specific message you want
- PHPCBF no longer uses patch
  -- Files are now always overwritten
  -- The --no-patch option has been removed
- Added a --basepath option to strip a directory from the front of file paths in output (request #470)
  -- The basepath is absolute or relative to the current directory
  -- E.g., to output paths relative to current dir in reports, use --basepath=.
- Ignore rules are now checked when using STDIN (request #733)
- Added an include-pattern tag to rulesets to include a sniff for specific files and folders only (request #656)
  -- This is the exact opposite of the exclude-pattern tag
  -- This option is only usable within sniffs, not globally like exclude-patterns are
- Added a new -m option to stop error messages from being recorded, which saves a lot of memory
  -- PHPCBF always uses this setting to reduce memory as it never outputs error messages
  -- Setting the $recordErrors member var inside custom report classes is no longer supported (use -m instead)
- Exit code 2 is now used to indicate fixable errors were found (request #930)
  -- Exit code 3 is now used for general script execution errors
  -- Exit code 1 is used to indicate that coding standard errors were found, but none are fixable
  -- Exit code 0 is unchanged and continues to mean no coding standard errors found
- The included PHPCS standard has been removed
  -- All rules are now found inside the phpcs.xml.dist file
  -- Running &quot;phpcs&quot; without any arguments from a git clone will use this ruleset
- The included SVN pre-commit hook has been removed
  -- Hooks for version control systems will no longer be maintained within the PHPCS project
   </notes>
  </release>
  <release>
   <version>
    <release>2.9.0</release>
    <api>2.9.0</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <date>2017-05-04</date>
   <license uri="https://github.com/squizlabs/PHP_CodeSniffer/blob/master/licence.txt">BSD License</license>
   <notes>
- Added Generic.Debug.ESLint sniff to run ESLint over JS files and report errors
  -- Set eslint path using: phpcs --config-set eslint_path /path/to/eslint
  -- Thanks to Ryan McCue for the contribution
- T_POW is now properly considered an arithmetic operator, and will be checked as such
  -- Thanks to Juliette Reinders Folmer for the patch
- T_SPACESHIP and T_COALESCE are now properly considered comparison operators, and will be checked as such
  -- Thanks to Juliette Reinders Folmer for the patch
- Generic.PHP.DisallowShortOpenTag now warns about possible short open tags even when short_open_tag is set to OFF
  -- Thanks to Juliette Reinders Folmer for the patch
- Generic.WhiteSpace.DisallowTabIndent now finds and fixes improper use of spaces anywhere inside the line indent
  -- Previously, only the first part of the indent was used to determine the indent type
  -- Thanks to Juliette Reinders Folmer for the patch
- PEAR.Commenting.ClassComment now supports checking of traits as well as classes and interfaces
  -- Thanks to Juliette Reinders Folmer for the patch
- Squiz.Commenting.FunctionCommentThrowTag now supports re-throwing exceptions (request #946)
  -- Thanks to Samuel Levy for the patch
- Squiz.PHP.DisallowMultipleAssignments now ignores PHP4-style member var assignments
  -- Thanks to Juliette Reinders Folmer for the patch
- Squiz.WhiteSpace.FunctionSpacing now ignores spacing above functions when they are preceded by inline comments
  -- Stops conflicts between this sniff and comment spacing sniffs
- Squiz.WhiteSpace.OperatorSpacing no longer checks the equal sign in declare statements
  -- Thanks to Juliette Reinders Folmer for the patch
- Added missing error codes for a couple of sniffs so they can now be customised as normal
- Fixed bug #1266 : PEAR.WhiteSpace.ScopeClosingBrace can throw an error while fixing mixed PHP/HTML
- Fixed bug #1364 : Yield From values are not recognised as returned values in Squiz FunctionComment sniff
- Fixed bug #1373 : Error in tab expansion results in white-space of incorrect size
  -- Thanks to Mark Clements for the patch
- Fixed bug #1381 : Tokenizer: dereferencing incorrectly identified as short array
- Fixed bug #1387 : Squiz.ControlStructures.ControlSignature does not handle alt syntax when checking space after closing   brace
- Fixed bug #1392 : Scope indent calculated incorrectly when using array destructuring
- Fixed bug #1394 : integer type hints appearing as TypeHintMissing instead of ScalarTypeHintMissing
  -- PHP 7 type hints were also being shown when run under PHP 5 in some cases
- Fixed bug #1405 : Squiz.WhiteSpace.ScopeClosingBrace fails to fix closing brace within indented PHP tags
- Fixed bug #1421 : Ternaries used in constant scalar expression for param default misidentified by tokenizer
- Fixed bug #1431 : PHPCBF can&apos;t fix short open tags when they are not followed by a space
  -- Thanks to Gonçalo Queirós for the patch
- Fixed bug #1432 : PHPCBF can make invalid fixes to inline JS control structures that make use of JS objects
   </notes>
  </release>
  <release>
   <version>
    <release>2.8.1</release>
    <api>2.8.1</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <date>2017-03-02</date>
   <license uri="https://github.com/squizlabs/PHP_CodeSniffer/blob/master/licence.txt">BSD License</license>
   <notes>
- This release contains a fix for a security advisory related to the improper handling of shell commands
  -- Uses of shell_exec() and exec() were not escaping filenames and configuration settings in most cases
  -- A properly crafted filename or configuration option would allow for arbitrary code execution when using some features
  -- All users are encouraged to upgrade to this version, especially if you are checking 3rd-party code
     --- e.g., you run PHPCS over libraries that you did not write
     --- e.g., you provide a web service that runs PHPCS over user-uploaded files or 3rd-party repositories
     --- e.g., you allow external tool paths to be set by user-defined values
  -- If you are unable to upgrade but you check 3rd-party code, ensure you are not using the following features:
     --- The diff report
     --- The notify-send report
     --- The Generic.PHP.Syntax sniff
     --- The Generic.Debug.CSSLint sniff
     --- The Generic.Debug.ClosureLinter sniff
     --- The Generic.Debug.JSHint sniff
     --- The Squiz.Debug.JSLint sniff
     --- The Squiz.Debug.JavaScriptLint sniff
     --- The Zend.Debug.CodeAnalyzer sniff
  -- Thanks to Klaus Purer for the report


- The PHP-supplied T_COALESCE_EQUAL token has been replicated for PHP versions before 7.2
- PEAR.Functions.FunctionDeclaration now reports an error for blank lines found inside a function declaration
- PEAR.Functions.FunctionDeclaration no longer reports indent errors for blank lines in a function declaration
- Squiz.Functions.MultiLineFunctionDeclaration no longer reports errors for blank lines in a function declaration
  -- It would previously report that only one argument is allowed per line
- Squiz.Commenting.FunctionComment now corrects multi-line param comment padding more accurately
- Squiz.Commenting.FunctionComment now properly fixes pipe-separated param types
- Squiz.Commenting.FunctionComment now works correctly when function return types also contain a comment
  -- Thanks to Juliette Reinders Folmer for the patch
- Squiz.ControlStructures.InlineIfDeclaration now supports the elvis operator
  -- As this is not a real PHP operator, it enforces no spaces between ? and : when the THEN statement is empty
- Squiz.ControlStructures.InlineIfDeclaration is now able to fix the spacing errors it reports
- Fixed bug #1340 : STDIN file contents not being populated in some cases
  -- Thanks to David Biňovec for the patch
- Fixed bug #1344 : PEAR.Functions.FunctionCallSignatureSniff throws error for blank comment lines
- Fixed bug #1347 : PSR2.Methods.FunctionCallSignature strips some comments during fixing
  -- Thanks to Algirdas Gurevicius for the patch
- Fixed bug #1349 : Squiz.Strings.DoubleQuoteUsage.NotRequired message is badly formatted when string contains a CR newline char
  -- Thanks to Algirdas Gurevicius for the patch
- Fixed bug #1350 : Invalid Squiz.Formatting.OperatorBracket error when using namespaces
- Fixed bug #1369 : Empty line in multi-line function declaration cause infinite loop
   </notes>
  </release>
  <release>
   <version>
    <release>2.8.0</release>
    <api>2.8.0</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <date>2017-02-02</date>
   <license uri="https://github.com/squizlabs/PHP_CodeSniffer/blob/master/licence.txt">BSD License</license>
   <notes>
- The Internal.NoCodeFound error is no longer generated for content sourced from STDIN
  -- This should stop some Git hooks generating errors because PHPCS is trying to process the refs passed on STDIN
- Squiz.Commenting.DocCommentAlignment now checks comments on class properties defined using the VAR keyword
  -- Thanks to Klaus Purer for the patch
- The getMethodParameters() method now recognises &quot;self&quot; as a valid type hint
  -- The return array now contains a new &quot;content&quot; index containing the raw content of the param definition
  -- Thanks to Juliette Reinders Folmer for the patch
- The getMethodParameters() method now supports nullable types
  -- The return array now contains a new &quot;nullable_type&quot; index set to true or false for each method param
  -- Thanks to Juliette Reinders Folmer for the patch
- The getMethodParameters() method now supports closures
  -- Thanks to Juliette Reinders Folmer for the patch
- Added more guard code for JS files with syntax errors (request #1271 and request #1272)
- Added more guard code for CSS files with syntax errors (request #1304)
- PEAR.Commenting.FunctionComment fixers now correctly handle multi-line param comments
- AbstractVariableSniff now supports anonymous classes
  -- Thanks to Juliette Reinders Folmer for the patch
- Generic.NamingConventions.ConstructorName and PEAR.NamingConventions.ValidVariable now support anonymous classes
- Generic.NamingConventions.CamelCapsFunctionName and PEAR.NamingConventions.ValidFunctionName now support anonymous   classes
  -- Thanks to Juliette Reinders Folmer for the patch
- Generic.CodeAnalysis.UnusedFunctionParameter and PEAR.Functions.ValidDefaultValue now support closures
  -- Thanks to Juliette Reinders Folmer for the patch
- PEAR.NamingConventions.ValidClassName and Squiz.Classes.ValidClassName now support traits
  -- Thanks to Juliette Reinders Folmer for the patch
- Generic.Functions.FunctionCallArgumentSpacing now supports closures other PHP-provided functions
  -- Thanks to Algirdas Gurevicius for the patch
- Fixed an error where a nullable type character was detected as an inline then token
  -- A new T_NULLABLE token has been added to represent the ? nullable type character
  -- Thanks to Jaroslav Hanslík for the patch
- Squiz.WhiteSpace.SemicolonSpacing no longer removes comments while fixing the placement of semicolons
  -- Thanks to Algirdas Gurevicius for the patch
- Fixed bug #1230 : JS tokeniser incorrectly tokenises bitwise shifts as comparison
  -- Thanks to Ryan McCue for the patch
- Fixed bug #1237 : Uninitialized string offset in PHP Tokenizer on PHP 5.2
- Fixed bug #1239 : Warning when static method name is &apos;default&apos;
- Fixed bug #1240 : False positive for function names starting with triple underscore
  -- Thanks to Juliette Reinders Folmer for the patch
- Fixed bug #1245 : SELF is not recognised as T_SELF token in: return new self
- Fixed bug #1246 : A mix of USE statements with and without braces can cause the tokenizer to mismatch brace tokens
  -- Thanks to Michał Bundyra for the patch
- Fixed bug #1249 : GitBlame report requires a .git directory
- Fixed bug #1252 : Squiz.Strings.ConcatenationSpacing fix creates syntax error when joining a number to a string
- Fixed bug #1253 : Generic.ControlStructures.InlineControlStructure fix creates syntax error fixing if-try/catch
- Fixed bug #1255 : Inconsistent indentation check results when ELSE on new line
- Fixed bug #1257 : Double dash in CSS class name can lead to &quot;Named colours are forbidden&quot; false positives
- Fixed bug #1260 : Syntax errors not being shown when error_prepend_string is set
  -- Thanks to Juliette Reinders Folmer for the patch
- Fixed bug #1264 : Array return type hint is sometimes detected as T_ARRAY_HINT instead of T_RETURN_TYPE
  -- Thanks to Jaroslav Hanslík for the patch
- Fixed bug #1265 : ES6 arrow function raises unexpected operator spacing errors
- Fixed bug #1267 : Fixer incorrectly handles filepaths with repeated dir names
  -- Thanks to Sergey Ovchinnikov for the patch
- Fixed bug #1276 : Commenting.FunctionComment.InvalidReturnVoid conditional issue with anonymous classes
- Fixed bug #1277 : Squiz.PHP.DisallowMultipleAssignments.Found error when var assignment is on the same line as an   open tag
- Fixed bug #1284 : Squiz.Arrays.ArrayBracketSpacing.SpaceBeforeBracket false positive match for short list syntax
   </notes>
  </release>
  <release>
   <version>
    <release>2.7.1</release>
    <api>2.7.1</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <date>2016-11-30</date>
   <license uri="https://github.com/squizlabs/PHP_CodeSniffer/blob/master/licence.txt">BSD License</license>
   <notes>
- Squiz.ControlStructures.ControlSignature.SpaceAfterCloseParenthesis fix now removes unnecessary whitespace
- Squiz.Formatting.OperatorBracket no longer errors for negative array indexes used within a function call
- Squiz.PHP.EmbeddedPhp no longer expects a semicolon after statements that are only opening a scope
- Fixed a problem where the content of T_DOC_COMMENT_CLOSE_TAG tokens could sometimes be (boolean) false
- Developers of custom standards with custom test runners can now have their standards ignored by the built-in test runner
  -- Set the value of an environment variable called PHPCS_IGNORE_TESTS with a comma separated list of your standard names
  -- Thanks to Juliette Reinders Folmer for the patch
- The unit test runner now loads the test sniff outside of the standard&apos;s ruleset so that exclude rules do not get applied
  -- This may have caused problems when testing custom sniffs inside custom standards
  -- Also makes the unit tests runs a little faster
- The SVN pre-commit hook now works correctly when installed via composer
  -- Thanks to Sergey for the patch
- Fixed bug #1135 : PEAR.ControlStructures.MultiLineCondition.CloseBracketNewLine not detected if preceded by multiline function   call
- Fixed bug #1138 : PEAR.ControlStructures.MultiLineCondition.Alignment not detected if closing brace is first token on line
- Fixed bug #1141 : Sniffs that check EOF newlines don&apos;t detect newlines properly when the last token is a doc block
- Fixed bug #1150 : Squiz.Strings.EchoedStrings does not properly fix bracketed statements
- Fixed bug #1156 : Generic.Formatting.DisallowMultipleStatements errors when multiple short echo tags are used on the same line
  -- Thanks to Nikola Kovacs for the patch
- Fixed bug #1161 : Absolute report path is treated like a relative path if it also exists within the current directory
- Fixed bug #1170 : Javascript regular expression literal not recognized after comparison operator
- Fixed bug #1180 : Class constant named FUNCTION is incorrectly tokenized
- Fixed bug #1181 : Squiz.Operators.IncrementDecrementUsage.NoBrackets false positive when incrementing properties
  -- Thanks to Jürgen Henge-Ernst for the patch
- Fixed bug #1188 : Generic.WhiteSpace.ScopeIndent issues with inline HTML and multi-line function signatures
- Fixed bug #1190 : phpcbf on if/else with trailing comment generates erroneous code
- Fixed bug #1191 : Javascript sniffer fails with function called &quot;Function&quot;
- Fixed bug #1203 : Inconsistent behavior of PHP_CodeSniffer_File::findEndOfStatement
- Fixed bug #1218 : CASE conditions using class constants named NAMESPACE/INTERFACE/TRAIT etc are incorrectly tokenized
- Fixed bug #1221 : Indented function call with multiple closure arguments can cause scope indent error
- Fixed bug #1224 : PHPCBF fails to fix code with heredoc/nowdoc as first argument to a function
   </notes>
  </release>
  <release>
   <version>
    <release>2.7.0</release>
    <api>2.7.0</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <date>2016-09-02</date>
   <license uri="https://github.com/squizlabs/PHP_CodeSniffer/blob/master/licence.txt">BSD License</license>
   <notes>
- Added --file-list command line argument to allow a list of files and directories to be specified in an external file
  -- Useful is you have a generated list of files to check that would be too long for the command line
  -- File and directory paths are listed one per line
  -- Usage is: phpcs --file-list=/path/to/file-list ...
  -- Thanks to Blotzu for the patch
- Values set using @codingStandardsChangeSetting comments can now contain spaces
- Sniff unit tests can now specify a list of test files instead of letting the runner pick them (request #1078)
  -- Useful if a sniff needs to exclude files based on the environment, or is checking filenames
  -- Override the new getTestFiles() method to specify your own list of test files
- Generic.Functions.OpeningFunctionBraceKernighanRitchie now ignores spacing for function return types
  -- The sniff code Generic.Functions.OpeningFunctionBraceKernighanRitchie.SpaceAfterBracket has been removed
  -- Replaced by Generic.Functions.OpeningFunctionBraceKernighanRitchie.SpaceBeforeBrace
  -- The new error message is slightly clearer as it indicates that a single space is needed before the brace
- Squiz.Commenting.LongConditionClosingComment now allows for the length of a code block to be configured
  -- Set the lineLimit property (default is 20) in your ruleset.xml file to set the code block length
  -- When the code block length is reached, the sniff will enforce a closing comment after the closing brace
  -- Thanks to Juliette Reinders Folmer for the patch
- Squiz.Commenting.LongConditionClosingComment now allows for the end comment format to be configured
  -- Set the commentFormat property (default is &quot;//end %s&quot;) in your ruleset.xml file to set the format
  -- The placeholder %s will be replaced with the type of condition opener, e.g., &quot;//end foreach&quot;
  -- Thanks to Juliette Reinders Folmer for the patch
- Generic.PHPForbiddenFunctions now allows forbidden functions to have mixed case
  -- Previously, it would only do a strtolower comparison
  -- Error message now shows what case was found in the code and what the correct case should be
  -- Thanks to Juliette Reinders Folmer for the patch
- Added Generic.Classes.OpeningBraceSameLine to ensure opening brace of class/interface/trait is on the same line as the declaration
  -- Thanks to Juliette Reinders Folmer for the patch
- Added Generic.PHP.BacktickOperator to ban the use of the backtick operator for running shell commands
  -- Thanks to Juliette Reinders Folmer for the patch
- Added Generic.PHP.DisallowAlternativePHPTags to ban the use of alternate PHP tags
  -- Thanks to Juliette Reinders Folmer for the patch
- Squiz.WhiteSpace.LanguageConstructSpacing no longer checks for spaces if parenthesis are being used (request #1062)
  -- Makes this sniff more compatible with those that check parenthesis spacing of function calls
- Squiz.WhiteSpace.ObjectOperatorSpacing now has a setting to ignore newline characters around object operators
  -- Default remains FALSE, so newlines are not allowed
  -- Override the &quot;ignoreNewlines&quot; setting in a ruleset.xml file to change
  -- Thanks to Alex Howansky for the patch
- Squiz.Scope.MethodScope now sniffs traits as well as classes and interfaces
  -- Thanks to Jesse Donat for the patch
- PHPCBF is now able to fix Squiz.SelfMemberReference.IncorrectCase errors
  -- Thanks to Nikola Kovacs for the patch
- PHPCBF is now able to fix Squiz.Commenting.VariableComment.IncorrectVarType
  -- Thanks to Walt Sorensen for the patch
- PHPCBF is now able to fix Generic.PHP.DisallowShortOpenTag
  -- Thanks to Juliette Reinders Folmer for the patch
- Improved the formatting of the end brace when auto fixing InlineControlStructure errors (request #1121)
- Generic.Functions.OpeningFunctionBraceKernighanRitchie.BraceOnNewLine fix no longer leaves blank line after brace (request #1085)
- Generic UpperCaseConstantNameSniff now allows lowercase namespaces in constant definitions
  -- Thanks to Daniel Schniepp for the patch
- Squiz DoubleQuoteUsageSniff is now more tolerant of syntax errors caused by mismatched string tokens
- A few sniffs that produce errors based on the current PHP version can now be told to run using a specific PHP version
  -- Set the php_version config var using --config-set, --runtime-set, or in a ruleset to specify a specific PHP version
  -- The format of the PHP version is the same as the PHP_VERSION_ID constant (e.g., 50403 for version 5.4.3)
  -- Supported sniffs are Generic.PHP.DisallowAlternativePHPTags, PSR1.Classes.ClassDeclaration, Squiz.Commenting.FunctionComment
  -- Thanks to Finlay Beaton for the patch
- Fixed bug #985  : Duplicate class definition detection generates false-positives in media queries
  -- Thanks to Raphael Horber for the patch
- Fixed bug #1014 : Squiz VariableCommentSniff doesn&apos;t always detect a missing comment
- Fixed bug #1066 : Undefined index: quiet in CLI.php during unit test run with -v command line arg
- Fixed bug #1072 : Squiz.SelfMemberReference.NotUsed not detected if leading namespace separator is used
- Fixed bug #1089 : Rulesets cannot be loaded if the path contains urlencoded characters
- Fixed bug #1091 : PEAR and Squiz FunctionComment sniffs throw errors for some invalid @param line formats
- Fixed bug #1092 : PEAR.Functions.ValidDefaultValue should not flag type hinted methods with a NULL default argument
- Fixed bug #1095 : Generic LineEndings sniff replaces tabs with spaces with --tab-width is set
- Fixed bug #1096 : Squiz FunctionDeclarationArgumentSpacing gives incorrect error/fix when variadic operator is followed by a space
- Fixed bug #1099 : Group use declarations are incorrectly fixed by the PSR2 standard
  -- Thanks to Jason McCreary for the patch
- Fixed bug #1101 : Incorrect indent errors when breaking out of PHP inside an IF statement
- Fixed bug #1102 : Squiz.Formatting.OperatorBracket.MissingBrackets faulty bracketing fix
- Fixed bug #1109 : Wrong scope indent reported in anonymous class
- Fixed bug #1112 : File docblock not recognized when require_once follows it
- Fixed bug #1120 : InlineControlStructureSniff does not handle auto-fixing for control structures that make function calls
- Fixed bug #1124 : Squiz.Operators.ComparisonOperatorUsage does not detect bracketed conditions for inline IF statements
  -- Thanks to Raphael Horber for the patch
   </notes>
  </release>
  <release>
   <version>
    <release>2.6.2</release>
    <api>2.6.2</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <date>2016-07-14</date>
   <license uri="https://github.com/squizlabs/PHP_CodeSniffer/blob/master/licence.txt">BSD License</license>
   <notes>
- Added a new --exclude CLI argument to exclude a list of sniffs from checking and fixing (request #904)
  -- Accepts the same sniff codes as the --sniffs command line argument, but provides the opposite functionality
- Added a new -q command line argument to disable progress and verbose information from being printed (request #969)
  -- Useful if a coding standard hard-codes progress or verbose output but you want PHPCS to be quiet
  -- Use the command &quot;phpcs --config-set quiet true&quot; to turn quiet mode on by default
- Generic LineLength sniff no longer errors for comments that cannot be broken out onto a new line (request #766)
  -- A typical case is a comment that contains a very long URL
  -- The comment is ignored if putting the URL on a indented new comment line would be longer than the allowed length
- Settings extensions in a ruleset no longer causes PHP notices during unit testing
  -- Thanks to Klaus Purer for the patch
- Version control reports now show which errors are fixable if you are showing sources
- Added a new sniff to enforce a single space after a NOT operator (request #1051)
  -- Include in a ruleset using the code Generic.Formatting.SpaceAfterNot
- The Squiz.Commenting.BlockComment sniff now supports tabs for indenting comment lines (request #1056)
- Fixed bug #790 : Incorrect missing @throws error in methods that use closures
- Fixed bug #908 : PSR2 standard is not checking that closing brace is on line following the body
- Fixed bug #945 : Incorrect indent behavior using deep-nested function and arrays
- Fixed bug #961 : Two anonymous functions passed as function/method arguments cause indentation false positive
- Fixed bug #1005 : Using global composer vendor autoload breaks PHP lowercase built-in function sniff
  -- Thanks to Michael Butler for the patch
- Fixed bug #1007 : Squiz Unreachable code detection is not working properly with a closure inside a case
- Fixed bug #1023 : PSR2.Classes.ClassDeclaration fails if class extends base class and &quot;implements&quot; is on trailing line
- Fixed bug #1026 : Arrays in comma delimited class properties cause ScopeIndent to increase indent
- Fixed bug #1028 : Squiz ArrayDeclaration incorrectly fixes multi-line array where end bracket is not on a new line
- Fixed bug #1034 : Squiz FunctionDeclarationArgumentSpacing gives incorrect error when first arg is a variadic
- Fixed bug #1036 : Adjacent assignments aligned analysis statement wrong
- Fixed bug #1049 : Version control reports can show notices when the report width is very small
- Fixed bug #21050 : PEAR MultiLineCondition sniff suppresses errors on last condition line
   </notes>
  </release>
  <release>
   <version>
    <release>2.6.1</release>
    <api>2.6.1</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <date>2016-05-31</date>
   <license uri="https://github.com/squizlabs/PHP_CodeSniffer/blob/master/licence.txt">BSD License</license>
   <notes>
- The PHP-supplied T_COALESCE token has been replicated for PHP versions before 7.0
- Function return types of self, parent and callable are now tokenized as T_RETURN_TYPE
  -- Thanks to Jaroslav Hanslík for the patch
- The default_standard config setting now allows multiple standards to be listed, like on the command line
  -- Thanks to Michael Mayer for the patch
- Installations done via composer now only include the composer autoloader for PHP 5.3.2+ (request #942)
- Added a rollbackChangeset() method to the Fixer class to purposely rollback the active changeset
- Fixed bug #940 : Auto-fixing issue encountered with inconsistent use of braces
- Fixed bug #943 : Squiz.PHP.InnerFunctions.NotAllowed reported in anonymous classes
- Fixed bug #944 : PHP warning when running the latest phar
- Fixed bug #951 : InlineIfDeclaration: invalid error produced with UTF-8 string
- Fixed bug #957 : Operator spacing sniff errors when plus is used as part of a number
  -- Thanks to Klaus Purer for the patch
- Fixed bug #959 : Call-time pass-by-reference false positive if there is a square bracket before the ampersand
  -- Thanks to Konstantin Leboev for the patch
- Fixed bug #962 : Null coalescing operator (??) not detected as a token
  -- Thanks to Joel Posti for the patch
- Fixed bug #973 : Anonymous class declaration and PSR1.Files.SideEffects.FoundWithSymbols
- Fixed bug #974 : Error when file ends with &quot;function&quot;
- Fixed bug #979 : Anonymous function with return type hint is not refactored as expected
- Fixed bug #983 : Squiz.WhiteSpace.MemberVarSpacing.AfterComment fails to fix error when comment is not a docblock
- Fixed bug #1010 : Squiz NonExecutableCode sniff does not detect boolean OR
  -- Thanks to Derek Henderson for the patch
- Fixed bug #1015 : The Squiz.Commenting.FunctionComment sniff doesn&apos;t allow description in @return tag
  -- Thanks to Alexander Obuhovich for the patch
- Fixed bug #1022 : Duplicate spaces after opening bracket error with PSR2 standard
- Fixed bug #1025 : Syntax error in JS file can cause undefined index for parenthesis_closer
   </notes>
  </release>
  <release>
   <version>
    <release>2.6.0</release>
    <api>2.6.0</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <date>2016-04-04</date>
   <license uri="https://github.com/squizlabs/PHP_CodeSniffer/blob/master/licence.txt">BSD License</license>
   <notes>
- Paths used when setting CLI arguments inside ruleset.xml files are now relative to the ruleset location (request #847)
  -- This change only applies to paths within ARG tags, used to set CLI arguments
  -- Previously, the paths were relative to the directory PHPCS was being run from
  -- Absolute paths are still allowed and work the same way they always have
  -- This change allows ruleset.xml files to be more portable
- Content passed via STDIN will now be processed even if files are specified on the command line or in a ruleset
- When passing content via STDIN, you can now specify the file path to use on the command line (request #934)
  -- This allows sniffs that check file paths to work correctly
  -- This is the same functionality provided by the phpcs_input_file line, except it is available on the command line
- Files processed with custom tokenizers will no longer be skipped if they appear minified (request #877)
  -- If the custom tokenizer wants minified files skipped, it can set a $skipMinified member var to TRUE
  -- See the included JS and CSS tokenizers for an example
- Config vars set in ruleset.xml files are now processed earlier, allowing them to be used during sniff registration
  -- Among other things, this allows the installed_paths config var to be set in ruleset.xml files
  -- Thanks to Pieter Frenssen for the patch
- Improved detection of regular expressions in the JS tokenizer
- Generic PHP Syntax sniff now uses PHP_BINARY (if available) to determine the path to PHP if no other path is available
  -- You can still manually set php_path to use a specific binary for testing
  -- Thanks to Andrew Berry for the patch
- The PHP-supplied T_POW_EQUAL token has been replicated for PHP versions before 5.6
- Added support for PHP7 use group declarations (request #878)
  -- New tokens T_OPEN_USE_GROUP and T_CLOSE_USE_GROUP are assigned to the open and close curly braces
- Generic ScopeIndent sniff now reports errors for every line that needs the indent changed (request #903)
  -- Previously, it ignored lines that were indented correctly in the context of their block
  -- This change produces more technically accurate error messages, but is much more verbose
- The PSR2 and Squiz standards now allow multi-line default values in function declarations (request #542)
  -- Previously, these would automatically make the function a multi-line declaration
- Squiz InlineCommentSniff now allows docblocks on require(_once) and include(_once) statements
  -- Thanks to Gary Jones for the patch
- Squiz and PEAR Class and File sniffs no longer assume the first comment in a file is always a file comment
  -- phpDocumentor assigns the comment to the file only if it is not followed by a structural element
  -- These sniffs now follow this same rule
- Squiz ClassCommentSniff no longer checks for blank lines before class comments
  -- Removes the error Squiz.Commenting.ClassComment.SpaceBefore
- Renamed Squiz.CSS.Opacity.SpacingAfterPoint to Squiz.CSS.Opacity.DecimalPrecision
  -- Please update your ruleset if you are referencing this error code directly
- Fixed PHP tokenizer problem that caused an infinite loop when checking a comment with specific content
- Generic Disallow Space and Tab indent sniffs now detect and fix indents inside embedded HTML chunks (request #882)
- Squiz CSS IndentationSniff no longer assumes the class opening brace is at the end of a line
- Squiz FunctionCommentThrowTagSniff now ignores non-docblock comments
- Squiz ComparisonOperatorUsageSniff now allows conditions like while(true)
- PEAR FunctionCallSignatureSniff (and the Squiz and PSR2 sniffs that use it) now correctly check the first argument
  -- Further fix for bug #698
- Fixed bug #791 : codingStandardsChangeSetting settings not working with namespaces
- Fixed bug #872 : Incorrect detection of blank lines between CSS class names
- Fixed bug #879 : Generic InlineControlStructureSniff can create parse error when case/if/elseif/else have mixed brace and braceless definitions
- Fixed bug #883 : PSR2 is not checking for blank lines at the start and end of control structures
- Fixed bug #884 : Incorrect indentation notice for anonymous classes
- Fixed bug #887 : Using curly braces for a shared CASE/DEFAULT statement can generate an error in PSR2 SwitchDeclaration
- Fixed bug #889 : Closure inside catch/else/elseif causes indentation error
- Fixed bug #890 : Function call inside returned short array value can cause indentation error inside CASE statements
- Fixed bug #897 : Generic.Functions.CallTimePassByReference.NotAllowed false positive when short array syntax
- Fixed bug #900 : Squiz.Functions.FunctionDeclarationArgumentSpacing bug when no space between type hint and argument
- Fixed bug #902 : T_OR_EQUAL and T_POW_EQUAL are not seen as assignment tokens
- Fixed bug #910 : Unrecognized &quot;extends&quot; and indentation on anonymous classes
- Fixed bug #915 : JS Tokenizer generates errors when processing some decimals
- Fixed bug #928 : Endless loop when sniffing a PHP file with a git merge conflict inside a function
- Fixed bug #937 : Shebang can cause PSR1 SideEffects warning
  -- Thanks to Clay Loveless for the patch
- Fixed bug #938 : CallTimePassByReferenceSniff ignores functions with return value
   </notes>
  </release>
  <release>
   <version>
    <release>2.5.1</release>
    <api>2.5.1</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <date>2016-01-20</date>
   <license uri="https://github.com/squizlabs/PHP_CodeSniffer/blob/master/licence.txt">BSD License</license>
   <notes>
- The PHP-supplied T_SPACESHIP token has been replicated for PHP versions before 7.0
- T_SPACESHIP is now correctly identified as an operator
  -- Thanks to Alexander Obuhovich for the patch
- Generic LowerCaseKeyword now ensures array type hints are lowercase as well
  -- Thanks to Mathieu Rochette for the patch
- Squiz ComparisonOperatorUsageSniff no longer hangs on JS FOR loops that don&apos;t use semicolons
- PHP_CodesSniffer now includes the composer autoload.php file, if there is one
  -- Thanks to Klaus Purer for the patch
- Added error Squiz.Commenting.FunctionComment.ScalarTypeHintMissing for PHP7 only (request #858)
  -- These errors were previously reported as Squiz.Commenting.FunctionComment.TypeHintMissing on PHP7
  -- Disable this error message in a ruleset.xml file if your code needs to run on both PHP5 and PHP7
- The PHP 5.6 __debugInfo magic method no longer produces naming convention errors
  -- Thanks to Michael Nowack for the patch
- PEAR and Squiz FunctionComment sniffs now support variadic functions (request #841)
- Fixed bug #622 : Wrong detection of Squiz.CSS.DuplicateStyleDefinition with media queries
- Fixed bug #752 : The missing exception error is reported in first found DocBlock
- Fixed bug #794 : PSR2 MultiLineFunctionDeclaration forbids comments after opening parenthesis of a multiline call
- Fixed bug #820 : PEAR/PSR2 FunctionCallSignature sniffs suggest wrong indent when there are multiple arguments on a line
- Fixed bug #822 : Ruleset hard-coded file paths are not used if not running from the same directory as the ruleset
- Fixed bug #825 : FunctionCallArgumentSpacing sniff complains about more than one space before comment in multi-line function call
- Fixed bug #828 : Null classname is tokenized as T_NULL instead of T_STRING
- Fixed bug #829 : Short array argument not fixed correctly when multiple function arguments are on the same line
- Fixed bug #831 : PHPCS freezes in an infinite loop under Windows if no standard is passed
- Fixed bug #832 : Tokenizer does not support context sensitive parsing
  -- Thanks to Jaroslav Hanslík for the patch
- Fixed bug #835 : PEAR.Functions.FunctionCallSignature broken when closure uses return types
- Fixed bug #838 : CSS indentation fixer changes color codes
  -- Thanks to Klaus Purer for the patch
- Fixed bug #839 : &quot;__()&quot; method is marked as not camel caps
  -- Thanks to Tim Bezhashvyly for the patch
- Fixed bug #852 : Generic.Commenting.DocComment not finding errors when long description is omitted
- Fixed bug #854 : Return typehints in interfaces are not reported as T_RETURN_TYPE
  -- Thanks to Jaroslav Hanslík for the patch
- Fixed bug #855 : Capital letter detection for multibyte strings doesn&apos;t work correctly
- Fixed bug #857 : PSR2.ControlStructure.SwitchDeclaration shouldn&apos;t check indent of curly brace closers
- Fixed bug #859 : Switch statement indention issue when returning function call with closure
- Fixed bug #861 : Single-line arrays and function calls can generate incorrect indentation errors
- Fixed bug #867 : Squiz.Strings.DoubleQuoteUsage broken for some escape codes
  -- Thanks to Jack Blower for the help with the fix
- Fixed bug #21005 : Incorrect indent detection when multiple properties are initialized to arrays
- Fixed bug #21010 : Incorrect missing colon detection in CSS when first style is not on new line
- Fixed bug #21011 : Incorrect error message text when newline found after opening brace
   </notes>
  </release>
  <release>
   <version>
    <release>2.5.0</release>
    <api>2.5.0</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <date>2015-12-11</date>
   <license uri="https://github.com/squizlabs/PHP_CodeSniffer/blob/master/licence.txt">BSD License</license>
   <notes>
- PHPCS will now look for a phpcs.xml file in parent directories as well as the current directory (request #626)
- PHPCS will now use a phpcs.xml file even if files are specified on the command line
  -- This file is still only used if no standard is specified on the command line
- Added support for a phpcs.xml.dist file (request #583)
  -- If both a phpcs.xml and phpcs.xml.dist file are present, the phpcs.xml file will be used
- Added support for setting PHP ini values in ruleset.xml files (request #560)
  -- Setting the value of the new ini tags to name=&quot;memory_limit&quot; value=&quot;32M&quot; is the same as -d memory_limit=32M
- Added support for one or more bootstrap files to be run before processing begins
  -- Use the --bootstrap=file,file,file command line argument to include bootstrap files
  -- Useful if you want to override some of the high-level settings of PHPCS or PHPCBF
  -- Thanks to John Maguire for the patch
- Added additional verbose output for CSS tokenizing
- Squiz ComparisonOperatorUsageSniff now checks FOR, WHILE and DO-WHILE statements
  -- Thanks to Arnout Boks for the patch
- Fixed bug #660 : Syntax checks can fail on Windows with PHP5.6
- Fixed bug #784 : $this-&gt;trait is seen as a T_TRAIT token
- Fixed bug #786 : Switch indent issue with short array notation
- Fixed bug #787 : SpacingAfterDefaultBreak confused by multi-line statements
- Fixed bug #797 : Parsing CSS url() value breaks further parsing
- Fixed bug #805 : Squiz.Commenting.FunctionComment.InvalidTypeHint on Scalar types on PHP7
- Fixed bug #807 : Cannot fix line endings when open PHP tag is not on the first line
- Fixed bug #808 : JS tokeniser incorrectly setting some function and class names to control structure tokens
- Fixed bug #809 : PHPCBF can break a require_once statement with a space before the open parenthesis
- Fixed bug #813 : PEAR FunctionCallSignature checks wrong indent when first token on line is part of a multi-line string
   </notes>
  </release>
  <release>
   <version>
    <release>2.4.0</release>
    <api>2.4.0</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <date>2015-11-24</date>
   <license uri="https://github.com/squizlabs/PHP_CodeSniffer/blob/master/licence.txt">BSD License</license>
   <notes>
- Added support for PHP 7 anonymous classes
  -- Anonymous classes are now tokenized as T_ANON_CLASS and ignored by normal class sniffs
- Added support for PHP 7 function return type declarations
  -- Return types are now tokenized as T_RETURN_TYPE
- Fixed tokenizing of the XOR operator, which was incorrectly identified as a power operator (bug #765)
  -- The T_POWER token has been removed and replaced by the T_BITWISE_XOR token
  -- The PHP-supplied T_POW token has been replicated for PHP versions before 5.6
- Traits are now tokenized in PHP versions before 5.4 to make testing easier
- Improved regular expression detection in JS files
- PEAR FunctionCallSignatureSniff now properly detects indents in more mixed HTML/PHP code blocks
- Full report now properly indents lines when newlines are found inside error messages
- Generating documentation without specifying a standard now uses the default standard instead
  -- Thanks to Ken Guest for the patch
- Generic InlineControlStructureSniff now supports braceless do/while loops in JS
  -- Thanks to Pieter Frenssen for the patch
- Added more guard code for function declarations with syntax errors
  -- Thanks to Yun Young-jin for the patch
- Added more guard code for foreach declarations with syntax errors
  -- Thanks to Johan de Ruijter for the patch
- Added more guard code for class declarations with syntax errors
- Squiz ArrayDeclarationSniff now has guard code for arrays with syntax errors
- Generic InlineControlStructureSniff now correctly fixes ELSEIF statements
- Fixed bug #601 : Expected type hint int[]; found array in Squiz FunctionCommentSniff
  -- Thanks to Scato Eggen for the patch
- Fixed bug #625 : Consider working around T_HASHBANG in HHVM 3.5.x and 3.6.x
  -- Thanks to Kunal Mehta for the patch
- Fixed bug #692 : Comment tokenizer can break when using mbstring function overloading
- Fixed bug #694 : Long sniff codes can cause PHP warnings in source report when showing error codes
- Fixed bug #698 : PSR2.Methods.FunctionCallSignature.Indent forces exact indent of ternary operator parameters
- Fixed bug #704 : ScopeIndent can fail when an opening parenthesis is on a line by itself
- Fixed bug #707 : Squiz MethodScopeSniff doesn&apos;t handle nested functions
- Fixed bug #709 : Squiz.Sniffs.Whitespace.ScopeClosingBraceSniff marking indented endif in mixed inline HTML blocks
- Fixed bug #711 : Sniffing from STDIN shows Generic.Files.LowercasedFilename.NotFound error
- Fixed bug #714 : Fixes suppression of errors using docblocks
  -- Thanks to Andrzej Karmazyn for the patch
- Fixed bug #716 : JSON report is invalid when messages contain newlines or tabs
  -- Thanks to Pieter Frenssen for the patch
- Fixed bug #723 : ScopeIndent can fail when multiple array closers are on the same line
- Fixed bug #730 : ScopeIndent can fail when a short array opening square bracket is on a line by itself
- Fixed bug #732 : PHP Notice if @package name is made up of all invalid characters
  -- Adds new error code PEAR.Commenting.FileComment.InvalidPackageValue
- Fixed bug #748 : Auto fix for Squiz.Commenting.BlockComment.WrongEnd is incorrect
  -- Thanks to J.D. Grimes for the patch
- Fixed bug #753 : PSR2 standard shouldn&apos;t require space after USE block when next code is a closing tag
- Fixed bug #768 : PEAR FunctionCallSignature sniff forbids comments after opening parenthesis of a multiline call
- Fixed bug #769 : Incorrect detection of variable reference operator when used with short array syntax
  -- Thanks to Klaus Purer for the patch
- Fixed bug #772 : Syntax error when using PHPCBF on alternative style foreach loops
- Fixed bug #773 : Syntax error when stripping trailing PHP close tag and previous statement has no semicolon
- Fixed bug #778 : PHPCBF creates invalid PHP for inline FOREACH containing multiple control structures
- Fixed bug #781 : Incorrect checking for PHP7 return types on multi-line function declarations
- Fixed bug #782 : Conditional function declarations cause fixing conflicts in Squiz standard
  -- Squiz.ControlStructures.ControlSignature no longer enforces a single newline after open brace
  -- Squiz.WhiteSpace.ControlStructureSpacing can be used to check spacing at the start/end of control structures
   </notes>
  </release>
  <release>
   <version>
    <release>2.3.4</release>
    <api>2.3.4</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <date>2015-09-09</date>
   <license uri="https://github.com/squizlabs/PHP_CodeSniffer/blob/master/licence.txt">BSD License</license>
   <notes>
- JSON report format now includes the fixable status for each error message and the total number of fixable errors
- Added more guard code for function declarations with syntax errors
- Added tokenizer support for the PHP declare construct
  -- Thanks to Andy Blyler for the patch
- Generic UnnecessaryStringConcatSniff can now allow strings concatenated over multiple lines
  -- Set the allowMultiline property to TRUE (default is FALSE) in your ruleset.xml file to enable this
  -- By default, concat used only for getting around line length limits still generates an error
  -- Thanks to Stefan Lenselink for the contribution
- Invalid byte sequences no longer throw iconv_strlen() errors (request #639)
  -- Thanks to Willem Stuursma for the patch
- Generic TodoSniff and FixmeSniff are now better at processing strings with invalid characters
- PEAR FunctionCallSignatureSniff now ignores indentation of inline HTML content
- Squiz ControlSignatureSniff now supports control structures with only inline HTML content
- Fixed bug #636 : Some class names cause CSS tokenizer to hang
- Fixed bug #638 : VCS blame reports output error content from the blame commands for files not under VC
- Fixed bug #642 : Method params incorrectly detected when default value uses short array syntax
  -- Thanks to Josh Davis for the patch
- Fixed bug #644 : PEAR ScopeClosingBrace sniff does not work with mixed HTML/PHP
- Fixed bug #645 : FunctionSignature and ScopeIndent sniffs don&apos;t detect indents correctly when PHP open tag is not on a line by itself
- Fixed bug #648 : Namespace not tokenized correctly when followed by multiple use statements
- Fixed bug #654 : Comments affect indent check for BSDAllman brace style
- Fixed bug #658 : Squiz.Functions.FunctionDeclarationSpacing error for multi-line declarations with required spaces greater than zero
  -- Thanks to J.D. Grimes for the patch
- Fixed bug #663 : No space after class name generates: Class name &quot;&quot; is not in camel caps format
- Fixed bug #667 : Scope indent check can go into infinite loop due to some parse errors
- Fixed bug #670 : Endless loop in PSR1 SideEffects sniffer if no semicolon after last statement
  -- Thanks to Thomas Jarosch for the patch
- Fixed bug #672 : Call-time pass-by-reference false positive
- Fixed bug #683 : Comments are incorrectly reported by PSR2.ControlStructures.SwitchDeclaration sniff
- Fixed bug #687 : ScopeIndent does not check indent correctly for method prefixes like public and abstract
- Fixed bug #689 : False error on some comments after class closing brace
   </notes>
  </release>
  <release>
   <version>
    <release>2.3.3</release>
    <api>2.3.3</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <date>2015-06-24</date>
   <license uri="https://github.com/squizlabs/PHP_CodeSniffer/blob/master/licence.txt">BSD License</license>
   <notes>
- Improved the performance of the CSS tokenizer, especially on very large CSS files (thousands of lines)
  -- Thanks to Klaus Purer for the patch
- Defined tokens for lower PHP versions are now phpcs-specific strings instead of ints
  -- Stops conflict with other projects, like PHP_CodeCoverage
- Added more guard code for syntax errors to various sniffs
- Improved support for older HHVM versions
  -- Thanks to Kunal Mehta for the patch
- Squiz ValidLogicalOperatorsSniff now ignores XOR as type casting is different when using the ^ operator (request #567)
- Squiz CommentedOutCodeSniff is now better at ignoring URLs inside comments
- Squiz ControlSignatureSniff is now better at checking embedded PHP code
- Squiz ScopeClosingBraceSniff is now better at checking embedded PHP code
- Fixed bug #584 : Squiz.Arrays.ArrayDeclaration sniff gives incorrect NoComma error for multiline string values
- Fixed bug #589 : PEAR.Functions.FunctionCallSignature sniff not checking all function calls
- Fixed bug #592 : USE statement tokenising can sometimes result in mismatched scopes
- Fixed bug #594 : Tokenizer issue on closure that returns by reference
- Fixed bug #595 : Colons in CSS selectors within media queries throw false positives
  -- Thanks to Klaus Purer for the patch
- Fixed bug #598 : PHPCBF can break function/use closure brace placement
- Fixed bug #603 : Squiz ControlSignatureSniff hard-codes opener type while fixing
- Fixed bug #605 : Auto report-width specified in ruleset.xml ignored
- Fixed bug #611 : Invalid numeric literal on CSS files under PHP7
- Fixed bug #612 : Multi-file diff generating incorrectly if files do not end with EOL char
- Fixed bug #615 : Squiz OperatorBracketSniff incorrectly reports and fixes operations using self::
- Fixed bug #616 : Squiz DisallowComparisonAssignmentSniff inconsistent errors with inline IF statements
- Fixed bug #617 : Space after switch keyword in PSR-2 is not being enforced
- Fixed bug #621 : PSR2 SwitchDeclaration sniff doesn&apos;t detect, or correctly fix, case body on same line as statement
   </notes>
  </release>
  <release>
   <version>
    <release>2.3.2</release>
    <api>2.3.2</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <date>2015-04-29</date>
   <license uri="https://github.com/squizlabs/PHP_CodeSniffer/blob/master/licence.txt">BSD License</license>
   <notes>
- The error message for PSR2.ControlStructures.SwitchDeclaration.WrongOpenercase is now clearer (request #579)
- Fixed bug #545 : Long list of CASE statements can cause tokenizer to reach a depth limit
- Fixed bug #565 : Squiz.WhiteSpace.OperatorSpacing reports negative number in short array
  -- Thanks to Vašek Purchart for the patch
  -- Same fix also applied to Squiz.Formatting.OperatorBracket
- Fixed bug #569 : Generic ScopeIndentSniff throws PHP notices in JS files
- Fixed bug #570 : Phar class fatals in PHP less than 5.3
   </notes>
  </release>
  <release>
   <version>
    <release>2.3.1</release>
    <api>2.3.1</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <date>2015-04-23</date>
   <license uri="https://github.com/squizlabs/PHP_CodeSniffer/blob/master/licence.txt">BSD License</license>
   <notes>
- PHPCS can now exit with 0 even if errors are found
  -- Set the ignore_errors_on_exit config variable to 1 to set this behaviour
  -- Use with the ignore_warnings_on_exit config variable to never return a non-zero exit code
- Added Generic DisallowLongArraySyntaxSniff to enforce the use of the PHP short array syntax (request #483)
  -- Thanks to Xaver Loppenstedt for helping with tests
- Added Generic DisallowShortArraySyntaxSniff to ban the use of the PHP short array syntax (request #483)
  -- Thanks to Xaver Loppenstedt for helping with tests
- Generic ScopeIndentSniff no longer does exact checking for content inside parenthesis (request #528)
  -- Only applies to custom coding standards that set the &quot;exact&quot; flag to TRUE
- Squiz ConcatenationSpacingSniff now has a setting to ignore newline characters around operators (request #511)
    -- Default remains FALSE, so newlines are not allowed
    -- Override the &quot;ignoreNewlines&quot; setting in a ruleset.xml file to change
- Squiz InlineCommentSniff no longer checks the last char of a comment if the first char is not a letter (request #505)
- The Squiz standard has increased the max padding for statement alignment from 12 to 20
- Fixed bug #479 : Yielded values are not recognised as returned values in Squiz FunctionComment sniff
- Fixed bug #512 : Endless loop whilst parsing mixture of control structure styles
- Fixed bug #515 : Spaces in JS block incorrectly flagged as indentation error
- Fixed bug #523 : Generic ScopeIndent errors for IF in FINALLY
- Fixed bug #527 : Closure inside IF statement is not tokenized correctly
- Fixed bug #529 : Squiz.Strings.EchoedStrings gives false positive when echo&apos;ing using an inline condition
- Fixed bug #537 : Using --config-set is breaking phpcs.phar
- Fixed bug #543 : SWITCH with closure in condition generates inline control structure error
- Fixed bug #551 : Multiple catch blocks not checked in Squiz.ControlStructures.ControlSignature sniff
- Fixed bug #554 : ScopeIndentSniff causes errors when encountering an unmatched parenthesis
- Fixed bug #558 : PHPCBF adds brace for ELSE IF split over multiple lines
- Fixed bug #564 : Generic MultipleStatementAlignment sniff reports incorrect errors for multiple assignments on a single line
   </notes>
  </release>
  <release>
   <version>
    <release>2.3.0</release>
    <api>2.3.0</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <date>2015-03-04</date>
   <license uri="https://github.com/squizlabs/PHP_CodeSniffer/blob/master/licence.txt">BSD License</license>
   <notes>
- The existence of the main config file is now cached to reduce is_file() calls when it doesn&apos;t exist (request #486)
- Abstract classes inside the Sniffs directory are now ignored even if they are named [Name]Sniff.php (request #476)
  -- Thanks to David Vernet for the patch
- PEAR and Squiz FileComment sniffs no longer have @ in their error codes
  -- e.g., PEAR.Commenting.FileComment.Duplicate@categoryTag becomes PEAR.Commenting.FileComment.DuplicateCategoryTag
  -- e.g., Squiz.Commenting.FileComment.Missing@categoryTag becomes Squiz.Commenting.FileComment.MissingCategoryTag
- PEAR MultiLineConditionSniff now allows comment lines inside multi-line IF statement conditions
  -- Thanks to Klaus Purer for the patch
- Generic ForbiddenFunctionsSniff now supports setting null replacements in ruleset files (request #263)
- Generic opening function brace sniffs now support checking of closures
  -- Set the checkClosures property to TRUE (default is FALSE) in your ruleset.xml file to enable this
  -- Can also set the checkFunctions property to FALSE (default is TRUE) in your ruleset.xml file to only check closures
  -- Affects OpeningFunctionBraceBsdAllmanSniff and OpeningFunctionBraceKernighanRitchieSniff
- Generic OpeningFunctionBraceKernighanRitchieSniff can now fix all the errors it finds
- Generic OpeningFunctionBraceKernighanRitchieSniff now allows empty functions with braces next to each other
- Generic OpeningFunctionBraceBsdAllmanSniff now allows empty functions with braces next to each other
- Improved auto report width for the &quot;full&quot; report
- Improved conflict detection during auto fixing
- Generic ScopeIndentSniff is no longer confused by empty closures
- Squiz ControlSignatureSniff now always ignores comments (fixes bug #490)
  -- Include the Squiz.Commenting.PostStatementComment sniff in your ruleset.xml to ban these comments again
- Squiz OperatorSpacingSniff no longer throws errors for code in the form ($foo || -1 === $bar)
- Fixed errors tokenizing T_ELSEIF tokens on HHVM 3.5
- Squiz ArrayDeclarationSniff is no longer tricked by comments after array values
- PEAR IncludingFileSniff no longer produces invalid code when removing parenthesis from require/include statements
- Fixed bug #415 : The @codingStandardsIgnoreStart has no effect during fixing
- Fixed bug #432 : Properties of custom sniffs cannot be configured
- Fixed bug #453 : PSR2 standard does not allow closing tag for mixed PHP/HTML files
- Fixed bug #457 : FunctionCallSignature sniffs do not support here/nowdoc syntax and can cause syntax error when fixing
- Fixed bug #466 : PropertyLabelSpacing JS fixer issue when there is no space after colon
- Fixed bug #473 : Writing a report for an empty folder to existing file includes the existing contents
- Fixed bug #485 : PHP notice in Squiz.Commenting.FunctionComment when checking malformed @throws comment
- Fixed bug #491 : Generic InlineControlStructureSniff can correct with missing semicolon
  -- Thanks to Jesse Donat for the patch
- Fixed bug #492 : Use statements don&apos;t increase the scope indent
- Fixed bug #493 : PSR1_Sniffs_Methods_CamelCapsMethodNameSniff false positives for some magic method detection
  -- Thanks to Andreas Möller for the patch
- Fixed bug #496 : Closures in PSR2 are not checked for a space after the function keyword
- Fixed bug #497 : Generic InlineControlStructureSniff does not support alternative SWITCH syntax
- Fixed bug #500 : Functions not supported as values in Squiz ArrayDeclaration sniff
- Fixed bug #501 : ScopeClosingBrace and ScopeIndent conflict with closures used as array values
  -- Generic ScopeIndentSniff may now report fewer errors for closures, but perform the same fixes
- Fixed bug #502 : PSR1 SideEffectsSniff sees declare() statements as side effects
   </notes>
  </release>
  <release>
   <version>
    <release>2.2.0</release>
    <api>2.2.0</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <date>2015-01-22</date>
   <license uri="https://github.com/squizlabs/PHP_CodeSniffer/blob/master/licence.txt">BSD License</license>
   <notes>
- Added (hopefully) tastefully used colors to report and progress output for the phpcs command
  -- Use the --colors command line argument to use colors in output
  -- Use the command &quot;phpcs --config-set colors true&quot; to turn colors on by default
  -- Use the --no-colors command line argument to turn colors off when the config value is set
- Added support for using the full terminal width for report output
  -- Use the --report-width=auto command line argument to auto-size the reports
  -- Use the command &quot;phpcs --config-set report_width auto&quot; to use auto-sizing by default
- Reports will now size to fit inside the report width setting instead of always using padding to fill the space
- If no files or standards are specified, PHPCS will now look for a phpcs.xml file in the current directory
  -- This file has the same format as a standard ruleset.xml file
  -- The phpcs.xml file should specify (at least) files to process and a standard/sniffs to use
  -- Useful for running the phpcs and phpcbf commands without any arguments at the top of a repository
- Default file paths can now be specified in a ruleset.xml file using the &quot;file&quot; tag
  -- File paths are only processed if no files were specified on the command line
- Extensions specified on the CLI are now merged with those set in ruleset.xml files
  -- Previously, the ruleset.xml file setting replaced the CLI setting completely
- Squiz coding standard now requires lowercase PHP constants (true, false and null)
  -- Removed Squiz.NamingConventions.ConstantCase sniff as the rule is now consistent across PHP and JS files
- Squiz FunctionOpeningBraceSpaceSniff no longer does additional checks for JS functions
  -- PHP and JS functions and closures are now treated the same way
- Squiz MultiLineFunctionDeclarationSniff now supports JS files
- Interactive mode no longer breaks if you also specify a report type on the command line
- PEAR InlineCommentSniff now fixes the Perl-style comments that it finds (request #375)
- PSR2 standard no longer fixes the placement of docblock open tags as comments are excluded from this standard
- PSR2 standard now sets a default tab width of 4 spaces
- Generic DocCommentSniff now only disallows lowercase letters at the start of a long/short comment (request #377)
  -- All non-letter characters are now allowed, including markdown special characters and numbers
- Generic DisallowMultipleStatementsSniff now allows multiple open/close tags on the same line (request #423)
- Generic CharacterBeforePHPOpeningTagSniff now only checks the first PHP tag it finds (request #423)
- Generic CharacterBeforePHPOpeningTagSniff now allows a shebang line at the start of the file (request #20481)
- Generic InlineHTMLUnitTest now allows a shebang line at the start of the file (request #20481)
- PEAR ObjectOperatorIndentSniff now only checks object operators at the start of a line
- PEAR FileComment and ClassComment sniffs no longer have @ in their error codes
  -- E.g., PEAR.Commenting.FileComment.Missing@categoryTag becomes PEAR.Commenting.FileComment.MissingCategoryTag
  -- Thanks to Grzegorz Rygielski for the patch
- Squiz ControlStructureSpacingSniff no longer enforces a blank line before CATCH statements
- Squiz FunctionCommentSniff now fixes the return type in the @return tag (request #392)
- Squiz BlockCommentSniff now only disallows lowercase letters at the start of the comment
- Squiz InlineCommentSniff now only disallows lowercase letters at the start of the comment
- Squiz OperatorSpacingSniff now has a setting to ignore newline characters around operators (request #348)
  -- Default remains FALSE, so newlines are not allowed
  -- Override the &quot;ignoreNewlines&quot; setting in a ruleset.xml file to change
- PSR2 ControlStructureSpacingSniff now checks for, and fixes, newlines after the opening parenthesis
- Added a markdown document generator (--generator=markdown to use)
  -- Thanks to Stefano Kowalke for the contribution
- Fixed bug #379 : Squiz.Arrays.ArrayDeclaration.NoCommaAfterLast incorrectly detects comments
- Fixed bug #382 : JS tokenizer incorrect for inline conditionally created immediately invoked anon function
- Fixed bug #383 : Squiz.Arrays.ArrayDeclaration.ValueNoNewline incorrectly detects nested arrays
- Fixed bug #386 : Undefined offset in Squiz.FunctionComment sniff when param has no comment
- Fixed bug #390 : Indentation of non-control structures isn&apos;t adjusted when containing structure is fixed
- Fixed bug #400 : InlineControlStructureSniff fails to fix when statement has no semicolon
- Fixed bug #401 : PHPCBF no-patch option shows an error when there are no fixable violations in a file
- Fixed bug #405 : The &quot;Squiz.WhiteSpace.FunctionSpacing&quot; sniff removes class &quot;}&quot; during fixing
- Fixed bug #407 : PEAR.ControlStructures.MultiLineCondition doesn&apos;t account for comments at the end of lines
- Fixed bug #410 : The &quot;Squiz.WhiteSpace.MemberVarSpacing&quot; not respecting &quot;var&quot;
- Fixed bug #411 : Generic.WhiteSpace.ScopeIndent.Incorrect - false positive with multiple arrays in argument list
- Fixed bug #412 : PSR2 multi-line detection doesn&apos;t work for inline IF and string concats
- Fixed bug #414 : Squiz.WhiteSpace.MemberVarSpacing - inconsistent checking of member vars with comment
- Fixed bug #433 : Wrong detection of Squiz.Arrays.ArrayDeclaration.KeyNotAligned when key contains space
- Fixed bug #434 : False positive for spacing around &quot;=&gt;&quot; in inline array within foreach
- Fixed bug #452 : Ruleset exclude-pattern for specific sniff code ignored when using CLI --ignore option
- Fixed bug #20482 : Scope indent sniff can get into infinite loop when processing a parse error
   </notes>
  </release>
  <release>
   <version>
    <release>2.1.0</release>
    <api>2.1.0</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <date>2014-12-18</date>
   <license uri="https://github.com/squizlabs/PHP_CodeSniffer/blob/master/licence.txt">BSD License</license>
   <notes>
- Time and memory output is now shown if progress information is also shown (request #335)
- A tilde can now be used to reference a user&apos;s home directory in a path to a standard (request #353)
- Added PHP_CodeSniffer_File::findStartOfStatement() to find the first non-whitespace token in a statement
  -- Possible alternative for code using PHP_CodeSniffer_File::findPrevious() with the local flag set
- Added PHP_CodeSniffer_File::findEndOfStatement() to find the last non-whitespace token in a statement
  -- Possible alternative for code using PHP_CodeSniffer_File::findNext() with the local flag set
- Generic opening function brace sniffs now ensure the opening brace is the last content on the line
  -- Affects OpeningFunctionBraceBsdAllmanSniff and OpeningFunctionBraceKernighanRitchieSniff
  -- Also enforced in PEAR FunctionDeclarationSniff and Squiz MultiLineFunctionDeclarationSniff
- Generic DisallowTabIndentSniff now replaces tabs everywhere it finds them, except in strings and here/now docs
- Generic EmptyStatementSniff error codes now contain the type of empty statement detected (request #314)
  -- All messages generated by this sniff are now errors (empty CATCH was previously a warning)
  -- Message code Generic.CodeAnalysis.EmptyStatement.NotAllowed has been removed
  -- Message code Generic.CodeAnalysis.EmptyStatement.NotAllowedWarning has been removed
  -- New message codes have the format Generic.CodeAnalysis.EmptyStatement.Detected[TYPE]
  -- Example code is Generic.CodeAnalysis.EmptyStatement.DetectedCATCH
  -- You can now use a custom ruleset to change messages to warnings and to exclude them
- PEAR and Squiz FunctionCommentSniffs no longer ban @return tags for constructors and destructors
  -- Removed message PEAR.Commenting.FunctionComment.ReturnNotRequired
  -- Removed message Squiz.Commenting.FunctionComment.ReturnNotRequired
  -- Change initiated by request #324 and request #369
- Squiz EmptyStatementSniff has been removed
  -- Squiz standard now includes Generic EmptyStatementSniff and turns off the empty CATCH error
- Squiz ControlSignatureSniff fixes now retain comments between the closing parenthesis and open brace
- Squiz SuperfluousWhitespaceSniff now checks for extra blank lines inside closures
  -- Thanks to Sertan Danis for the patch
- Squiz ArrayDeclarationSniff now skips function calls while checking multi-line arrays
- Fixed bug #337 : False positive with anonymous functions in Generic_Sniffs_WhiteSpace_ScopeIndentSniff
- Fixed bug #339 : reformatting brace location can result in broken code
- Fixed bug #342 : Nested ternary operators not tokenized correctly
- Fixed bug #345 : Javascript regex not tokenized when inside array
- Fixed bug #346 : PHP path can&apos;t be determined in some cases in &quot;phpcs.bat&quot; (on Windows XP)
- Fixed bug #358 : False positives for Generic_Sniffs_WhiteSpace_ScopeIndentSniff
- Fixed bug #361 : Sniff-specific exclude patterns don&apos;t work for Windows
- Fixed bug #364 : Don&apos;t interpret &quot;use function&quot; as declaration
- Fixed bug #366 : phpcbf with PSR2 errors on control structure alternative syntax
- Fixed bug #367 : Nested Anonymous Functions Causing False Negative
- Fixed bug #371 : Shorthand binary cast causes tokenizer errors
  -- New token T_BINARY_CAST added for the b&quot;string&quot; cast format (the &apos;b&apos; is the T_BINARY_CAST token)
- Fixed bug #372 : phpcbf parse problem, wrong brace placement for inline IF
- Fixed bug #373 : Double quote usage fix removing too many double quotes
- Fixed bug #20196 : 1.5.2 breaks scope_closer position
   </notes>
  </release>
  <release>
   <version>
    <release>2.0.0</release>
    <api>2.0.0</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <date>2014-12-05</date>
   <license uri="https://github.com/squizlabs/PHP_CodeSniffer/blob/master/licence.txt">BSD License</license>
   <notes>
- JS tokenizer now sets functions as T_CLOSUREs if the function is anonymous
- JS tokenizer now sets all objects to T_OBJECT
  -- Object end braces are set to a new token T_CLOSE_OBJECT
  -- T_OBJECT tokens no longer act like scopes; i.e., they have no condition/opener/closer
  -- T_PROPERTY tokens no longer act like scopes; i.e., they have no condition/opener/closer
  -- T_OBJECT tokens have a bracket_closer instead, which can be used to find the ending
  -- T_CLOSE_OBJECT tokens have a bracket_opener
- Improved regular expression detection in the JS tokenizer
- You can now get PHP_CodeSniffer to ignore a single line by putting @codingStandardsIgnoreLine in a comment
  -- When the comment is found, the comment line and the following line will be ignored
  -- Thanks to Andy Bulford for the contribution
- PHPCBF now prints output when it is changing into directories
- Improved conflict detection during auto fixing
- The -vvv command line argument will now output the current file content for each loop during fixing
- Generic ScopeIndentSniff now checks that open/close PHP tags are aligned to the correct column
- PEAR FunctionCallSignatureSniff now checks indent of closing parenthesis even if it is not on a line by itself
- PEAR FunctionCallSignatureSniff now supports JS files
- PEAR MultiLineConditionSniff now supports JS files
- Squiz DocCommentAlignmentSniff now supports JS files
- Fixed a problem correcting the closing brace line in Squiz ArrayDeclarationSniff
- Fixed a problem auto-fixing the Squiz.WhiteSpace.FunctionClosingBraceSpace.SpacingBeforeNestedClose error
- Squiz EmbeddedPhpSniff no longer reports incorrect alignment of tags when they are not on new lines
- Squiz EmbeddedPhpSniff now aligns open tags correctly when moving them onto a new line
- Improved fixing of arrays with multiple values in Squiz ArrayDeclarationSniff
- Improved detection of function comments in Squiz FunctionCommentSpacingSniff
- Improved fixing of lines after cases statements in Squiz SwitchDeclarationSniff
- Fixed bug #311 : Suppression of function prototype breaks checking of lines within function
- Fixed bug #320 : Code sniffer indentation issue
- Fixed bug #333 : Nested ternary operators causing problems
   </notes>
  </release>
  <release>
   <version>
    <release>2.0.0RC4</release>
    <api>2.0.0RC4</api>
   </version>
   <stability>
    <release>beta</release>
    <api>beta</api>
   </stability>
   <date>2014-11-07</date>
   <license uri="https://github.com/squizlabs/PHP_CodeSniffer/blob/master/licence.txt">BSD License</license>
   <notes>
- JS tokenizer now detects xor statements correctly
- Improved detection of properties and objects in the JS tokenizer
- Generic ScopeIndentSniff can now fix indents using tabs instead of spaces
  -- Set the tabIndent property to TRUE in your ruleset.xml file to enable this
  -- It is important to also set a tab-width setting, either in the ruleset or on the command line, for accuracy
- Generic ScopeIndentSniff now checks and auto-fixes JS files
- Generic DisallowSpaceIndentSniff is now able to replace space indents with tab indents during fixing
- Support for phpcs-only and phpcbf-only attributes has been added to all ruleset.xml elements
  -- Allows parts of the ruleset to only apply when using a specific tool
  -- Useful for doing things like excluding indent fixes but still reporting indent errors
- Unit tests can now set command line arguments during a test run
  -- Override getCliValues() and pass an array of CLI arguments for each file being tested
- File-wide sniff properties can now be set using T_INLINE_HTML content during unit test runs
  -- Sniffs that start checking at the open tag can only, normally, have properties set using a ruleset
- Generic ConstructorNameSniff no longer errors for PHP4 style constructors when __construct() is present
  -- Thanks to Thibaud Fabre for the patch
- Generic DocCommentSniff now checks that the end comment tag is on a new line
- Generic MultipleStatementAlignmentSniff no longer skips assignments for closures
- Squiz DocCommentAlignment sniff now has better checking for single line doc block
- Running unit tests with the -v CLI argument no longer generates PHP errors
- Fixed bug #295 : ScopeIndentSniff hangs when processing nested closures
- Fixed bug #298 : False positive in ScopeIndentSniff when anonymous functions are used with method chaining
- Fixed bug #302 : Fixing code in Squiz InlineComment sniff can remove some comment text
- Fixed bug #303 : Open and close tag on same line can cause a PHP notice checking scope indent
- Fixed bug #306 : File containing only a namespace declaration raises undefined index notice
- Fixed bug #307 : Conditional breaks in case statements get incorrect indentations
- Fixed bug #308 : Squiz InlineIfDeclarationSniff fails on ternary operators inside closure
- Fixed bug #310 : Variadics not recognized by tokenizer
   </notes>
  </release>
  <release>
   <version>
    <release>2.0.0RC3</release>
    <api>2.0.0RC3</api>
   </version>
   <stability>
    <release>beta</release>
    <api>beta</api>
   </stability>
   <date>2014-10-16</date>
   <license uri="https://github.com/squizlabs/PHP_CodeSniffer/blob/master/licence.txt">BSD License</license>
   <notes>
- Improved default output for PHPCBF and removed the options to print verbose and progress output
- If a .fixed file is supplied for a unit test file, the auto fixes will be checked against it during testing
  -- See Generic ScopeIndentUnitTest.inc and ScopeIndentUnitTest.inc.fixed for an example
- Fixer token replacement methods now return TRUE if the change was accepted and FALSE if rejected
- The --config-show command now pretty-prints the config values
  -- Thanks to Ken Guest for the patch
- Setting and removing config values now catches exceptions if the config file is not writable
  -- Thanks to Ken Guest for the patch
- Setting and removing config values now prints a message to confirm the action and show old values
- Generic ScopeIndentSniff has been completely rewritten to improve fixing and embedded PHP detection
- Generic DisallowTabIndent and DisallowSpaceIndent sniffs now detect indents at the start of block comments
- Generic DisallowTabIndent and DisallowSpaceIndent sniffs now detect indents inside multi-line strings
- Generic DisallowTabIndentSniff now replaces tabs inside doc block comments
- Squiz ControlStructureSpacingSniff error codes have been corrected; they were reversed
- Squiz EmbeddedPhpSniff now checks open and close tag indents and fixes some errors
- Squiz FileCommentSniff no longer throws incorrect blank line before comment errors in JS files
- Squiz ClassDeclarationSniff now has better checking for blank lines after a closing brace
- Removed error Squiz.Classes.ClassDeclaration.NoNewlineAfterCloseBrace (request #285)
  -- Already handled by Squiz.Classes.ClassDeclaration.CloseBraceSameLine
- Fixed bug #280 : The --config-show option generates error when there is no config file
   </notes>
  </release>
  <release>
   <version>
    <release>2.0.0RC2</release>
    <api>2.0.0RC2</api>
   </version>
   <stability>
    <release>beta</release>
    <api>beta</api>
   </stability>
   <date>2014-09-26</date>
   <license uri="https://github.com/squizlabs/PHP_CodeSniffer/blob/master/licence.txt">BSD License</license>
   <notes>
- Minified JS and CSS files are now detected and skipped (fixes bug #252 and bug #19899)
  -- A warning will be added to the file so it can be found in the report and ignored in the future
- Fixed incorrect length of JS object operator tokens
- PHP tokenizer no longer converts class/function names to special tokens types
  -- Class/function names such as parent and true would become special tokens such as T_PARENT and T_TRUE
- PHPCS can now exit with 0 if only warnings were found (request #262)
  -- Set the ignore_warnings_on_exit config variable to 1 to set this behaviour
  -- Default remains at exiting with 0 only if no errors and no warnings were found
  -- Also changes return value of PHP_CodeSniffer_Reporting::printReport()
- Rulesets can now set associative array properties
  -- property name=&quot;[property]&quot; type=&quot;array&quot; value=&quot;foo=&gt;bar,baz=&gt;qux&quot;
- Generic ForbiddenFunctionsSniff now has a public property called forbiddenFunctions (request #263)
  -- Override the property in a ruleset.xml file to define forbidden functions and their replacements
  -- A replacement of NULL indicates that no replacement is available
  -- e.g., value=&quot;delete=&gt;unset,print=&gt;echo,create_function=&gt;null&quot;
  -- Custom sniffs overriding this one will need to change the visibility of their member var
- Improved closure support in Generic ScopeIndentSniff
- Improved indented PHP tag support in Generic ScopeIndentSniff
- Improved fixing of mixed line indents in Generic ScopeIndentSniff
- Added conflict detection to the file fixer
  -- If 2 sniffs look to be conflicting, one change will be ignored to allow a fix to occur
- Generic CamelCapsFunctionNameSniff now ignores a single leading underscore
  -- Thanks to Alex Slobodiskiy for the patch
- Standards can now be located within hidden directories (further fix for bug #20323)
  -- Thanks to Klaus Purer for the patch
- Sniff ignore patterns now replace Win dir separators like file ignore patterns already did
- Exclude patterns now use backtick delimiters, allowing all special characters to work correctly again
  -- Thanks to Jeremy Edgell for the patch
- Errors converted to warnings in a ruleset (and vice versa) now retain their fixable status
  -- Thanks to Alexander Obuhovich for the patch
- Squiz ConcatenationSpacingSniff now has a setting to specify how many spaces there should around concat operators
  -- Default remains at 0
  -- Override the &quot;spacing&quot; setting in a ruleset.xml file to change
- Added auto-fixes for Squiz InlineCommentSniff
- Generic DocCommentSniff now correctly fixes additional blank lines at the end of a comment
- Squiz OperatorBracketSniff now correctly fixes operations that include arrays
- Zend ClosingTagSniff fix now correctly leaves closing tags when followed by HTML
- Added Generic SyntaxSniff to check for syntax errors in PHP files
  -- Thanks to Blaine Schmeisser for the contribution
- Added Generic OneTraitPerFileSniff to check that only one trait is defined in each file
  -- Thanks to Alexander Obuhovich for the contribution
- Squiz DiscouragedFunctionsSniff now warns about var_dump()
- PEAR ValidFunctionNameSniff no longer throws an error for _()
- Squiz and PEAR FunctionCommentSniffs now support _()
- Generic DisallowTabIndentSniff now checks for, and fixes, mixed indents again
- Generic UpperCaseConstantSniff and LowerCaseConstantSniff now ignore function names
- Fixed bug #243 : Missing DocBlock not detected
- Fixed bug #248 : FunctionCommentSniff expects ampersand on param name
- Fixed bug #265 : False positives with type hints in ForbiddenFunctionsSniff
- Fixed bug #20373 : Inline comment sniff tab handling way
- Fixed bug #20377 : Error when trying to execute phpcs with report=json
- Fixed bug #20378 : Report appended to existing file if no errors found in run
- Fixed bug #20381 : Invalid &quot;Comment closer must be on a new line&quot;
  -- Thanks to Brad Kent for the patch
- Fixed bug #20402 : SVN pre-commit hook fails due to unknown argument error
   </notes>
  </release>
  <release>
   <version>
    <release>2.0.0RC1</release>
    <api>2.0.0RC1</api>
   </version>
   <stability>
    <release>beta</release>
    <api>beta</api>
   </stability>
   <date>2014-08-06</date>
   <license uri="https://github.com/squizlabs/PHP_CodeSniffer/blob/master/licence.txt">BSD License</license>
   <notes>
- PHPCBF will now fix incorrect newline characters in a file
- PHPCBF now exists cleanly when there are no errors to fix
- Added phpcbf.bat file for Windows
- Verbose option no longer errors when using a phar file with a space in the path
- Fixed a reporting error when using HHVM
  -- Thanks to Martins Sipenko for the patch
- addFixableError() and addFixableWarning() now only return true if the fixer is enabled
  -- Saves checking ($phpcsFile-&gt;fixer-&gt;enabled === true) before every fix
- Added addErrorOnLine() and addWarningOnLine() to add a non-fixable violation to a line at column 1
  -- Useful if you are generating errors using an external tool or parser and only know line numbers
  -- Thanks to Ondřej Mirtes for the patch
- CSS tokenizer now identifies embedded PHP code using the new T_EMBEDDED_PHP token type
  -- The entire string of PHP is contained in a single token
- PHP tokenizer contains better detection of short array syntax
- Unit test runner now also test any standards installed under the installed_paths config var
- Exclude patterns now use {} delimiters, allowing the | special character to work correctly again
- The filtering component of the --extensions argument is now ignored again when passing filenames
  -- Can still be used to specify a custom tokenizer for each extension when passing filenames
  -- If no tokenizer is specified, default values will be used for common file extensions
- Diff report now produces relative paths on Windows, where possible (further fix for bug #20234)
- If a token&apos;s content has been modified by the tab-width setting, it will now have an orig_content in the tokens array
- Generic DisallowSpaceIndent and DisallowTabIndent sniffs now check original indent content even when tab-width is set
  -- Previously, setting --tab-width would force both to check the indent as spaces
- Fixed a problem where PHPCBF could replace tabs with too many spaces when changing indents
- Fixed a problem that could occur with line numbers when using HHVM to check files with Windows newline characters
- Removed use of sys_get_temp_dir() as this is not supported by the min PHP version
- Squiz ArrayDeclarationSniff now supports short array syntax
- Squiz ControlSignatureSniff no longer uses the Abstract Pattern sniff
  -- If you are extending this sniff, you&apos;ll need to rewrite your code
  -- The rewrite allows this sniff to fix all control structure formatting issues it finds
- The installed_paths config var now accepts relative paths
  -- The paths are relative to the PHP_CodeSniffer install directory
  -- Thanks to Weston Ruter for the patch
- Generic ScopeIndentSniff now accounts for different open tag indents
- PEAR FunctionDeclarationSniff now ignores short arrays when checking indent
  -- Thanks to Daniel Tschinder for the patch
- PSR2 FunctionCallSignatureSniff now treats multi-line strings as a single-line argument, like arrays and closures
  -- Thanks to Dawid Nowak for the patch
- PSR2 UseDeclarationSniff now checks for a single space after the USE keyword
- Generic ForbiddenFunctionsSniff now detects calls to functions in the global namespace
  -- Thanks to Ole Martin Handeland for the patch
- Generic LowerCaseConstantSniff and UpperCaseConstantSniff now ignore namespaces beginning with TRUE/FALSE/NULL
  -- Thanks to Renan Gonçalves for the patch
- Squiz InlineCommentSniff no longer requires a blank line after post-statement comments (request #20299)
- Squiz SelfMemberReferenceSniff now works correctly with namespaces
- Squiz FunctionCommentSniff is now more relaxed when checking namespaced type hints
- Tab characters are now encoded in abstract pattern errors messages
  -- Thanks to Blaine Schmeisser for the patch
- Invalid sniff codes passed to --sniffs now show a friendly error message (request #20313)
- Generic LineLengthSniff now shows a warning if the iconv module is disabled (request #20314)
- Source report no longer shows errors if category or sniff names ends in an uppercase error
  -- Thanks to Jonathan Marcil for the patch
- Fixed bug #20261 : phpcbf has an endless fixing loop
- Fixed bug #20268 : Incorrect documentation titles in PEAR documentation
- Fixed bug #20296 : new array notion in function comma check fails
- Fixed bug #20297 : phar does not work when renamed it to phpcs
- Fixed bug #20307 : PHP_CodeSniffer_Standards_AbstractVariableSniff analyze traits
- Fixed bug #20308 : Squiz.ValidVariableNameSniff - wrong variable usage
- Fixed bug #20309 : Use &quot;member variable&quot; term in sniff &quot;processMemberVar&quot; method
- Fixed bug #20310 : PSR2 does not check for space after function name
- Fixed bug #20322 : Display rules set to type=error even when suppressing warnings
- Fixed bug #20323 : PHPCS tries to load sniffs from hidden directories
- Fixed bug #20346 : Fixer endless loop with Squiz.CSS sniffs
- Fixed bug #20355 : No sniffs are registered with PHAR on Windows
   </notes>
  </release>
  <release>
   <version>
    <release>2.0.0a2</release>
    <api>2.0.0a2</api>
   </version>
   <stability>
    <release>alpha</release>
    <api>alpha</api>
   </stability>
   <date>2014-05-01</date>
   <license uri="https://github.com/squizlabs/PHP_CodeSniffer/blob/master/licence.txt">BSD License</license>
   <notes>
- Added report type --report=info to show information about the checked code to make building a standard easier
  -- Checks a number of things, such as what line length you use, and spacing are brackets, but not everything
  -- Still highly experimental
- Generic LineLengthSniff now shows warnings for long lines referring to licence and VCS information
  -- It previously ignored these lines, but at the expense of performance
- Generic DisallowTabIndent and DisallowSpaceIndent sniffs no longer error when detecting mixed indent types
  -- Only the first type of indent found on a line (space or indent) is considered
- Lots of little performance improvements that can add up to a substantial saving over large code bases
  -- Added a &quot;length&quot; array index to tokens so you don&apos;t need to call strlen() of them, or deal with encoding
  -- Can now use isset() to find tokens inside the PHP_CodeSniffer_Tokens static vars instead of in_array()
- Custom reports can now specify a $recordErrors member var; this previously only worked for built-in reports
  -- When set to FALSE, error messages will not be recorded and only totals will be returned
  -- This can save significant memory while processing a large code base
- Removed dependence on PHP_Timer
- PHP tokenizer now supports DEFAULT statements opened with a T_SEMICOLON
- The Squiz and PHPCS standards have increased the max padding for statement alignment from 8 to 12
- Squiz EchoedStringsSniff now supports statements without a semicolon, such as PHP embedded in HTML
- Squiz DoubleQuoteUsageSniff now properly replaces escaped double quotes when fixing a doubled quoted string
- Improved detection of nested IF statements that use the alternate IF/ENDIF syntax
- PSR1 CamelCapsMethodNameSniff now ignores magic methods
  -- Thanks to Eser Ozvataf for the patch
- PSR1 SideEffectsSniff now ignores methods named define()
- PSR1 and PEAR ClassDeclarationSniffs now support traits (request #20208)
- PSR2 ControlStructureSpacingSniff now allows newlines before/after parentheses
  -- Thanks to Maurus Cuelenaere for the patch
- PSR2 ControlStructureSpacingSniff now checks TRY and CATCH statements
- Squiz SuperfluousWhitespaceSniff now detects whitespace at the end of block comment lines
  -- Thanks to Klaus Purer for the patch
- Squiz LowercasePHPFunctionsSniff no longer reports errors for namespaced functions
  -- Thanks to Max Galbusera for the patch
- Squiz SwitchDeclarationSniff now allows exit() as a breaking statement for case/default
- Squiz ValidVariableNameSniff and Zend ValidVariableNameSniff now ignore additional PHP reserved vars
  -- Thanks to Mikuláš Dítě and Adrian Crepaz for the patch
- Sniff code Squiz.WhiteSpace.MemberVarSpacing.After changed to Squiz.WhiteSpace.MemberVarSpacing.Incorrect (request #20241)
- Fixed bug #20200 : Invalid JSON produced with specific error message
- Fixed bug #20204 : Ruleset exclude checks are case sensitive
- Fixed bug #20213 : Invalid error, Inline IF must be declared on single line
- Fixed bug #20225 : array_merge() that takes more than one line generates error
- Fixed bug #20230 : Squiz ControlStructureSpacing sniff assumes specific condition formatting
- Fixed bug #20234 : phpcbf patch command absolute paths
- Fixed bug #20240 : Squiz block comment sniff fails when newline present
- Fixed bug #20247 : The Squiz.WhiteSpace.ControlStructureSpacing sniff and do-while
  -- Thanks to Alexander Obuhovich for the patch
- Fixed bug #20248 : The Squiz_Sniffs_WhiteSpace_ControlStructureSpacingSniff sniff and empty scope
- Fixed bug #20252 : Unitialized string offset when package name starts with underscore
   </notes>
  </release>
  <release>
   <version>
    <release>2.0.0a1</release>
    <api>2.0.0a1</api>
   </version>
   <stability>
    <release>alpha</release>
    <api>alpha</api>
   </stability>
   <date>2014-02-05</date>
   <license uri="https://github.com/squizlabs/PHP_CodeSniffer/blob/master/licence.txt">BSD License</license>
   <notes>
- Added the phpcbf script to automatically fix many errors found by the phpcs script
- Added report type --report=diff to show suggested changes to fix coding standard violations
- The --report argument now allows for custom reports to be used
  -- Use the full path to your custom report class as the report name
- The --extensions argument is now respected when passing filenames; not just with directories
- The --extensions argument now allows you to specify the tokenizer for each extension
  -- e.g., --extensions=module/php,es/js
- Command line arguments can now be set in ruleset files
  -- e.g., arg name=&quot;report&quot; value=&quot;summary&quot; (print summary report; same as --report=summary)
  -- e.g., arg value=&quot;sp&quot; (print source and progress information; same as -sp)
  -- The -vvv, --sniffs, --standard and -l command line arguments cannot be set in this way
- Sniff process() methods can not optionally return a token to ignore up to
  -- If returned, the sniff will not be executed again until the passed token is reached in the file
  -- Useful if you are looking for tokens like T_OPEN_TAG but only want to process the first one
- Removed the comment parser classes and replaced it with a simple comment tokenizer
  -- T_DOC_COMMENT tokens are now tokenized into T_DOC_COMMENT_* tokens so they can be used more easily
  -- This change requires a significant rewrite of sniffs that use the comment parser
  -- This change requires minor changes to sniffs that listen for T_DOC_COMMENT tokens directly
- Added Generic DocCommentSniff to check generic doc block formatting
  -- Removed doc block formatting checks from PEAR ClassCommentSniff
  -- Removed doc block formatting checks from PEAR FileCommentSniff
  -- Removed doc block formatting checks from PEAR FunctionCommentSniff
  -- Removed doc block formatting checks from Squiz ClassCommentSniff
  -- Removed doc block formatting checks from Squiz FileCommentSniff
  -- Removed doc block formatting checks from Squiz FunctionCommentSniff
  -- Removed doc block formatting checks from Squiz VariableCommentSniff
- Squiz DocCommentAlignmentSniff has had its error codes changed
  -- NoSpaceBeforeTag becomes NoSpaceAfterStar
  -- SpaceBeforeTag becomes SpaceAfterStar
  -- SpaceBeforeAsterisk becomes SpaceBeforeStar
- Generic MultipleStatementAlignment now aligns assignments within a block so they fit within their max padding setting
  -- The sniff previously requested the padding as 1 space if max padding was exceeded
  -- It now aligns the assignment with surrounding assignments if it can
  -- Removed property ignoreMultiline as multi-line assignments are now handled correctly and should not be ignored
- Squiz FunctionClosingBraceSpaceSniff now requires a blank line before the brace in all cases except function args
- Added error Squiz.Commenting.ClassComment.SpacingAfter to ensure there are no blank lines after a class comment
- Added error Squiz.WhiteSpace.MemberVarSpacing.AfterComment to ensure there are no blank lines after a member var comment
  -- Fixes have also been corrected to not strip the member var comment or indent under some circumstances
  -- Thanks to Mark Scherer for help with this fix
- Added error Squiz.Commenting.FunctionCommentThrowTag.Missing to ensure a throw is documented
- Removed error Squiz.Commenting.FunctionCommentThrowTag.WrongType
- Content passed via STDIN can now specify the filename to use so that sniffs can run the correct filename checks
  -- Ensure the first line of the content is: phpcs_input_file: /path/to/file
- Squiz coding standard now enforces no closing PHP tag at the end of a pure PHP file
- Squiz coding standard now enforces a single newline character at the end of the file
- Squiz ClassDeclarationSniff no longer checks for a PHP ending tag after a class definition
- Squiz ControlStructureSpacingSniff now checks TRY and CATCH statements as well
- Removed MySource ChannelExceptionSniff
   </notes>
  </release>
  <release>
   <version>
    <release>1.5.6</release>
    <api>1.5.6</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <date>2014-12-05</date>
   <license uri="https://github.com/squizlabs/PHP_CodeSniffer/blob/master/licence.txt">BSD License</license>
   <notes>
- JS tokenizer now detects xor statements correctly
- The --config-show command now pretty-prints the config values
  -- Thanks to Ken Guest for the patch
- Setting and removing config values now catches exceptions if the config file is not writable
  -- Thanks to Ken Guest for the patch
- Setting and removing config values now prints a message to confirm the action and show old values
- You can now get PHP_CodeSniffer to ignore a single line by putting @codingStandardsIgnoreLine in a comment
  -- When the comment is found, the comment line and the following line will be ignored
  -- Thanks to Andy Bulford for the contribution
- Generic ConstructorNameSniff no longer errors for PHP4 style constructors when __construct() is present
  -- Thanks to Thibaud Fabre for the patch
- Fixed bug #280 : The --config-show option generates error when there is no config file
- Fixed bug #306 : File containing only a namespace declaration raises undefined index notice
- Fixed bug #308 : Squiz InlineIfDeclarationSniff fails on ternary operators inside closure
- Fixed bug #310 : Variadics not recognized by tokenizer
- Fixed bug #311 : Suppression of function prototype breaks checking of lines within function
   </notes>
  </release>
  <release>
   <version>
    <release>1.5.5</release>
    <api>1.5.5</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <date>2014-09-25</date>
   <license uri="https://github.com/squizlabs/PHP_CodeSniffer/blob/master/licence.txt">BSD License</license>
   <notes>
- PHP tokenizer no longer converts class/function names to special tokens types
  -- Class/function names such as parent and true would become special tokens such as T_PARENT and T_TRUE
- Improved closure support in Generic ScopeIndentSniff
- Improved indented PHP tag support in Generic ScopeIndentSniff
- Generic CamelCapsFunctionNameSniff now ignores a single leading underscore
  -- Thanks to Alex Slobodiskiy for the patch
- Standards can now be located within hidden directories (further fix for bug #20323)
  -- Thanks to Klaus Purer for the patch
- Added Generic SyntaxSniff to check for syntax errors in PHP files
  -- Thanks to Blaine Schmeisser for the contribution
- Squiz DiscouragedFunctionsSniff now warns about var_dump()
- PEAR ValidFunctionNameSniff no longer throws an error for _()
- Squiz and PEAR FunctionCommentSnif now support _()
- Generic UpperCaseConstantSniff and LowerCaseConstantSniff now ignore function names
- Fixed bug #248 : FunctionCommentSniff expects ampersand on param name
- Fixed bug #265 : False positives with type hints in ForbiddenFunctionsSniff
- Fixed bug #20373 : Inline comment sniff tab handling way
- Fixed bug #20378 : Report appended to existing file if no errors found in run
- Fixed bug #20381 : Invalid &quot;Comment closer must be on a new line&quot;
  -- Thanks to Brad Kent for the patch
- Fixed bug #20386 : Squiz.Commenting.ClassComment.SpacingBefore thrown if first block comment
   </notes>
  </release>
  <release>
   <version>
    <release>1.5.4</release>
    <api>1.5.4</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <date>2014-08-06</date>
   <license uri="https://github.com/squizlabs/PHP_CodeSniffer/blob/master/licence.txt">BSD License</license>
   <notes>
- Removed use of sys_get_temp_dir() as this is not supported by the min PHP version
- The installed_paths config var now accepts relative paths
  -- The paths are relative to the PHP_CodeSniffer install directory
  -- Thanks to Weston Ruter for the patch
- Generic ScopeIndentSniff now accounts for different open tag indents
- PEAR FunctionDeclarationSniff now ignores short arrays when checking indent
  -- Thanks to Daniel Tschinder for the patch
- PSR2 FunctionCallSignatureSniff now treats multi-line strings as a single-line argument, like arrays and closures
  -- Thanks to Dawid Nowak for the patch
- Generic ForbiddenFunctionsSniff now detects calls to functions in the global namespace
  -- Thanks to Ole Martin Handeland for the patch
- Generic LowerCaseConstantSniff and UpperCaseConstantSniff now ignore namespaces beginning with TRUE/FALSE/NULL
  -- Thanks to Renan Gonçalves for the patch
- Squiz InlineCommentSniff no longer requires a blank line after post-statement comments (request #20299)
- Squiz SelfMemberReferenceSniff now works correctly with namespaces
- Tab characters are now encoded in abstract pattern errors messages
  -- Thanks to Blaine Schmeisser for the patch
- Invalid sniff codes passed to --sniffs now show a friendly error message (request #20313)
- Generic LineLengthSniff now shows a warning if the iconv module is disabled (request #20314)
- Source report no longer shows errors if category or sniff names ends in an uppercase error
  -- Thanks to Jonathan Marcil for the patch
- Fixed bug #20268 : Incorrect documentation titles in PEAR documentation
- Fixed bug #20296 : new array notion in function comma check fails
- Fixed bug #20307 : PHP_CodeSniffer_Standards_AbstractVariableSniff analyze traits
- Fixed bug #20308 : Squiz.ValidVariableNameSniff - wrong variable usage
- Fixed bug #20309 : Use &quot;member variable&quot; term in sniff &quot;processMemberVar&quot; method
- Fixed bug #20310 : PSR2 does not check for space after function name
- Fixed bug #20322 : Display rules set to type=error even when suppressing warnings
- Fixed bug #20323 : PHPCS tries to load sniffs from hidden directories
   </notes>
  </release>
  <release>
   <version>
    <release>1.5.3</release>
    <api>1.5.3</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <date>2014-05-01</date>
   <license uri="https://github.com/squizlabs/PHP_CodeSniffer/blob/master/licence.txt">BSD License</license>
   <notes>
- Improved detection of nested IF statements that use the alternate IF/ENDIF syntax
- PHP tokenizer now supports DEFAULT statements opened with a T_SEMICOLON
- PSR1 CamelCapsMethodNameSniff now ignores magic methods
  -- Thanks to Eser Ozvataf for the patch
- PSR1 SideEffectsSniff now ignores methods named define()
- PSR1 and PEAR ClassDeclarationSniffs now support traits (request #20208)
- PSR2 ControlStructureSpacingSniff now allows newlines before/after parentheses
  -- Thanks to Maurus Cuelenaere for the patch
- Squiz LowercasePHPFunctionsSniff no longer reports errors for namespaced functions
  -- Thanks to Max Galbusera for the patch
- Squiz SwitchDeclarationSniff now allows exit() as a breaking statement for case/default
- Squiz ValidVariableNameSniff and Zend ValidVariableNameSniff now ignore additional PHP reserved vars
  -- Thanks to Mikuláš Dítě and Adrian Crepaz for the patch
- Sniff code Squiz.WhiteSpace.MemberVarSpacing.After changed to Squiz.WhiteSpace.MemberVarSpacing.Incorrect (request #20241)
- Fixed bug #20200 : Invalid JSON produced with specific error message
- Fixed bug #20204 : Ruleset exclude checks are case sensitive
- Fixed bug #20213 : Invalid error, Inline IF must be declared on single line
- Fixed bug #20225 : array_merge() that takes more than one line generates error
- Fixed bug #20230 : Squiz ControlStructureSpacing sniff assumes specific condition formatting
- Fixed bug #20240 : Squiz block comment sniff fails when newline present
- Fixed bug #20247 : The Squiz.WhiteSpace.ControlStructureSpacing sniff and do-while
  -- Thanks to Alexander Obuhovich for the patch
- Fixed bug #20248 : The Squiz_Sniffs_WhiteSpace_ControlStructureSpacingSniff sniff and empty scope
- Fixed bug #20252 : Uninitialized string offset when package name starts with underscore
   </notes>
  </release>
  <release>
   <version>
    <release>1.5.2</release>
    <api>1.5.2</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <date>2014-02-05</date>
   <license uri="https://github.com/squizlabs/PHP_CodeSniffer/blob/master/licence.txt">BSD License</license>
   <notes>
- Improved support for the PHP 5.5. classname::class syntax
  -- PSR2 SwitchDeclarationSniff no longer throws errors when this syntax is used in CASE conditions
- Improved support for negative checks of instanceOf in Squiz ComparisonOperatorUsageSniff
  -- Thanks to Martin Winkel for the patch
- Generic FunctionCallArgumentSpacingSniff now longer complains about space before comma when using here/nowdocs
  -- Thanks to Richard van Velzen for the patch
- Generic LowerCaseConstantSniff and UpperCaseConstantSniff now ignore class constants
  -- Thanks to Kristopher Wilson for the patch
- PEAR FunctionCallSignatureSniff now has settings to specify how many spaces should appear before/after parentheses
  -- Override the &apos;requiredSpacesAfterOpen&apos; and &apos;requiredSpacesBeforeClose&apos; settings in a ruleset.xml file to change
  -- Default remains at 0 for both
  -- Thanks to Astinus Eberhard for the patch
- PSR2 ControlStructureSpacingSniff now has settings to specify how many spaces should appear before/after parentheses
  -- Override the &apos;requiredSpacesAfterOpen&apos; and &apos;requiredSpacesBeforeClose&apos; settings in a ruleset.xml file to change
  -- Default remains at 0 for both
  -- Thanks to Astinus Eberhard for the patch
- Squiz ForEachLoopDeclarationSniff now has settings to specify how many spaces should appear before/after parentheses
  -- Override the &apos;requiredSpacesAfterOpen&apos; and &apos;requiredSpacesBeforeClose&apos; settings in a ruleset.xml file to change
  -- Default remains at 0 for both
  -- Thanks to Astinus Eberhard for the patch
- Squiz ForLoopDeclarationSniff now has settings to specify how many spaces should appear before/after parentheses
  -- Override the &apos;requiredSpacesAfterOpen&apos; and &apos;requiredSpacesBeforeClose&apos; settings in a ruleset.xml file to change
  -- Default remains at 0 for both
  -- Thanks to Astinus Eberhard for the patch
- Squiz FunctionDeclarationArgumentSpacingSniff now has settings to specify how many spaces should appear before/after parentheses
  -- Override the &apos;requiredSpacesAfterOpen&apos; and &apos;requiredSpacesBeforeClose&apos; settings in a ruleset.xml file to change
  -- Default remains at 0 for both
  -- Thanks to Astinus Eberhard for the patch
- Removed UnusedFunctionParameter, CyclomaticComplexity and NestingLevel from the Squiz standard
- Generic FixmeSniff and TodoSniff now work correctly with accented characters
- Fixed bug #20145 : Custom ruleset preferences directory over installed standard
- Fixed bug #20147 : phpcs-svn-pre-commit - no more default error report
- Fixed bug #20151 : Problem handling &quot;if(): ... else: ... endif;&quot; syntax
- Fixed bug #20190 : Invalid regex in Squiz_Sniffs_WhiteSpace_SuperfluousWhitespaceSniff
   </notes>
  </release>
  <release>
   <version>
    <release>1.5.1</release>
    <api>1.5.1</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <date>2013-12-12</date>
   <license uri="https://github.com/squizlabs/PHP_CodeSniffer/blob/master/licence.txt">BSD License</license>
   <notes>
- Config values can now be set at runtime using the command line argument [--runtime-set key value]
  -- Runtime values are the same as config values, but are not written to the main config file
  -- Thanks to Wim Godden for the patch
- Config values can now be set in ruleset files
  -- e.g., config name=&quot;zend_ca_path&quot; value=&quot;/path/to/ZendCodeAnalyzer&quot;
  -- Can not be used to set config values that override command line values, such as show_warnings
  -- Thanks to Jonathan Marcil for helping with the patch
- Added a new installed_paths config value to allow for the setting of directories that contain standards
  -- By default, standards have to be installed into the CodeSniffer/Standards directory to be considered installed
  -- New config value allows a list of paths to be set in addition to this internal path
  -- Installed standards appear when using the -i arg, and can be referenced in rulesets using only their name
  -- Set paths by running: phpcs --config-set installed_paths /path/one,/path/two,...
- PSR2 ClassDeclarationSniff now allows a list of extended interfaces to be split across multiple lines
- Squiz DoubleQuoteUsageSniff now allows \b in double quoted strings
- Generic ForbiddenFunctionsSniff now ignores object creation
  -- This is a further fix for bug #20100 : incorrect Function mysql() has been deprecated report
- Fixed bug #20136 : Squiz_Sniffs_WhiteSpace_ScopeKeywordSpacingSniff and Traits
- Fixed bug #20138 : Protected property underscore and camel caps issue (in trait with Zend)
  -- Thanks to Gaetan Rousseau for the patch
- Fixed bug #20139 : No report file generated on success
   </notes>
  </release>
  <release>
   <version>
    <release>1.5.0</release>
    <api>1.5.0</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <date>2013-11-28</date>
   <license uri="https://github.com/squizlabs/PHP_CodeSniffer/blob/master/licence.txt">BSD License</license>
   <notes>
- Doc generation is now working again for installed standards
  -- Includes a fix for limiting the docs to specific sniffs
- Generic ScopeIndentSniff now allows for ignored tokens to be set via ruleset.xml files
  -- E.g., to ignore comments, override a property using:
  -- name=&quot;ignoreIndentationTokens&quot; type=&quot;array&quot; value=&quot;T_COMMENT,T_DOC_COMMENT&quot;
- PSR2 standard now ignores comments when checking indentation rules
- Generic UpperCaseConstantNameSniff no longer reports errors where constants are used (request #20090)
  -- It still reports errors where constants are defined
- Individual messages can now be excluded in ruleset.xml files using the exclude tag (request #20091)
  -- Setting message severity to 0 continues to be supported
- Squiz OperatorSpacingSniff no longer throws errors for the ?: short ternary operator
  -- Thanks to Antoine Musso for the patch
- Comment parser now supports non-English characters when splitting comment lines into words
  -- Thanks to Nik Sun for the patch
- Exit statements are now recognised as valid closers for CASE and DEFAULT blocks
  -- Thanks to Maksim Kochkin for the patch
- PHP_CodeSniffer_CLI::process() can now be passed an incomplete array of CLI values
  -- Missing values will be set to the CLI defaults
  -- Thanks to Maksim Kochkin for the patch
- Fixed bug #20093 : Bug with ternary operator token
- Fixed bug #20097 : CLI.php throws error in php 5.2
- Fixed bug #20100 : incorrect Function mysql() has been deprecated report
- Fixed bug #20119 : PHP warning: invalid argument to str_repeat() in SVN blame report with -s
- Fixed bug #20123 : PSR2 complains about an empty second statement in for-loop
- Fixed bug #20131 : PHP errors in svnblame report, if there are files not under version control
- Fixed bug #20133 : Allow &quot;HG: hg_id&quot; as value for @version tag
   </notes>
  </release>
  <release>
   <version>
    <release>1.5.0RC4</release>
    <api>1.5.0RC4</api>
   </version>
   <stability>
    <release>beta</release>
    <api>beta</api>
   </stability>
   <date>2013-09-26</date>
   <license uri="https://github.com/squizlabs/PHP_CodeSniffer/blob/master/licence.txt">BSD License</license>
   <notes>
- You can now restrict violations to individual sniff codes using the --sniffs command line argument
 -- Previously, this only restricted violations to an entire sniff and not individual messages
 -- If you have scripts calling PHP_CodeSniffer::process() or creating PHP_CodeSniffer_File objects, you must update your code
 -- The array of restrictions passed to PHP_CodeSniffer::process() must now be an array of sniff codes instead of class names
 -- The PHP_CodeSniffer_File::__construct() method now requires an array of restrictions to be passed
- Doc generation is now working again
- Progress information now shows the percentage complete at the end of each line
- Added report type --report=junit to show the error list in a JUnit compatible format
  -- Thanks to Oleg Lobach for the contribution
- Added support for the PHP 5.4 callable type hint
- Fixed problem where some file content could be ignored when checking STDIN
- Version information is now printed when installed via composer or run from a Git clone (request #20050)
- Added Squiz DisallowBooleanStatementSniff to ban boolean operators outside of control structure conditions
- The CSS tokenizer is now more reliable when encountering &apos;list&apos; and &apos;break&apos; strings
- Coding standard ignore comments can now appear instead doc blocks as well as inline comments
  -- Thanks to Stuart Langley for the patch
- Generic LineLengthSniff now ignores SVN URL and Head URL comments
  -- Thanks to Karl DeBisschop for the patch
- PEAR MultiLineConditionSniff now has a setting to specify how many spaces code should be indented
  -- Default remains at 4; override the &apos;indent&apos; setting in a ruleset.xml file to change
  -- Thanks to Szabolcs Sulik for the patch
- PEAR MultiLineAssignmentSniff now has a setting to specify how many spaces code should be indented
  -- Default remains at 4; override the &apos;indent&apos; setting in a ruleset.xml file to change
  -- Thanks to Szabolcs Sulik for the patch
- PEAR FunctionDeclarationSniff now has a setting to specify how many spaces code should be indented
  -- Default remains at 4; override the &apos;indent&apos; setting in a ruleset.xml file to change
  -- Thanks to Szabolcs Sulik for the patch
- Squiz SwitchDeclarationSniff now has a setting to specify how many spaces code should be indented
  -- Default remains at 4; override the &apos;indent&apos; setting in a ruleset.xml file to change
  -- Thanks to Szabolcs Sulik for the patch
- Squiz CSS IndentationSniff now has a setting to specify how many spaces code should be indented
  -- Default remains at 4; override the &apos;indent&apos; setting in a ruleset.xml file to change
  -- Thanks to Hugo Fonseca for the patch
- Squiz and MySource File and Function comment sniffs now allow all tags and don&apos;t require a particular licence
- Squiz standard now allows lines to be 120 characters long before warning; up from 85
- Squiz LowercaseStyleDefinitionSniff no longer throws errors for class names in nested style definitions
- Squiz ClassFileNameSniff no longer throws errors when checking STDIN
- Squiz CSS sniffs no longer generate errors for IE filters
- Squiz CSS IndentationSniff no longer sees comments as blank lines
- Squiz LogicalOperatorSpacingSniff now ignores whitespace at the end of a line
- Squiz.Scope.MethodScope.Missing error message now mentions &apos;visibility&apos; instead of &apos;scope modifier&apos;
  -- Thanks to Renat Akhmedyanov for the patch
- Added support for the PSR2 multi-line arguments errata
- The PSR2 standard no longer throws errors for additional spacing after a type hint
- PSR UseDeclarationSniff no longer throws errors for USE statements inside TRAITs
- Fixed cases where code was incorrectly assigned the T_GOTO_LABEL token when used in a complex CASE condition
- Fixed bug #20026 : Check for multi-line arrays that should be single-line is slightly wrong
  -- Adds new error message for single-line arrays that end with a comma
- Fixed bug #20029 : ForbiddenFunction sniff incorrectly recognizes methods in USE clauses
- Fixed bug #20043 : Mis-interpretation of Foo::class
- Fixed bug #20044 : PSR1 camelCase check does not ignore leading underscores
- Fixed bug #20045 : Errors about indentation for closures with multi-line &apos;use&apos; in functions
- Fixed bug #20051 : Undefined index: scope_opener / scope_closer
  -- Thanks to Anthon Pang for the patch
   </notes>
  </release>
  <release>
   <version>
    <release>1.5.0RC3</release>
    <api>1.5.0RC3</api>
   </version>
   <stability>
    <release>beta</release>
    <api>beta</api>
   </stability>
   <date>2013-07-25</date>
   <license uri="https://github.com/squizlabs/PHP_CodeSniffer/blob/master/licence.txt">BSD License</license>
   <notes>
- Added report type --report=json to show the error list and total counts for all checked files
  -- Thanks to Jeffrey Fisher for the contribution
- PHP_CodeSniffer::isCamelCaps now allows for acronyms at the start of a string if the strict flag is FALSE
  -- acronyms are defined as at least 2 uppercase characters in a row
  -- e.g., the following is now valid camel caps with strict set to FALSE: XMLParser
- The PHP tokenizer now tokenizes goto labels as T_GOTO_LABEL instead of T_STRING followed by T_COLON
- The JS tokenizer now has support for the T_THROW token
- Symlinked directories inside CodeSniffer/Standards and in ruleset.xml files are now supported
  -- Only available since PHP 5.2.11 and 5.3.1
  -- Thanks to Maik Penz for the patch
- The JS tokenizer now correctly identifies T_INLINE_ELSE tokens instead of leaving them as T_COLON
  -- Thanks to Arnout Boks for the patch
- Explaining a standard (phpcs -e) that uses namespaces now works correctly
- Restricting a check to specific sniffs (phpcs --sniffs=...) now works correctly with namespaced sniffs
  -- Thanks to Maik Penz for the patch
- Docs added for the entire Generic standard, and many sniffs from other standards are now documented as well
  -- Thanks to Spencer Rinehart for the contribution
- Clearer error message for when the sniff class name does not match the directory structure
- Generated HTML docs now correctly show the open PHP tag in code comparison blocks
- Added Generic InlineHTMLSniff to ensure a file only contains PHP code
- Added Squiz ShorthandSizeSniff to check that CSS sizes are using shorthand notation only when 1 or 2 values are used
- Added Squiz ForbiddenStylesSniff to ban the use of some deprecated browser-specific styles
- Added Squiz NamedColoursSniff to ban the use of colour names
- PSR2 standard no longer enforces no whitespace between the closing parenthesis of a function call and the semicolon
- PSR2 ClassDeclarationSniff now ignores empty classes when checking the end brace position
- PSR2 SwitchDeclarationSniff no longer reports errors for empty lines between CASE statements
- PEAR ObjectOperatorIndentSniff now has a setting to specify how many spaces code should be indented
  -- Default remains at 4; override the indent setting in a ruleset.xml file to change
  -- Thanks to Andrey Mindubaev for the patch
- Squiz FileExtensionSniff now supports traits
  -- Thanks to Lucas Green for the patch
- Squiz ArrayDeclarationSniff no longer reports errors for no comma at the end of a line that contains a function call
- Squiz SwitchDeclarationSniff now supports T_CONTINUE and T_THROW as valid case/default breaking statements
- Squiz CommentedOutCodeSniff is now better at ignoring commented out HTML, XML and regular expressions
- Squiz DisallowComparisonAssignmentSniff no longer throws errors for the third expression in a FOR statement
- Squiz ColourDefinitionSniff no longer throws errors for some CSS class names
- Squiz ControlStructureSpacingSniff now supports all types of CASE/DEFAULT breaking statements
- Generic CallTimePassByReferenceSniff now reports errors for functions called using a variable
  -- Thanks to Maik Penz for the patch
- Generic ConstructorNameSniff no longer throws a notice for abstract constructors inside abstract classes
  -- Thanks to Spencer Rinehart for the patch
- Squiz ComparisonOperatorUsageSniff now checks inside elseif statements
  -- Thanks to Arnout Boks for the patch
- Squiz OperatorSpacingSniff now reports errors for no spacing around inline then and else tokens
  -- Thanks to Arnout Boks for the patch
- Fixed bug #19811 : Comments not ignored in all cases in AbstractPatternSniff
  -- Thanks to Erik Wiffin for the patch
- Fixed bug #19892 : ELSE with no braces causes incorrect SWITCH break statement indentation error
- Fixed bug #19897 : Indenting warnings in templates not consistent
- Fixed bug #19908 : PEAR MultiLineCondition Does Not Apply elseif
- Fixed bug #19930 : option --report-file generate an empty file
- Fixed bug #19935 : notify-send reports do not vanish in gnome-shell
  -- Thanks to Christian Weiske for the patch
- Fixed bug #19944 : docblock squiz sniff &quot;return void&quot; trips over return in lambda function
- Fixed bug #19953 : PSR2 - Spaces before interface name for abstract class
- Fixed bug #19956 : phpcs warns for Type Hint missing Resource
- Fixed bug #19957 : Does not understand trait method aliasing
- Fixed bug #19968 : Permission denied on excluded directory
- Fixed bug #19969 : Sniffs with namespace not recognized in reports
- Fixed bug #19997 : Class names incorrectly detected as constants
   </notes>
  </release>
  <release>
   <version>
    <release>1.5.0RC2</release>
    <api>1.5.0RC2</api>
   </version>
   <stability>
    <release>beta</release>
    <api>beta</api>
   </stability>
   <date>2013-04-04</date>
   <license uri="https://github.com/squizlabs/PHP_CodeSniffer/blob/master/licence.txt">BSD License</license>
   <notes>
- Ruleset processing has been rewritten to be more predictable
  -- Provides much better support for relative paths inside ruleset files
  -- May mean that sniffs that were previously ignored are now being included when importing external rulesets
  -- Ruleset processing output can be seen by using the -vv command line argument
  -- Internal sniff registering functions have all changed, so please review custom scripts
- You can now pass multiple coding standards on the command line, comma separated (request #19144)
  -- Works with built-in or custom standards and rulesets, or a mix of both
- You can now exclude directories or whole standards in a ruleset XML file (request #19731)
  -- e.g., exclude &quot;Generic.Commenting&quot; or just &quot;Generic&quot;
  -- You can also pass in a path to a directory instead, if you know it
- Added Generic LowerCaseKeywordSniff to ensure all PHP keywords are defined in lowercase
  -- The PSR2 and Squiz standards now use this sniff
- Added Generic SAPIUsageSniff to ensure the PHP_SAPI constant is used instead of php_sapi_name() (request #19863)
- Squiz FunctionSpacingSniff now has a setting to specify how many lines there should between functions (request #19843)
  -- Default remains at 2
  -- Override the &quot;spacing&quot; setting in a ruleset.xml file to change
- Squiz LowercasePHPFunctionSniff no longer throws errors for the limited set of PHP keywords it was checking
  -- Add a rule for Generic.PHP.LowerCaseKeyword to your ruleset to replicate this functionality
- Added support for the PHP 5.4 T_CALLABLE token so it can be used in lower PHP versions
- Generic EndFileNoNewlineSniff now supports checking of CSS and JS files
- PSR2 SwitchDeclarationSniff now has a setting to specify how many spaces code should be indented
  -- Default remains at 4; override the indent setting in a ruleset.xml file to change
  -- Thanks to Asher Snyder for the patch
- Generic ScopeIndentSniff now has a setting to specify a list of tokens that should be ignored
  -- The first token on the line is checked and the whole line is ignored if the token is in the array
  -- Thanks to Eloy Lafuente for the patch
- Squiz LowercaseClassKeywordsSniff now checks for the TRAIT keyword
  -- Thanks to Anthon Pang for the patch
- If you create your own PHP_CodeSniffer object, PHPCS will no longer exit when an unknown argument is found
  -- This allows you to create wrapper scripts for PHPCS more easily
- PSR2 MethodDeclarationSniff no longer generates a notice for methods named &quot;_&quot;
  -- Thanks to Bart S for the patch
- Squiz BlockCommentSniff no longer reports that a blank line between a scope closer and block comment is invalid
- Generic DuplicateClassNameSniff no longer reports an invalid error if multiple PHP open tags exist in a file
- Generic DuplicateClassNameSniff no longer reports duplicate errors if multiple PHP open tags exist in a file
- Fixed bug #19819 : Freeze with syntax error in use statement
- Fixed bug #19820 : Wrong message level in Generic_Sniffs_CodeAnalysis_EmptyStatementSniff
- Fixed bug #19859 : CodeSniffer::setIgnorePatterns API changed
- Fixed bug #19871 : findExtendedClassName doesn&apos;t return FQCN on namespaced classes
- Fixed bug #19879 : bitwise and operator interpreted as reference by value
   </notes>
  </release>
  <release>
   <version>
    <release>1.5.0RC1</release>
    <api>1.5.0RC1</api>
   </version>
   <stability>
    <release>beta</release>
    <api>beta</api>
   </stability>
   <date>2013-02-08</date>
   <license uri="https://github.com/squizlabs/PHP_CodeSniffer/blob/master/licence.txt">BSD License</license>
   <notes>
- Reports have been completely rewritten to consume far less memory
  -- Each report is incrementally written to the file system during a run and then printed out when the run ends
  -- There is no longer a need to keep the list of errors and warnings in memory during a run
- Multi-file sniff support has been removed because they are too memory intensive
  -- If you have a custom multi-file sniff, you can convert it into a standard sniff quite easily
  -- See CodeSniffer/Standards/Generic/Sniffs/Classes/DuplicateClassNameSniff.php for an example
   </notes>
  </release>
  <release>
   <version>
    <release>1.4.8</release>
    <api>1.4.8</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <date>2013-11-26</date>
   <license uri="https://github.com/squizlabs/PHP_CodeSniffer/blob/master/licence.txt">BSD License</license>
   <notes>
- Generic ScopeIndentSniff now allows for ignored tokens to be set via ruleset.xml files
  -- E.g., to ignore comments, override a property using:
  -- name=&quot;ignoreIndentationTokens&quot; type=&quot;array&quot; value=&quot;T_COMMENT,T_DOC_COMMENT&quot;
- PSR2 standard now ignores comments when checking indentation rules
- Squiz OperatorSpacingSniff no longer throws errors for the ?: short ternary operator
  -- Thanks to Antoine Musso for the patch
- Comment parser now supports non-English characters when splitting comment lines into words
  -- Thanks to Nik Sun for the patch
- Exit statements are now recognised as valid closers for CASE and DEFAULT blocks
  -- Thanks to Maksim Kochkin for the patch
- PHP_CodeSniffer_CLI::process() can now be passed an incomplete array of CLI values
  -- Missing values will be set to the CLI defaults
  -- Thanks to Maksim Kochkin for the patch
- Fixed bug #20097 : CLI.php throws error in php 5.2
- Fixed bug #20100 : incorrect Function mysql() has been deprecated report
- Fixed bug #20119 : PHP warning: invalid argument to str_repeat() in SVN blame report with -s
- Fixed bug #20123 : PSR2 complains about an empty second statement in for-loop
- Fixed bug #20131 : PHP errors in svnblame report, if there are files not under version control
- Fixed bug #20133 : Allow &quot;HG: hg_id&quot; as value for @version tag
   </notes>
  </release>
  <release>
   <version>
    <release>1.4.7</release>
    <api>1.4.7</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <date>2013-09-26</date>
   <license uri="https://github.com/squizlabs/PHP_CodeSniffer/blob/master/licence.txt">BSD License</license>
   <notes>
- Added report type --report=junit to show the error list in a JUnit compatible format
  -- Thanks to Oleg Lobach for the contribution
- Added support for the PHP 5.4 callable type hint
- Fixed problem where some file content could be ignored when checking STDIN
- Version information is now printed when installed via composer or run from a Git clone (request #20050)
- The CSS tokenizer is now more reliable when encountering &apos;list&apos; and &apos;break&apos; strings
- Coding standard ignore comments can now appear instead doc blocks as well as inline comments
  -- Thanks to Stuart Langley for the patch
- Generic LineLengthSniff now ignores SVN URL and Head URL comments
  -- Thanks to Karl DeBisschop for the patch
- PEAR MultiLineConditionSniff now has a setting to specify how many spaces code should be indented
  -- Default remains at 4; override the &apos;indent&apos; setting in a ruleset.xml file to change
  -- Thanks to Szabolcs Sulik for the patch
- PEAR MultiLineAssignmentSniff now has a setting to specify how many spaces code should be indented
  -- Default remains at 4; override the &apos;indent&apos; setting in a ruleset.xml file to change
  -- Thanks to Szabolcs Sulik for the patch
- PEAR FunctionDeclarationSniff now has a setting to specify how many spaces code should be indented
  -- Default remains at 4; override the &apos;indent&apos; setting in a ruleset.xml file to change
  -- Thanks to Szabolcs Sulik for the patch
- Squiz SwitchDeclarationSniff now has a setting to specify how many spaces code should be indented
  -- Default remains at 4; override the &apos;indent&apos; setting in a ruleset.xml file to change
  -- Thanks to Szabolcs Sulik for the patch
- Squiz CSS IndentationSniff now has a setting to specify how many spaces code should be indented
  -- Default remains at 4; override the &apos;indent&apos; setting in a ruleset.xml file to change
  -- Thanks to Hugo Fonseca for the patch
- Squiz and MySource File and Function comment sniffs now allow all tags and don&apos;t require a particular licence
- Squiz LowercaseStyleDefinitionSniff no longer throws errors for class names in nested style definitions
- Squiz ClassFileNameSniff no longer throws errors when checking STDIN
- Squiz CSS sniffs no longer generate errors for IE filters
- Squiz CSS IndentationSniff no longer sees comments as blank lines
- Squiz LogicalOperatorSpacingSniff now ignores whitespace at the end of a line
- Squiz.Scope.MethodScope.Missing error message now mentions &apos;visibility&apos; instead of &apos;scope modifier&apos;
  -- Thanks to Renat Akhmedyanov for the patch
- Added support for the PSR2 multi-line arguments errata
- The PSR2 standard no longer throws errors for additional spacing after a type hint
- PSR UseDeclarationSniff no longer throws errors for USE statements inside TRAITs
- Fixed bug #20026 : Check for multi-line arrays that should be single-line is slightly wrong
  -- Adds new error message for single-line arrays that end with a comma
- Fixed bug #20029 : ForbiddenFunction sniff incorrectly recognizes methods in USE clauses
- Fixed bug #20043 : Mis-interpretation of Foo::class
- Fixed bug #20044 : PSR1 camelCase check does not ignore leading underscores
- Fixed bug #20045 : Errors about indentation for closures with multi-line &apos;use&apos; in functions
   </notes>
  </release>
  <release>
   <version>
    <release>1.4.6</release>
    <api>1.4.6</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <date>2013-07-25</date>
   <license uri="https://github.com/squizlabs/PHP_CodeSniffer/blob/master/licence.txt">BSD License</license>
   <notes>
- Added report type --report=json to show the error list and total counts for all checked files
  -- Thanks to Jeffrey Fisher for the contribution
- The JS tokenizer now has support for the T_THROW token
- Symlinked directories inside CodeSniffer/Standards and in ruleset.xml files are now supported
  -- Only available since PHP 5.2.11 and 5.3.1
  -- Thanks to Maik Penz for the patch
- The JS tokenizer now correctly identifies T_INLINE_ELSE tokens instead of leaving them as T_COLON
  -- Thanks to Arnout Boks for the patch
- Explaining a standard (phpcs -e) that uses namespaces now works correctly
- Restricting a check to specific sniffs (phpcs --sniffs=...) now works correctly with namespaced sniffs
  -- Thanks to Maik Penz for the patch
- Docs added for the entire Generic standard, and many sniffs from other standards are now documented as well
  -- Thanks to Spencer Rinehart for the contribution
- Clearer error message for when the sniff class name does not match the directory structure
- Generated HTML docs now correctly show the open PHP tag in code comparison blocks
- Added Generic InlineHTMLSniff to ensure a file only contains PHP code
- Added Squiz ShorthandSizeSniff to check that CSS sizes are using shorthand notation only when 1 or 2 values are used
- Added Squiz ForbiddenStylesSniff to ban the use of some deprecated browser-specific styles
- Added Squiz NamedColoursSniff to ban the use of colour names
- PSR2 standard no longer enforces no whitespace between the closing parenthesis of a function call and the semicolon
- PSR2 ClassDeclarationSniff now ignores empty classes when checking the end brace position
- PSR2 SwitchDeclarationSniff no longer reports errors for empty lines between CASE statements
- PEAR ObjectOperatorIndentSniff now has a setting to specify how many spaces code should be indented
  -- Default remains at 4; override the indent setting in a ruleset.xml file to change
  -- Thanks to Andrey Mindubaev for the patch
- Squiz FileExtensionSniff now supports traits
  -- Thanks to Lucas Green for the patch
- Squiz ArrayDeclarationSniff no longer reports errors for no comma at the end of a line that contains a function call
- Squiz SwitchDeclarationSniff now supports T_CONTINUE and T_THROW as valid case/default breaking statements
- Squiz CommentedOutCodeSniff is now better at ignoring commented out HTML, XML and regular expressions
- Squiz DisallowComparisonAssignmentSniff no longer throws errors for the third expression in a FOR statement
- Squiz ColourDefinitionSniff no longer throws errors for some CSS class names
- Squiz ControlStructureSpacingSniff now supports all types of CASE/DEFAULT breaking statements
- Generic CallTimePassByReferenceSniff now reports errors for functions called using a variable
  -- Thanks to Maik Penz for the patch
- Generic ConstructorNameSniff no longer throws a notice for abstract constructors inside abstract classes
  -- Thanks to Spencer Rinehart for the patch
- Squiz ComparisonOperatorUsageSniff now checks inside elseif statements
  -- Thanks to Arnout Boks for the patch
- Squiz OperatorSpacingSniff now reports errors for no spacing around inline then and else tokens
  -- Thanks to Arnout Boks for the patch
- Fixed bug #19811 : Comments not ignored in all cases in AbstractPatternSniff
  -- Thanks to Erik Wiffin for the patch
- Fixed bug #19892 : ELSE with no braces causes incorrect SWITCH break statement indentation error
- Fixed bug #19897 : Indenting warnings in templates not consistent
- Fixed bug #19908 : PEAR MultiLineCondition Does Not Apply elseif
- Fixed bug #19913 : Running phpcs in interactive mode causes warnings
  -- Thanks to Harald Franndorfer for the patch
- Fixed bug #19935 : notify-send reports do not vanish in gnome-shell
  -- Thanks to Christian Weiske for the patch
- Fixed bug #19944 : docblock squiz sniff &quot;return void&quot; trips over return in lambda function
- Fixed bug #19953 : PSR2 - Spaces before interface name for abstract class
- Fixed bug #19956 : phpcs warns for Type Hint missing Resource
- Fixed bug #19957 : Does not understand trait method aliasing
- Fixed bug #19968 : Permission denied on excluded directory
- Fixed bug #19969 : Sniffs with namespace not recognized in reports
- Fixed bug #19997 : Class names incorrectly detected as constants
   </notes>
  </release>
  <release>
   <version>
    <release>1.4.5</release>
    <api>1.4.5</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <date>2013-04-04</date>
   <license uri="https://github.com/squizlabs/PHP_CodeSniffer/blob/master/licence.txt">BSD License</license>
   <notes>
- Added Generic LowerCaseKeywordSniff to ensure all PHP keywords are defined in lowercase
  -- The PSR2 and Squiz standards now use this sniff
- Added Generic SAPIUsageSniff to ensure the PHP_SAPI constant is used instead of php_sapi_name() (request #19863)
- Squiz FunctionSpacingSniff now has a setting to specify how many lines there should between functions (request #19843)
  -- Default remains at 2
  -- Override the &quot;spacing&quot; setting in a ruleset.xml file to change
- Squiz LowercasePHPFunctionSniff no longer throws errors for the limited set of PHP keywords it was checking
  -- Add a rule for Generic.PHP.LowerCaseKeyword to your ruleset to replicate this functionality
- Added support for the PHP 5.4 T_CALLABLE token so it can be used in lower PHP versions
- Generic EndFileNoNewlineSniff now supports checking of CSS and JS files
- PSR2 SwitchDeclarationSniff now has a setting to specify how many spaces code should be indented
  -- Default remains at 4; override the indent setting in a ruleset.xml file to change
  -- Thanks to Asher Snyder for the patch
- Generic ScopeIndentSniff now has a setting to specify a list of tokens that should be ignored
  -- The first token on the line is checked and the whole line is ignored if the token is in the array
  -- Thanks to Eloy Lafuente for the patch
- Squiz LowercaseClassKeywordsSniff now checks for the TRAIT keyword
  -- Thanks to Anthon Pang for the patch
- If you create your own PHP_CodeSniffer object, PHPCS will no longer exit when an unknown argument is found
  -- This allows you to create wrapper scripts for PHPCS more easily
- PSR2 MethodDeclarationSniff no longer generates a notice for methods named &quot;_&quot;
  -- Thanks to Bart S for the patch
- Squiz BlockCommentSniff no longer reports that a blank line between a scope closer and block comment is invalid
- Generic DuplicateClassNameSniff no longer reports an invalid error if multiple PHP open tags exist in a file
- Generic DuplicateClassNameSniff no longer reports duplicate errors if multiple PHP open tags exist in a file
- Fixed bug #19819 : Freeze with syntax error in use statement
- Fixed bug #19820 : Wrong message level in Generic_Sniffs_CodeAnalysis_EmptyStatementSniff
- Fixed bug #19859 : CodeSniffer::setIgnorePatterns API changed
- Fixed bug #19871 : findExtendedClassName doesn&apos;t return FQCN on namespaced classes
- Fixed bug #19879 : bitwise and operator interpreted as reference by value
   </notes>
  </release>
  <release>
   <version>
    <release>1.4.4</release>
    <api>1.4.4</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <date>2013-02-07</date>
   <license uri="https://github.com/squizlabs/PHP_CodeSniffer/blob/master/licence.txt">BSD License</license>
   <notes>
- Ignored lines no longer cause the summary report to show incorrect error and warning counts
  -- Thanks to Bert Van Hauwaert for the patch
- Added Generic CSSLintSniff to run CSSLint over a CSS file and report warnings
  -- Set full command to run CSSLint using phpcs --config-set csslint_path /path/to/csslint
  -- Thanks to Roman Levishchenko for the contribution
- Added PSR2 ControlStructureSpacingSniff to ensure there are no spaces before and after parenthesis in control structures
  -- Fixes bug #19732 : PSR2: some control structures errors not reported
- Squiz commenting sniffs now support non-English characters when checking for capital letters
  -- Thanks to Roman Levishchenko for the patch
- Generic EndFileNewlineSniff now supports JS and CSS files
  -- Thanks to Denis Ryabkov for the patch
- PSR1 SideEffectsSniff no longer reports constant declarations as side effects
- Notifysend report now supports notify-send versions before 0.7.3
  -- Thanks to Ken Guest for the patch
- PEAR and Squiz FunctionCommentSniffs no longer report errors for misaligned argument comments when they are blank
  -- Thanks to Thomas Peterson for the patch
- Squiz FunctionDeclarationArgumentSpacingSniff now works correctly for equalsSpacing values greater than 0
  -- Thanks to Klaus Purer for the patch
- Squiz SuperfluousWhitespaceSniff no longer throws errors for CSS files with no newline at the end
- Squiz SuperfluousWhitespaceSniff now allows a single newline at the end of JS and CSS files
- Fixed bug #19755 : Token of T_CLASS type has no scope_opener and scope_closer keys
- Fixed bug #19759 : Squiz.PHP.NonExecutableCode fails for return function()...
- Fixed bug #19763 : Use statements for traits not recognised correctly for PSR2 code style
- Fixed bug #19764 : Instead of for traits throws uppercase constant name errors
- Fixed bug #19772 : PSR2_Sniffs_Namespaces_UseDeclarationSniff does not properly recognize last use
- Fixed bug #19775 : False positive in NonExecutableCode sniff when not using curly braces
- Fixed bug #19782 : Invalid found size functions in loop when using object operator
- Fixed bug #19799 : config folder is not created automatically
- Fixed bug #19804 : JS Tokenizer wrong /**/ parsing
   </notes>
  </release>
  <release>
   <version>
    <release>1.4.3</release>
    <api>1.4.3</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <date>2012-12-04</date>
   <license uri="https://github.com/squizlabs/PHP_CodeSniffer/blob/master/licence.txt">BSD License</license>
   <notes>
- Added support for the PHP 5.5 T_FINALLY token to detect try/catch/finally statements
- Added empty CodeSniffer.conf to enable config settings for Composer installs
- Added Generic EndFileNoNewlineSniff to ensure there is no newline at the end of a file
- Autoloader can now load PSR-0 compliant classes
  -- Thanks to Maik Penz for the patch
- Squiz NonExecutableCodeSniff no longer throws error for multi-line RETURNs inside CASE statements
  -- Thanks to Marc Ypes for the patch
- Squiz OperatorSpacingSniff no longer reports errors for negative numbers inside inline THEN statements
  -- Thanks to Klaus Purer for the patch
- Squiz OperatorSpacingSniff no longer reports errors for the assignment of operations involving negative numbers
- Squiz SelfMemberReferenceSniff can no longer get into an infinite loop when checking a static call with a namespace
  -- Thanks to Andy Grunwald for the patch
- Fixed bug #19699 : Generic.Files.LineLength giving false positives when tab-width is used
- Fixed bug #19726 : Wrong number of spaces expected after instanceof static
  - Fixed bug #19727 : PSR2: no error reported when using } elseif {
   </notes>
  </release>
  <release>
   <version>
    <release>1.4.2</release>
    <api>1.4.2</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <date>2012-11-09</date>
   <license uri="https://github.com/squizlabs/PHP_CodeSniffer/blob/master/licence.txt">BSD License</license>
   <notes>
- PHP_CodeSniffer can now be installed using Composer
  -- Require squizlabs/php_codesniffer in your composer.json file
  -- Thanks to Rob Bast, Stephen Rees-Carter, Stefano Kowalke and Ivan Habunek for help with this
- Squiz BlockCommentSniff and InlineCommentSniff no longer report errors for trait block comments
- Squiz SelfMemberReferenceSniff now supports namespaces
  -- Thanks to Andy Grunwald for the patch
- Squiz FileCommentSniff now uses tag names inside the error codes for many messages
  -- This allows you to exclude specific missing, out of order etc., tags
- Squiz SuperfluousWhitespaceSniff now has an option to ignore blank lines
  -- This will stop errors being reported for lines that contain only whitespace
  -- Set the ignoreBlankLines property to TRUE in your ruleset.xml file to enable this
- PSR2 no longer reports errors for whitespace at the end of blank lines
- Fixed gitblame report not working on Windows
  -- Thanks to Rogerio Prado de Jesus
- Fixed an incorrect error in Squiz OperatorSpacingSniff for default values inside a closure definition
- Fixed bug #19691 : SubversionPropertiesSniff fails to find missing properties
  -- Thanks to Kevin Winahradsky for the patch
- Fixed bug #19692 : DisallowMultipleAssignments is triggered by a closure
- Fixed bug #19693 : exclude-patterns no longer work on specific messages
- Fixed bug #19694 : Squiz.PHP.LowercasePHPFunctions incorrectly matches return by ref functions
   </notes>
  </release>
  <release>
   <version>
    <release>1.4.1</release>
    <api>1.4.1</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <date>2012-11-02</date>
   <license uri="https://github.com/squizlabs/PHP_CodeSniffer/blob/master/licence.txt">BSD License</license>
   <notes>
- All ignore patterns have been reverted to being checked against the absolute path of a file
  -- Patterns can be specified to be relative in a ruleset.xml file, but nowhere else
  -- e.g., [exclude-pattern type=&quot;relative&quot;]^tests/*[/exclude-pattern] (with angle brackets, not square brackets)
- Added support for PHP tokenizing of T_INLINE_ELSE colons, so this token type is now available
  -- Custom sniffs that rely on looking for T_COLON tokens inside inline if statements must be changed to use the new token
  -- Fixes bug #19666 : PSR1.Files.SideEffects throws a notice Undefined index: scope_closer
- Messages can now be changed from errors to warnings (and vice versa) inside ruleset.xml files
  -- As you would with &quot;message&quot; and &quot;severity&quot;, specify a &quot;type&quot; tag under a &quot;rule&quot; tag and set the value to &quot;error&quot; or &quot;warning&quot;
- PHP_CodeSniffer will now generate a warning on files that it detects have mixed line endings
  -- This warning has the code Internal.LineEndings.Mixed and can be overridden in a ruleset.xml file
  -- Thanks to Vit Brunner for help with this
- Sniffs inside PHP 5.3 namespaces are now supported, along with the existing underscore-style emulated namespaces
  -- For example: namespace MyStandard\Sniffs\Arrays; class ArrayDeclarationSniff implements \PHP_CodeSniffer_Sniff { ...
  -- Thanks to Till Klampaeckel for the patch
- Generic DuplicateClassNameSniff is no longer a multi-file sniff, so it won&apos;t max out your memory
  -- Multi-file sniff support should be considered deprecated as standard sniffs can now do the same thing
- Added Generic DisallowSpaceIndent to check that files are indented using tabs
- Added Generic OneClassPerFileSniff to check that only one class is defined in each file
  -- Thanks to Andy Grunwald for the contribution
- Added Generic OneInterfacePerFileSniff to check that only one interface is defined in each file
  -- Thanks to Andy Grunwald for the contribution
- Added Generic LowercasedFilenameSniff to check that filenames are lowercase
  -- Thanks to Andy Grunwald for the contribution
- Added Generic ClosingPHPTagSniff to check that each open PHP tag has a corresponding close tag
  -- Thanks to Andy Grunwald for the contribution
- Added Generic CharacterBeforePHPOpeningTagSniff to check that the open PHP tag is the first content in a file
  -- Thanks to Andy Grunwald for the contribution
- Fixed incorrect errors in Squiz OperatorBracketSniff and OperatorSpacingSniff for negative numbers in CASE statements
  -- Thanks to Arnout Boks for the patch
- Generic CamelCapsFunctionNameSniff no longer enforces exact case matching for PHP magic methods
- Generic CamelCapsFunctionNameSniff no longer throws errors for overridden SOAPClient methods prefixed with double underscores
  -- Thanks to Dorian Villet for the patch
- PEAR ValidFunctionNameSniff now supports traits
- PSR1 ClassDeclarationSniff no longer throws an error for non-namespaced code if PHP version is less than 5.3.0
- Fixed bug #19616 : Nested switches cause false error in PSR2
- Fixed bug #19629 : PSR2 error for inline comments on multi-line argument lists
- Fixed bug #19644 : Alternative syntax, e.g. if/endif triggers Inline Control Structure error
- Fixed bug #19655 : Closures reporting as multi-line when they are not
- Fixed bug #19675 : Improper indent of nested anonymous function bodies in a call
- Fixed bug #19685 : PSR2 catch-22 with empty third statement in for loop
- Fixed bug #19687 : Anonymous functions inside arrays marked as indented incorrectly in PSR2
   </notes>
  </release>
  <release>
   <version>
    <release>1.4.0</release>
    <api>1.4.0</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <date>2012-09-26</date>
   <license uri="https://github.com/squizlabs/PHP_CodeSniffer/blob/master/licence.txt">BSD License</license>
   <notes>
- Added PSR1 and PSR2 coding standards that can be used to check your code against these guidelines
- PHP 5.4 short array syntax is now detected and tokens are assigned to the open and close characters
  -- New tokens are T_OPEN_SHORT_ARRAY and T_CLOSE_SHORT_ARRAY as PHP does not define its own
- Added the ability to explain a coding standard by listing the sniffs that it includes
  -- The sniff list includes all imported and native sniffs
  -- Explain a standard by using the -e and --standard=[standard] command line arguments
  -- E.g., phpcs -e --standard=Squiz
  -- Thanks to Ben Selby for the idea
- Added report to show results using notify-send
  -- Use --report=notifysend to generate the report
  -- Thanks to Christian Weiske for the contribution
- The JS tokenizer now recognises RETURN as a valid closer for CASE and DEFAULT inside switch statements
- AbstractPatternSniff now sets the ignoreComments option using a public var rather than through the constructor
  -- This allows the setting to be overwritten in ruleset.xml files
  -- Old method remains for backwards compatibility
- Generic LowerCaseConstantSniff and UpperCaseConstantSniff no longer report errors on classes named True, False or Null
- PEAR ValidFunctionNameSniff no longer enforces exact case matching for PHP magic methods
- Squiz SwitchDeclarationSniff now allows RETURN statements to close a CASE or DEFAULT statement
- Squiz BlockCommentSniff now correctly reports an error for blank lines before blocks at the start of a control structure
- Fixed a PHP notice generated when loading custom array settings from a ruleset.xml file
- Fixed bug #17908 : CodeSniffer does not recognise optional @params
  -- Thanks to Pete Walker for the patch
- Fixed bug #19538 : Function indentation code sniffer checks inside short arrays
- Fixed bug #19565 : Non-Executable Code Sniff Broken for Case Statements with both return and break
- Fixed bug #19612 : Invalid @package suggestion
   </notes>
  </release>
  <release>
   <version>
    <release>1.3.6</release>
    <api>1.3.6</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <date>2012-08-08</date>
   <license uri="https://github.com/squizlabs/PHP_CodeSniffer/blob/master/licence.txt">BSD License</license>
   <notes>
- Memory usage has been dramatically reduced when using the summary report
  -- Reduced memory is only available when displaying a single summary report to the screen
  -- PHP_CodeSniffer will not generate any messages in this case, storing only error counts instead
  -- Impact is most notable with very high error and warning counts
- Significantly improved the performance of Squiz NonExecutableCodeSniff
- Ignore patterns now check the relative path of a file based on the dir being checked
  -- Allows ignore patterns to become more generic as the path to the code is no longer included when checking
  -- Thanks to Kristof Coomans for the patch
- Sniff settings can now be changed by specifying a special comment format inside a file
  -- e.g., // @codingStandardsChangeSetting PEAR.Functions.FunctionCallSignature allowMultipleArguments false
  -- If you change a setting, don&apos;t forget to change it back
- Added Generic EndFileNewlineSniff to ensure PHP files end with a newline character
- PEAR FunctionCallSignatureSniff now includes a setting to force one argument per line in multi-line calls
  -- Set allowMultipleArguments to false
- Squiz standard now enforces one argument per line in multi-line function calls
- Squiz FunctionDeclarationArgumentSpacingSniff now supports closures
- Squiz OperatorSpacingSniff no longer throws an error for negative values inside an inline THEN statement
  -- Thanks to Klaus Purer for the patch
- Squiz FunctionCommentSniff now throws an error for not closing a comment with */
  -- Thanks to Klaus Purer for the patch
- Summary report no longer shows two lines of PHP_Timer output when showing sources
- Fixed undefined variable error in PEAR FunctionCallSignatureSniff for lines with no indent
- Fixed bug #19502 : Generic.Files.LineEndingsSniff fails if no new-lines in file
- Fixed bug #19508 : switch+return: Closing brace indented incorrectly
- Fixed bug #19532 : The PSR-2 standard don&apos;t recognize Null in class names
- Fixed bug #19546 : Error thrown for __call() method in traits
   </notes>
  </release>
  <release>
   <version>
    <release>1.3.5</release>
    <api>1.3.5</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <date>2012-07-12</date>
   <license uri="https://github.com/squizlabs/PHP_CodeSniffer/blob/master/licence.txt">BSD License</license>
   <notes>
- Added Generic CamelCapsFunctionNameSniff to just check if function and method names use camel caps
  -- Does not allow underscore prefixes for private/protected methods
  -- Defaults to strict checking, where two uppercase characters can not be next to each other
  -- Strict checking can be disabled in a ruleset.xml file
- Squiz FunctionDeclarationArgumentSpacing now has a setting to specify how many spaces should surround equals signs
  -- Default remains at 0
  -- Override the equalsSpacing setting in a ruleset.xml file to change
- Squiz ClassDeclarationSniff now throws errors for &gt; 1 space before extends/implements class name with ns separator
- Squiz standard now warns about deprecated functions using Generic DeprecatedFunctionsSniff
- PEAR FunctionDeclarationSniff now reports an error for multiple spaces after the FUNCTION keyword and around USE
- PEAR FunctionDeclarationSniff now supports closures
- Squiz MultiLineFunctionDeclarationSniff now supports closures
- Exclude rules written for Unix systems will now work correctly on Windows
  -- Thanks to Walter Tamboer for the patch
- The PHP tokenizer now recognises T_RETURN as a valid closer for T_CASE and T_DEFAULT inside switch statements
- Fixed duplicate message codes in Generic OpeningFunctionBraceKernighanRitchieSniff
- Fixed bug #18651 : PHPunit Test cases for custom standards are not working on Windows
- Fixed bug #19416 : Shorthand arrays cause bracket spacing errors
- Fixed bug #19421 : phpcs doesn&apos;t recognize ${x} as equivalent to $x
- Fixed bug #19428 : PHPCS Report &quot;hgblame&quot; doesn&apos;t support windows paths
  -- Thanks to Justin Rovang for the patch
- Fixed bug #19448 : Problem with detecting remote standards
- Fixed bug #19463 : Anonymous functions incorrectly being flagged by NonExecutableCodeSniff
- Fixed bug #19469 : PHP_CodeSniffer_File::getMemberProperties() sets wrong scope
- Fixed bug #19471 : phpcs on Windows, when using Zend standard, doesn&apos;t catch problems
  -- Thanks to Ivan Habunek for the patch
- Fixed bug #19478 : Incorrect indent detection in PEAR standard
  -- Thanks to Shane Auckland for the patch
- Fixed bug #19483 : Blame Reports fail with space in directory name
   </notes>
  </release>
  <release>
   <version>
    <release>1.3.4</release>
    <api>1.3.4</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <date>2012-05-17</date>
   <license uri="https://github.com/squizlabs/PHP_CodeSniffer/blob/master/licence.txt">BSD License</license>
   <notes>
- Added missing package.xml entries for new Generic FixmeSniff
  -- Thanks to Jaroslav Hanslík for the patch
- Expected indents for PEAR ScopeClosingBraceSniff and FunctionCallSignatureSniff can now be set in ruleset files
  -- Both sniffs use a variable called &quot;indent&quot;
  -- Thanks to Thomas Despoix for the patch
- Standards designed to be installed in the PHPCS Standards dir will now work outside this dir as well
  -- In particular, allows the Drupal CS to work without needing to symlink it into the PHPCS install
  -- Thanks to Peter Philipp for the patch
- Rule references for standards, directories and specific sniffs can now be relative in ruleset.xml files
  -- For example: ref=&quot;../MyStandard/Sniffs/Commenting/DisallowHashCommentsSniff.php&quot;
- Symlinked standards now work correctly, allowing aliasing of installed standards (request #19417)
  -- Thanks to Tom Klingenberg for the patch
- Squiz ObjectInstantiationSniff now allows objects to be returned without assigning them to a variable
- Added Squiz.Commenting.FileComment.MissingShort error message for file comments that only contains tags
  -- Also stops undefined index errors being generated for these comments
- Debug option -vv now shows tokenizer status for CSS files
- Added support for new gjslint error formats
  -- Thanks to Meck for the patch
- Generic ScopeIndentSniff now allows comment indents to not be exact even if the exact flag is set
  -- The start of the comment is still checked for exact indentation as normal
- Fixed an issue in AbstractPatternSniff where comments were not being ignored in some cases
- Fixed an issue in Zend ClosingTagSniff where the closing tag was not always being detected correctly
  -- Thanks to Jonathan Robson for the patch
- Fixed an issue in Generic FunctionCallArgumentSpacingSniff where closures could cause incorrect errors
- Fixed an issue in Generic UpperCaseConstantNameSniff where errors were incorrectly reported on goto statements
  -- Thanks to Tom Klingenberg for the patch
- PEAR FileCommentSniff and ClassCommentSniff now support author emails with a single character in the local part
  -- E.g., a@me.com
  -- Thanks to Denis Shapkin for the patch
- Fixed bug #19290 : Generic indent sniffer fails for anonymous functions
- Fixed bug #19324 : Setting show_warnings configuration option does not work
- Fixed bug #19354 : Not recognizing references passed to method
- Fixed bug #19361 : CSS tokenizer generates errors when PHP embedded in CSS file
- Fixed bug #19374 : HEREDOC/NOWDOC Indentation problems
- Fixed bug #19381 : traits and indentations in traits are not handled properly
- Fixed bug #19394 : Notice in NonExecutableCodeSniff
- Fixed bug #19402 : Syntax error when executing phpcs on Windows with parens in PHP path
  -- Thanks to Tom Klingenberg for the patch
- Fixed bug #19411 : magic method error on __construct()
  -- The fix required a rewrite of AbstractScopeSniff, so please test any sniffs that extend this class
- Fixed bug #19412 : Incorrect error about assigning objects to variables when inside inline IF
- Fixed bug #19413 : php_cs thinks I haven&apos;t used a parameter when I have
- Fixed bug #19414 : php_cs seems to not track variables correctly in heredocs
   </notes>
  </release>
  <release>
   <version>
    <release>1.3.3</release>
    <api>1.3.3</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <date>2012-02-17</date>
   <license uri="https://github.com/squizlabs/PHP_CodeSniffer/blob/master/licence.txt">BSD License</license>
   <notes>
- Added new Generic FixmeSniff that shows error messages for all FIXME comments left in your code
  -- Thanks to Sam Graham for the contribution
- The maxPercentage setting in the Squiz CommentedOutCodeSniff can now be overridden in a ruleset.xml file
  -- Thanks to Volker Dusch for the patch
- The Checkstyle and XML reports now use XMLWriter
  -- Only change in output is that empty file tags are no longer produced for files with no violations
  -- Thanks to Sebastian Bergmann for the patch
- Added PHP_CodeSniffer_Tokens::$bracketTokens to give sniff writers fast access to open and close bracket tokens
- Fixed an issue in AbstractPatternSniff where EOL tokens were not being correctly checked in some cases
- PHP_CodeSniffer_File::getTokensAsString() now detects incorrect length value (request #19313)
- Fixed bug #19114 : CodeSniffer checks extension even for single file
- Fixed bug #19171 : Show sniff codes option is ignored by some report types
  -- Thanks to Dominic Scheirlinck for the patch
- Fixed bug #19188 : Lots of PHP Notices when analyzing the Symfony framework
  -- First issue was list-style.. lines in CSS files not properly adjusting open/close bracket positions
  -- Second issue was notices caused by bug #19137
- Fixed bug #19208 : UpperCaseConstantName reports class members
  -- Was also a problem with LowerCaseConstantName as well
- Fixed bug #19256 : T_DOC_COMMENT in CSS files breaks ClassDefinitionNameSpacingSniff
  -- Thanks to Klaus Purer for the patch
- Fixed bug #19264 : Squiz.PHP.NonExecutableCode does not handle RETURN in CASE without BREAK
- Fixed bug #19270 : DuplicateClassName does not handle namespaces correctly
- Fixed bug #19283 : CSS @media rules cause false positives
  -- Thanks to Klaus Purer for the patch
   </notes>
  </release>
  <release>
   <version>
    <release>1.3.2</release>
    <api>1.3.2</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <date>2011-12-01</date>
   <license uri="https://github.com/squizlabs/PHP_CodeSniffer/blob/master/licence.txt">BSD License</license>
   <notes>
- Added Generic JSHintSniff to run jshint.js over a JS file and report warnings
  -- Set jshint path using phpcs --config-set jshint_path /path/to/jshint-rhino.js
  -- Set rhino path using phpcs --config-set rhino_path /path/to/rhino
  -- Thanks to Alexander Weiß for the contribution
- Nowdocs are now tokenized using PHP_CodeSniffer specific T_NOWDOC tokens for easier identification
- Generic UpperCaseConstantNameSniff no longer throws errors for namespaces
  -- Thanks to Jaroslav Hanslík for the patch
- Squiz NonExecutableCodeSniff now detects code after thrown exceptions
  -- Thanks to Jaroslav Hanslík for the patch
- Squiz OperatorSpacingSniff now ignores references
  -- Thanks to Jaroslav Hanslík for the patch
- Squiz FunctionCommentSniff now reports a missing function comment if it finds a standard code comment instead
- Squiz FunctionCommentThrownTagSniff no longer reports errors if it can&apos;t find a function comment
- Fixed unit tests not running under Windows
  -- Thanks to Jaroslav Hanslík for the patch
- Fixed bug #18964 : &quot;$stackPtr must be of type T_VARIABLE&quot; on heredocs and nowdocs
- Fixed bug #18973 : phpcs is looking for variables in a nowdoc
- Fixed bug #18974 : Blank line causes &quot;Multi-line function call not indented correctly&quot;
  -- Adds new error message to ban empty lines in multi-line function calls
- Fixed bug #18975 : &quot;Closing parenthesis must be on a line by itself&quot; also causes indentation error
   </notes>
  </release>
  <release>
   <version>
    <release>1.3.1</release>
    <api>1.3.1</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <date>2011-11-03</date>
   <license uri="https://github.com/squizlabs/PHP_CodeSniffer/blob/master/licence.txt">BSD License</license>
   <notes>
- All report file command line arguments now work with relative paths (request #17240)
- The extensions command line argument now supports multi-part file extensions (request #17227)
- Added report type --report=hgblame to show number of errors/warnings committed by authors in a Mercurial repository
  -- Has the same functionality as the svnblame report
  -- Thanks to Ben Selby for the patch
- Added T_BACKTICK token type to make detection of backticks easier (request #18799)
- Added pattern matching support to Generic ForbiddenFunctionsSniff
    -- If you are extending it and overriding register() or addError() you will need to review your sniff
- Namespaces are now recognised as scope openers, although they do not require braces (request #18043)
- Added new ByteOrderMarkSniff to Generic standard (request #18194)
  -- Throws an error if a byte order mark is found in any PHP file
  -- Thanks to Piotr Karas for the contribution
- PHP_Timer output is no longer included in reports when being written to a file (request #18252)
  -- Also now shown for all report types if nothing is being printed to the screen
- Generic DeprecatedFunctionSniff now reports functions as deprecated and not simply forbidden (request #18288)
- PHPCS now accepts file contents from STDIN (request #18447)
  -- Example usage: cat temp.php | phpcs [options]  -OR-  phpcs [options] &lt; temp.php
  -- Not every sniff will work correctly due to the lack of a valid file path
- PHP_CodeSniffer_Exception no longer extends PEAR_Exception (request #18483)
  -- PEAR_Exception added a requirement that PEAR had to be installed
  -- PHP_CodeSniffer is not used as a library, so unlikely to have any impact
- PEAR FileCommentSniff now allows GIT IDs in the version tag (request #14874)
- AbstractVariableSniff now supports heredocs
  -- Also includes some variable detection fixes
  -- Thanks to Sam Graham for the patch
- Squiz FileCommentSniff now enforces rule that package names cannot start with the word Squiz
- MySource AssignThisSniff now allows &quot;this&quot; to be assigned to the private var _self
- Fixed issue in Squiz FileCommentSniff where suggested package name was the same as the incorrect package name
- Fixed some issues with Squiz ArrayDeclarationSniff when using function calls in array values
- Fixed doc generation so it actually works again
  -- Also now works when being run from an SVN checkout as well as when installed as a PEAR package
  -- Should fix bug #18949 : Call to private method from static
- PEAR ClassDeclaration sniff now supports indentation checks when using the alternate namespace syntax
  -- PEAR.Classes.ClassDeclaration.SpaceBeforeBrace message now contains 2 variables instead of 1
  -- Sniff allows overriding of the default indent level, which is set to 4
  -- Fixes bug #18933 : Alternative namespace declaration syntax confuses scope sniffs
- Fixed bug #18465 : &quot;self::&quot; does not work in lambda functions
  -- Also corrects conversion of T_FUNCTION tokens to T_CLOSURE, which was not fixing token condition arrays
- Fixed bug #18543 : CSS Tokenizer deletes too many #
- Fixed bug #18624 : @throws namespace problem
  -- Thanks to Gavin Davies for the patch
- Fixed bug #18628 : Generic.Files.LineLength gives incorrect results with Windows line-endings
- Fixed bug #18633 : CSS Tokenizer doesn&apos;t replace T_LIST tokens inside some styles
- Fixed bug #18657 : anonymous functions wrongly indented
- Fixed bug #18670 : UpperCaseConstantNameSniff fails on dynamic retrieval of class constant
- Fixed bug #18709 : Code sniffer sniffs file if even if it&apos;s in --ignore
  -- Thanks to Artem Lopata for the patch
- Fixed bug #18762 : Incorrect handling of define and constant in UpperCaseConstantNameSniff
  -- Thanks to Thomas Baker for the patch
- Fixed bug #18769 : CSS Tokenizer doesn&apos;t replace T_BREAK tokens inside some styles
- Fixed bug #18835 : Unreachable errors of inline returns of closure functions
  -- Thanks to Patrick Schmidt for the patch
- Fixed bug #18839 : Fix miscount of warnings in AbstractSniffUnitTest.php
  -- Thanks to Sam Graham for the patch
- Fixed bug #18844 : Generic_Sniffs_CodeAnalysis_UnusedFunctionParameterSniff with empty body
  -- Thanks to Dmitri Medvedev for the patch
- Fixed bug #18847 : Running Squiz_Sniffs_Classes_ClassDeclarationSniff results in PHP notice
- Fixed bug #18868 : jslint+rhino: errors/warnings not detected
  -- Thanks to Christian Weiske for the patch
- Fixed bug #18879 : phpcs-svn-pre-commit requires escapeshellarg
  -- Thanks to Bjorn Katuin for the patch
- Fixed bug #18951 : weird behaviour with closures and multi-line use () params
   </notes>
  </release>
  <release>
   <version>
    <release>1.3.0</release>
    <api>1.3.0</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <date>2011-03-17</date>
   <license uri="https://github.com/squizlabs/PHP_CodeSniffer/blob/master/licence.txt">BSD License</license>
   <notes>
- Add a new token T_CLOSURE that replaces T_FUNCTION if the function keyword is anonymous
- Many Squiz sniffs no longer report errors when checking closures; they are now ignored
- Fixed some error messages in PEAR MultiLineConditionSniff that were not using placeholders for message data
- AbstractVariableSniff now correctly finds variable names wrapped with curly braces inside double quoted strings
- PEAR FunctionDeclarationSniff now ignores arrays in argument default values when checking multi-line declarations
- Fixed bug #18200 : Using custom named ruleset file as standard no longer works
- Fixed bug #18196 : PEAR MultiLineCondition.SpaceBeforeOpenBrace not consistent with newline chars
- Fixed bug #18204 : FunctionCommentThrowTag picks wrong exception type when throwing function call
- Fixed bug #18222 : Add __invoke method to PEAR standard
- Fixed bug #18235 : Invalid error generation in Squiz.Commenting.FunctionCommentThrowTag
- Fixed bug #18250 : --standard with relative path skips Standards&apos; &quot;implicit&quot; sniffs
- Fixed bug #18274 : Multi-line IF and function call indent rules conflict
- Fixed bug #18282 : Squiz doesn&apos;t handle final keyword before function comments
  -- Thanks to Dave Perrett for the patch
- Fixed bug #18336 : Function isUnderscoreName gives php notices
   </notes>
  </release>
  <release>
   <version>
    <release>1.3.0RC2</release>
    <api>1.3.0RC2</api>
   </version>
   <stability>
    <release>beta</release>
    <api>beta</api>
   </stability>
   <date>2011-01-14</date>
   <license uri="https://github.com/squizlabs/PHP_CodeSniffer/blob/master/licence.txt">BSD License</license>
   <notes>
- You can now print multiple reports for each run and print each to the screen or a file (request #12434)
  -- Format is --report-[report][=file] (e.g., --report-xml=out.xml)
  -- Printing to screen is done by leaving [file] empty (e.g., --report-xml)
  -- Multiple reports can be specified in this way (e.g., --report-summary --report-xml=out.xml)
  -- The standard --report and --report-file command line arguments are unchanged
- Added -d command line argument to set php.ini settings while running (request #17244)
  -- Usage is: phpcs -d memory_limit=32M -d ...
  -- Thanks to Ben Selby for the patch
- Added -p command line argument to show progress during a run
  -- Dot means pass, E means errors found, W means only warnings found and S means skipped file
  -- Particularly good for runs where you are checking more than 100 files
  -- Enable by default with --config-set show_progress 1
  -- Will not print anything if you are already printing verbose output
  -- This has caused a big change in the way PHP_CodeSniffer processes files (API changes around processing)
- You can now add exclude rules for individual sniffs or error messages (request #17903)
  -- Only available when using a ruleset.xml file to specify rules
  -- Uses the same exclude-pattern tags as normal but allows them inside rule tags
- Using the -vvv option will now print a list of sniffs executed for each file and how long they took to process
- Added Generic ClosureLinterSniff to run Google&apos;s gjslint over your JS files
- The XML and CSV reports now include the severity of the error (request #18165)
  -- The Severity column in the CSV report has been renamed to Type, and a new Severity column added for this
- Fixed issue with Squiz FunctionCommentSniff reporting incorrect type hint when default value uses namespace
  -- Thanks to Anti Veeranna for the patch
- Generic FileLengthSniff now uses iconv_strlen to check line length if an encoding is specified (request #14237)
- Generic UnnecessaryStringConcatSniff now allows strings to be combined to form a PHP open or close tag
- Squiz SwitchDeclarationSniff no longer reports indentation errors for BREAK statements inside IF conditions
- Interactive mode now always prints the full error report (ignores command line)
- Improved regular expression detection in JavaScript files
  -- Added new T_TYPEOF token that can be used to target the typeof JS operator
  -- Fixes bug #17611 : Regular expression tokens not recognised
- Squiz ScopeIndentSniff removed
  -- Squiz standard no longer requires additional indents between ob_* methods
  -- Also removed Squiz OutputBufferingIndentSniff that was checking the same thing
- PHP_CodeSniffer_File::getMemberProperties() performance improved significantly
  -- Improves performance of Squiz ValidVariableNameSniff significantly
- Squiz OperatorSpacingSniff performance improved significantly
- Squiz NonExecutableCodeSniff performance improved significantly
  -- Will throw duplicate errors in some cases now, but these should be rare
- MySource IncludeSystemSniff performance improved significantly
- MySource JoinStringsSniff no longer reports an error when using join() on a named JS array
- Warnings are now reported for each file when they cannot be opened instead of stopping the script
  -- Hide warnings with the -n command line argument
  -- Can override the warnings using the code Internal.DetectLineEndings
- Fixed bug #17693 : issue with pre-commit hook script with filenames that start with v
- Fixed bug #17860 : isReference function fails with references in array
  -- Thanks to Lincoln Maskey for the patch
- Fixed bug #17902 : Cannot run tests when tests are symlinked into tests dir
  -- Thanks to Matt Button for the patch
- Fixed bug #17928 : Improve error message for Generic_Sniffs_PHP_UpperCaseConstantSniff
  -- Thanks to Stefano Kowalke for the patch
- Fixed bug #18039 : JS Tokenizer crash when ] is last character in file
- Fixed bug #18047 : Incorrect handling of namespace aliases as constants
  -- Thanks to Dmitri Medvedev for the patch
- Fixed bug #18072 : Impossible to exclude path from processing when symlinked
- Fixed bug #18073 : Squiz.PHP.NonExecutableCode fault
- Fixed bug #18117 : PEAR coding standard: Method constructor not sniffed as a function
- Fixed bug #18135 : Generic FunctionCallArgumentSpacingSniff reports function declaration errors
- Fixed bug #18140 : Generic scope indent in exact mode: strange expected/found values for switch
- Fixed bug #18145 : Sniffs are not loaded for custom ruleset file
  -- Thanks to Scott McCammon for the patch
- Fixed bug #18152 : While and do-while with AbstractPatternSniff
- Fixed bug #18191 : Squiz.PHP.LowercasePHPFunctions does not work with new Date()
- Fixed bug #18193 : CodeSniffer doesn&apos;t reconize CR (\r) line endings
   </notes>
  </release>
  <release>
   <version>
    <release>1.3.0RC1</release>
    <api>1.3.0RC1</api>
   </version>
   <stability>
    <release>beta</release>
    <api>beta</api>
   </stability>
   <date>2010-09-03</date>
   <license uri="https://github.com/squizlabs/PHP_CodeSniffer/blob/master/licence.txt">BSD License</license>
   <notes>
- Added exclude pattern support to ruleset.xml file so you can specify ignore patterns in a standard (request #17683)
  -- Use new exclude-pattern tags to include the ignore rules into your ruleset.xml file
  -- See CodeSniffer/Standards/PHPCS/ruleset.xml for an example
- Added new --encoding command line argument to specify the encoding of the files being checked
  -- When set to utf-8, stops the XML-based reports from double-encoding
  -- When set to something else, helps the XML-based reports encode to utf-8
  -- Default value is iso-8859-1 but can be changed with --config-set encoding [value]
- The report is no longer printed to screen when using the --report-file command line option (request #17467)
  -- If you want to print it to screen as well, use the -v command line argument
- The SVN and GIT blame reports now also show percentage of reported errors per author (request #17606)
  -- Thanks to Ben Selby for the patch
- Updated the SVN pre-commit hook to work with the new severity levels feature
- Generic SubversionPropertiesSniff now allows properties to have NULL values (request #17682)
  -- A null value indicates that the property should exist but the value should not be checked
- Generic UpperCaseConstantName Sniff now longer complains about the PHPUnit_MAIN_METHOD constant (request #17798)
- Squiz FileComment sniff now checks JS files as well as PHP files
- Squiz FunctionCommentSniff now supports namespaces in type hints
- Fixed a problem in Squiz OutputBufferingIndentSniff where block comments were reported as not indented
- Fixed bug #17092 : Problems with utf8_encode and htmlspecialchars with non-ascii chars
  -- Use the new --encoding=utf-8 command line argument if your files are utf-8 encoded
- Fixed bug #17629 : PHP_CodeSniffer_Tokens::$booleanOperators missing T_LOGICAL_XOR
  -- Thanks to Matthew Turland for the patch
- Fixed bug #17699 : Fatal error generating code coverage with PHPUnit 5.3.0RC1
- Fixed bug #17718 : Namespace &apos;use&apos; statement: used global class name is recognized as constant
- Fixed bug #17734 : Generic SubversionPropertiesSniff complains on non SVN files
- Fixed bug #17742 : EmbeddedPhpSniff reacts negatively to file without closing php tag
- Fixed bug #17823 : Notice: Please no longer include PHPUnit/Framework.php
   </notes>
  </release>
  <release>
   <version>
    <release>1.3.0a1</release>
    <api>1.3.0a1</api>
   </version>
   <stability>
    <release>alpha</release>
    <api>alpha</api>
   </stability>
   <date>2010-07-15</date>
   <license uri="https://github.com/squizlabs/PHP_CodeSniffer/blob/master/licence.txt">BSD License</license>
   <notes>
- All CodingStandard.php files have been replaced by ruleset.xml files
  -- Custom standards will need to be converted over to this new format to continue working
- You can specify a path to your own custom ruleset.xml file by using the --standard command line arg
  -- e.g., phpcs --standard=/path/to/my/ruleset.xml
- Added a new report type --report=gitblame to show how many errors and warnings were committed by each author
  -- Has the same functionality as the svnblame report
  -- Thanks to Ben Selby for the patch
- A new token type T_DOLLAR has been added to allow you to sniff for variable variables (feature request #17095)
  -- Thanks to Ian Young for the patch
- JS tokenizer now supports T_POWER (^) and T_MOD_EQUAL (%=) tokens (feature request #17441)
- If you have PHP_Timer installed, you&apos;ll now get a time/memory summary at the end of a script run
  -- Only happens when printing reports that are designed to be read on the command line
- Added Generic DeprecatedFunctionsSniff to warn about the use of deprecated functions (feature request #16694)
  -- Thanks to Sebastian Bergmann for the patch
- Added Squiz LogicalOperatorSniff to ensure that logical operators are surrounded by single spaces
- Added MySource ChannelExceptionSniff to ensure action files only throw ChannelException
- Added new method getClassProperties() for sniffs to use to determine if a class is abstract and/or final
  -- Thanks to Christian Kaps for the patch
- Generic UpperCaseConstantSniff no longer throws errors about namespaces
  -- Thanks to Christian Kaps for the patch
- Squiz OperatorBracketSniff now correctly checks value assignments in arrays
- Squiz LongConditionClosingCommentSniff now requires a comment for long CASE statements that use curly braces
- Squiz LongConditionClosingCommentSniff now requires an exact comment match on the brace
- MySource IncludeSystemSniff now ignores DOMDocument usage
- MySource IncludeSystemSniff no longer requires inclusion of systems that are being implemented
- Removed found and expected messages from Squiz ConcatenationSpacingSniff because they were messy and not helpful
- Fixed a problem where Generic CodeAnalysisSniff could show warnings if checking multi-line strings
- Fixed error messages in Squiz ArrayDeclarationSniff reporting incorrect number of found and expected spaces
- Fixed bug #17048 : False positive in Squiz_WhiteSpace_ScopeKeywordSpacingSniff
- Fixed bug #17054 : phpcs more strict than PEAR CS regarding function parameter spacing
- Fixed bug #17096 : Notice: Undefined index: scope_condition in ScopeClosingBraceSniff.php
  -- Moved PEAR.Functions.FunctionCallArgumentSpacing to Generic.Functions.FunctionCallArgumentSpacing
- Fixed bug #17144 : Deprecated: Function eregi() is deprecated
- Fixed bug #17236 : PHP Warning due to token_get_all() in DoubleQuoteUsageSniff
- Fixed bug #17243 : Alternate Switch Syntax causes endless loop of Notices in SwitchDeclaration
- Fixed bug #17313 : Bug with switch case structure
- Fixed bug #17331 : Possible parse error: interfaces may not include member vars
- Fixed bug #17337 : CSS tokenizer fails on quotes urls
- Fixed bug #17420 : Uncaught exception when comment before function brace
- Fixed bug #17503 : closures formatting is not supported
   </notes>
  </release>
  <release>
   <version>
    <release>1.2.2</release>
    <api>1.2.2</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <date>2010-01-27</date>
   <license uri="https://github.com/squizlabs/PHP_CodeSniffer/blob/master/licence.txt">BSD License</license>
   <notes>
- The core PHP_CodeSniffer_File methods now understand the concept of closures (feature request #16866)
  -- Thanks to Christian Kaps for the sample code
- Sniffs can now specify violation codes for each error and warning they add
  -- Future versions will allow you to override messages and severities using these codes
  -- Specifying a code is optional, but will be required if you wish to support overriding
- All reports have been broken into separate classes
  -- Command line usage and report output remains the same
  -- Thanks to Gabriele Santini for the patch
- Added an interactive mode that can be enabled using the -a command line argument
  -- Scans files and stops when it finds a file with errors
  -- Waits for user input to recheck the file (hopefully you fixed the errors) or skip the file
  -- Useful for very large code bases where full rechecks take a while
- The reports now show the correct number of errors and warnings found
- The isCamelCaps method now allows numbers in class names
- The JS tokenizer now correctly identifies boolean and bitwise AND and OR tokens
- The JS tokenizer now correctly identifies regular expressions used in conditions
- PEAR ValidFunctionNameSniff now ignores closures
- Squiz standard now uses the PEAR setting of 85 chars for LineLengthSniff
- Squiz ControlStructureSpacingSniff now ensure there are no spaces around parentheses
- Squiz LongConditionClosingCommentSniff now checks for comments at the end of try/catch statements
- Squiz LongConditionClosingCommentSniff now checks validity of comments for short structures if they exist
- Squiz IncrementDecrementUsageSniff now has better checking to ensure it only looks at simple variable assignments
- Squiz PostStatementCommentSniff no longer throws errors for end function comments
- Squiz InlineCommentSniff no longer throws errors for end function comments
- Squiz OperatorBracketSniff now allows simple arithmetic operations in SWITCH conditions
- Squiz ValidFunctionNameSniff now ignores closures
- Squiz MethodScopeSniff now ignores closures
- Squiz ClosingDeclarationCommentSniff now ignores closures
- Squiz GlobalFunctionSniff now ignores closures
- Squiz DisallowComparisonAssignmentSniff now ignores the assigning of arrays
- Squiz DisallowObjectStringIndexSniff now allows indexes that contain dots and reserved words
- Squiz standard now throws nesting level and cyclomatic complexity errors at much higher levels
- Squiz CommentedOutCodeSniff now ignores common comment framing characters
- Squiz ClassCommentSniff now ensures the open comment tag is the only content on the first line
- Squiz FileCommentSniff now ensures the open comment tag is the only content on the first line
- Squiz FunctionCommentSniff now ensures the open comment tag is the only content on the first line
- Squiz VariableCommentSniff now ensures the open comment tag is the only content on the first line
- Squiz NonExecutableCodeSniff now warns about empty return statements that are not required
- Removed ForbiddenStylesSniff from Squiz standard
  -- It is now in in the MySource standard as BrowserSpecificStylesSniff
  -- New BrowserSpecificStylesSniff ignores files with browser-specific suffixes
- MySource IncludeSystemSniff no longer throws errors when extending the Exception class
- MySource IncludeSystemSniff no longer throws errors for the abstract widget class
- MySource IncludeSystemSniff and UnusedSystemSniff now allow includes inside IF statements
- MySource IncludeSystemSniff no longer throws errors for included widgets inside methods
- MySource GetRequestDataSniff now throws errors for using $_FILES
- MySource CreateWidgetTypeCallbackSniff now allows return statements in nested functions
- MySource DisallowSelfActionsSniff now ignores abstract classes
- Fixed a problem with the SVN pre-commit hook for PHP versions without vertical whitespace regex support
- Fixed bug #16740 : False positives for heredoc strings and unused parameter sniff
- Fixed bug #16794 : ValidLogicalOperatorsSniff doesn&apos;t report operators not in lowercase
- Fixed bug #16804 : Report filename is shortened too much
- Fixed bug #16821 : Bug in Squiz_Sniffs_WhiteSpace_OperatorSpacingSniff
  -- Thanks to Jaroslav Hanslík for the patch
- Fixed bug #16836 : Notice raised when using semicolon to open case
- Fixed bug #16855 : Generic standard sniffs incorrectly for define() method
- Fixed bug #16865 : Two bugs in Squiz_Sniffs_WhiteSpace_OperatorSpacingSniff
  -- Thanks to Jaroslav Hanslík for the patch
- Fixed bug #16902 : Inline If Declaration bug
- Fixed bug #16960 : False positive for late static binding in Squiz/ScopeKeywordSpacingSniff
  -- Thanks to Jakub Tománek for the patch
- Fixed bug #16976 : The phpcs attempts to process symbolic links that don&apos;t resolve to files
- Fixed bug #17017 : Including one file in the files sniffed alters errors reported for another file
   </notes>
  </release>
  <release>
   <version>
    <release>1.2.1</release>
    <api>1.2.1</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <date>2009-11-17</date>
   <license uri="https://github.com/squizlabs/PHP_CodeSniffer/blob/master/licence.txt">BSD License</license>
   <notes>
- Added a new report type --report=svnblame to show how many errors and warnings were committed by each author
  -- Also shows the percentage of their code that are errors and warnings
  -- Requires you to have the SVN command in your path
  -- Make sure SVN is storing usernames and passwords (if required) or you will need to enter them for each file
  -- You can also use the -s command line argument to see the different types of errors authors are committing
  -- You can use the -v command line argument to see all authors, even if they have no errors or warnings
- Added a new command line argument --report-width to allow you to set the column width of screen reports
  -- Reports wont accept values less than 70 or else they get too small
  -- Can also be set via a config var: phpcs --config-set report_width 100
- You can now get PHP_CodeSniffer to ignore a whole file by adding @codingStandardsIgnoreFile in the content
  -- If you put it in the first two lines the file wont even be tokenized, so it will be much quicker
- Reports now print their file lists in alphabetical order
- PEAR FunctionDeclarationSniff now reports error for incorrect closing bracket placement in multi-line definitions
- Added Generic CallTimePassByReferenceSniff to prohibit the passing of variables into functions by reference
  -- Thanks to Florian Grandel for the contribution
- Added Squiz DisallowComparisonAssignmentSniff to ban the assignment of comparison values to a variable
- Added Squiz DuplicateStyleDefinitionSniff to check for duplicate CSS styles in a single class block
- Squiz ArrayDeclarationSniff no longer checks the case of array indexes because that is not its job
- Squiz PostStatementCommentSniff now allows end comments for class member functions
- Squiz InlineCommentSniff now supports the checking of JS files
- MySource CreateWidgetTypeCallbackSniff now allows the callback to be passed to another function
- MySource CreateWidgetTypeCallbackSniff now correctly ignores callbacks used inside conditions
- Generic MultipleStatementAlignmentSniff now enforces a single space before equals sign if max padding is reached
- Fixed a problem in the JS tokenizer where regular expressions containing \// were not converted correctly
- Fixed a problem tokenizing CSS files where multiple ID targets on a line would look like comments
- Fixed a problem tokenizing CSS files where class names containing a colon looked like style definitions
- Fixed a problem tokenizing CSS files when style statements had empty url() calls
- Fixed a problem tokenizing CSS colours with the letter E in first half of the code
- Squiz ColonSpacingSniff now ensures it is only checking style definitions in CSS files and not class names
- Squiz DisallowComparisonAssignmentSniff no longer reports errors when assigning the return value of a function
- CSS tokenizer now correctly supports multi-line comments
- When only the case of var names differ for function comments, the error now indicates the case is different
- Fixed an issue with Generic UnnecessaryStringConcatSniff where it incorrectly suggested removing a concat
- Fixed bug #16530 : ScopeIndentSniff reports false positive
- Fixed bug #16533 : Duplicate errors and warnings
- Fixed bug #16563 : Check file extensions problem in phpcs-svn-pre-commit
  -- Thanks to Kaijung Chen for the patch
- Fixed bug #16592 : Object operator indentation incorrect when first operator is on a new line
- Fixed bug #16641 : Notice output
- Fixed bug #16682 : Squiz_Sniffs_Strings_DoubleQuoteUsageSniff reports string &quot;\0&quot; as invalid
- Fixed bug #16683 : Typing error in PHP_CodeSniffer_CommentParser_AbstractParser
- Fixed bug #16684 : Bug in Squiz_Sniffs_PHP_NonExecutableCodeSniff
- Fixed bug #16692 : Spaces in paths in Squiz_Sniffs_Debug_JavaScriptLintSniff
  -- Thanks to Jaroslav Hanslík for the patch
- Fixed bug #16696 : Spelling error in MultiLineConditionSniff
- Fixed bug #16697 : MultiLineConditionSniff incorrect result with inline IF
- Fixed bug #16698 : Notice in JavaScript Tokenizer
- Fixed bug #16736 : Multi-files sniffs aren&apos;t processed when FILE is a single directory
  -- Thanks to Alexey Shein for the patch
- Fixed bug #16792 : Bug in Generic_Sniffs_PHP_ForbiddenFunctionsSniff
   </notes>
  </release>
  <release>
   <version>
    <release>1.2.0</release>
    <api>1.2.0</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <date>2009-08-17</date>
   <license uri="https://github.com/squizlabs/PHP_CodeSniffer/blob/master/licence.txt">BSD License</license>
   <notes>
- Installed standards are now favoured over custom standards when using the cmd line arg with relative paths
- Unit tests now use a lot less memory while running
- Squiz standard now uses Generic EmptyStatementSniff but throws errors instead of warnings
- Squiz standard now uses Generic UnusedFunctionParameterSniff
- Removed unused ValidArrayIndexNameSniff from the Squiz standard
- Fixed bug #16424 : SubversionPropertiesSniff print PHP Warning
- Fixed bug #16450 : Constant PHP_CODESNIFFER_VERBOSITY already defined (unit tests)
- Fixed bug #16453 : function declaration long line splitted error
- Fixed bug #16482 : phpcs-svn-pre-commit ignores extensions parameter
   </notes>
  </release>
  <release>
   <version>
    <release>1.2.0RC3</release>
    <api>1.2.0RC3</api>
   </version>
   <stability>
    <release>beta</release>
    <api>beta</api>
   </stability>
   <date>2009-07-07</date>
   <license uri="https://github.com/squizlabs/PHP_CodeSniffer/blob/master/licence.txt">BSD License</license>
   <notes>
- You can now use @codingStandardsIgnoreStart and @...End comments to suppress messages (feature request #14002)
- A warning is now included for files without any code when short_open_tag is set to Off (feature request #12952)
- You can now use relative paths to your custom standards with the --standard cmd line arg (feature request #14967)
- You can now override magic methods and functions in PEAR ValidFunctionNameSniff (feature request #15830)
- MySource IncludeSystemSniff now recognises widget action classes
- MySource IncludeSystemSniff now knows about unit test classes and changes rules accordingly
   </notes>
  </release>
  <release>
   <version>
    <release>1.2.0RC2</release>
    <api>1.2.0RC2</api>
   </version>
   <stability>
    <release>beta</release>
    <api>beta</api>
   </stability>
   <date>2009-05-25</date>
   <license uri="https://github.com/squizlabs/PHP_CodeSniffer/blob/master/licence.txt">BSD License</license>
   <notes>
- Test suite can now be run using the full path to AllTests.php (feature request #16179)
- Fixed bug #15980 : PHP_CodeSniffer change php current directory
  -- Thanks to Dolly Aswin Harahap for the patch
- Fixed bug #16001 : Notice triggered
- Fixed bug #16054 : phpcs-svn-pre-commit not showing any errors
- Fixed bug #16071 : Fatal error: Uncaught PHP_CodeSniffer_Exception
- Fixed bug #16170 : Undefined Offset -1 in MultiLineConditionSniff.php on line 68
- Fixed bug #16175 : Bug in Squiz-IncrementDecrementUsageSniff
   </notes>
  </release>
  <release>
   <version>
    <release>1.2.0RC1</release>
    <api>1.2.0RC1</api>
   </version>
   <stability>
    <release>beta</release>
    <api>beta</api>
   </stability>
   <date>2009-03-09</date>
   <license uri="https://github.com/squizlabs/PHP_CodeSniffer/blob/master/licence.txt">BSD License</license>
   <notes>
- Reports that are output to a file now include a trailing newline at the end of the file
- Fixed sniff names not shown in -vvv token processing output
- Added Generic SubversionPropertiesSniff to check that specific svn props are set for files
  -- Thanks to Jack Bates for the contribution
- The PHP version check can now be overridden in classes that extend PEAR FileCommentSniff
  -- Thanks to Helgi Þormar Þorbjörnsson for the suggestion
- Added Generic ConstructorNameSniff to check for PHP4 constructor name usage
  -- Thanks to Leif Wickland for the contribution
- Squiz standard now supports multi-line function and condition sniffs from PEAR standard
- Squiz standard now uses Generic ConstructorNameSniff
- Added MySource GetRequestDataSniff to ensure REQUEST, GET and POST are not accessed directly
- Squiz OperatorBracketSniff now allows square brackets in simple unbracketed operations
- Fixed the incorrect tokenizing of multi-line block comments in CSS files
- Fixed bug #15383 : Uncaught PHP_CodeSniffer_Exception
- Fixed bug #15408 : An unexpected exception has been caught: Undefined offset: 2
- Fixed bug #15519 : Uncaught PHP_CodeSniffer_Exception
- Fixed bug #15624 : Pre-commit hook fails with PHP errors
- Fixed bug #15661 : Uncaught PHP_CodeSniffer_Exception
- Fixed bug #15722 : &quot;declare(encoding = &apos;utf-8&apos;);&quot; leads to &quot;Missing file doc comment&quot;
- Fixed bug #15910 : Object operator indention not calculated correctly
   </notes>
  </release>
  <release>
   <version>
    <release>1.2.0a1</release>
    <api>1.2.0a1</api>
   </version>
   <stability>
    <release>alpha</release>
    <api>alpha</api>
   </stability>
   <date>2008-12-18</date>
   <license uri="https://github.com/squizlabs/PHP_CodeSniffer/blob/master/licence.txt">BSD License</license>
   <notes>
- PHP_CodeSniffer now has a CSS tokenizer for checking CSS files
- Added support for a new multi-file sniff that sniffs all processed files at once
- Added new output format --report=emacs to output errors using the emacs standard compile output format
  -- Thanks to Len Trigg for the contribution
- Reports can now be written to a file using the --report-file command line argument (feature request #14953)
  -- The report is also written to screen when using this argument
- The CheckStyle, CSV and XML reports now include a source for each error and warning (feature request #13242)
  -- A new report type --report=source can be used to show you the most common errors in your files
- Added new command line argument -s to show error sources in all reports
- Added new command line argument --sniffs to specify a list of sniffs to restrict checking to
  -- Uses the sniff source codes that are optionally displayed in reports
- Changed the max width of error lines from 80 to 79 chars to stop blank lines in the default windows cmd window
- PHP_CodeSniffer now has a token for an asperand (@ symbol) so sniffs can listen for them
  -- Thanks to Andy Brockhurst for the patch
- Added Generic DuplicateClassNameSniff that will warn if the same class name is used in multiple files
  -- Not currently used by any standard; more of a multi-file sniff sample than anything useful
- Added Generic NoSilencedErrorsSniff that warns if PHP errors are being silenced using the @ symbol
  -- Thanks to Andy Brockhurst for the contribution
- Added Generic UnnecessaryStringConcatSniff that checks for two strings being concatenated
- Added PEAR FunctionDeclarationSniff to enforce the new multi-line function declaration PEAR standard
- Added PEAR MultiLineAssignmentSniff to enforce the correct indentation of multi-line assignments
- Added PEAR MultiLineConditionSniff to enforce the new multi-line condition PEAR standard
- Added PEAR ObjectOperatorIndentSniff to enforce the new chained function call PEAR standard
- Added MySource DisallowSelfActionSniff to ban the use of self::method() calls in Action classes
- Added MySource DebugCodeSniff to ban the use of Debug::method() calls
- Added MySource CreateWidgetTypeCallback sniff to check callback usage in widget type create methods
- Added Squiz DisallowObjectStringIndexSniff that forces object dot notation in JavaScript files
  -- Thanks to Sertan Danis for the contribution
- Added Squiz DiscouragedFunctionsSniff to warn when using debug functions
- Added Squiz PropertyLabelSniff to check whitespace around colons in JS property and label declarations
- Added Squiz DuplicatePropertySniff to check for duplicate property names in JS classes
- Added Squiz ColonSpacingSniff to check for spacing around colons in CSS style definitions
- Added Squiz SemicolonSpacingSniff to check for spacing around semicolons in CSS style definitions
- Added Squiz IndentationSniff to check for correct indentation of CSS files
- Added Squiz ColourDefinitionSniff to check that CSS colours are defined in uppercase and using shorthand
- Added Squiz EmptyStyleDefinitionSniff to check for CSS style definitions without content
- Added Squiz EmptyClassDefinitionSniff to check for CSS class definitions without content
- Added Squiz ClassDefinitionOpeningBraceSpaceSniff to check for spaces around opening brace of CSS class definitions
- Added Squiz ClassDefinitionClosingBraceSpaceSniff to check for a single blank line after CSS class definitions
- Added Squiz ClassDefinitionNameSpacingSniff to check for a blank lines inside CSS class definition names
- Added Squiz DisallowMultipleStyleDefinitionsSniff to check for multiple style definitions on a single line
- Added Squiz DuplicateClassDefinitionSniff to check for duplicate CSS class blocks that can be merged
- Added Squiz ForbiddenStylesSniff to check for usage of browser specific styles
- Added Squiz OpacitySniff to check for incorrect opacity values in CSS
- Added Squiz LowercaseStyleDefinitionSniff to check for styles that are not defined in lowercase
- Added Squiz MissingColonSniff to check for style definitions where the colon has been forgotten
- Added Squiz MultiLineFunctionDeclarationSniff to check that multi-line declarations contain one param per line
- Added Squiz JSLintSniff to check for JS errors using the jslint.js script through Rhino
  -- Set jslint path using phpcs --config-set jslint_path /path/to/jslint.js
  -- Set rhino path using phpcs --config-set rhino_path /path/to/rhino
- Added Generic TodoSniff that warns about comments that contain the word TODO
- Removed MultipleStatementAlignmentSniff from the PEAR standard as alignment is now optional
- Generic ForbiddenFunctionsSniff now has protected member var to specify if it should use errors or warnings
- Generic MultipleStatementAlignmentSniff now has correct error message if assignment is on a new line
- Generic MultipleStatementAlignmentSniff now has protected member var to allow it to ignore multi-line assignments
- Generic LineEndingsSniff now supports checking of JS files
- Generic LineEndingsSniff now supports checking of CSS files
- Generic DisallowTabIndentSniff now supports checking of CSS files
- Squiz DoubleQuoteUsageSniff now bans the use of variables in double quoted strings in favour of concatenation
- Squiz SuperfluousWhitespaceSniff now supports checking of JS files
- Squiz SuperfluousWhitespaceSniff now supports checking of CSS files
- Squiz DisallowInlineIfSniff now supports checking of JS files
- Squiz SemicolonSpacingSniff now supports checking of JS files
- Squiz PostStatementCommentSniff now supports checking of JS files
- Squiz FunctionOpeningBraceSpacingSniff now supports checking of JS files
- Squiz FunctionClosingBraceSpacingSniff now supports checking of JS files
  -- Empty JS functions must have their opening and closing braces next to each other
- Squiz ControlStructureSpacingSniff now supports checking of JS files
- Squiz LongConditionClosingCommentSniff now supports checking of JS files
- Squiz OperatorSpacingSniff now supports checking of JS files
- Squiz SwitchDeclarationSniff now supports checking of JS files
- Squiz CommentedOutCodeSniff now supports checking of CSS files
- Squiz DisallowSizeFunctionsInLoopsSniff now supports checking of JS files for the use of object.length
- Squiz DisallowSizeFunctionsInLoopsSniff no longer complains about size functions outside of the FOR condition
- Squiz ControlStructureSpacingSniff now bans blank lines at the end of a control structure
- Squiz ForLoopDeclarationSniff no longer throws errors for JS FOR loops without semicolons
- Squiz MultipleStatementAlignmentSniff no longer throws errors if a statement would take more than 8 spaces to align
- Squiz standard now uses Generic TodoSniff
- Squiz standard now uses Generic UnnecessaryStringConcatSniff
- Squiz standard now uses PEAR MultiLineAssignmentSniff
- Squiz standard now uses PEAR MultiLineConditionSniff
- Zend standard now uses OpeningFunctionBraceBsdAllmanSniff (feature request #14647)
- MySource JoinStringsSniff now bans the use of inline array joins and suggests the + operator
- Fixed incorrect errors that can be generated from abstract scope sniffs when moving to a new file
- Core tokenizer now matches orphaned curly braces in the same way as square brackets
- Whitespace tokens at the end of JS files are now added to the token stack
- JavaScript tokenizer now identifies properties and labels as new token types
- JavaScript tokenizer now identifies object definitions as a new token type and matches curly braces for them
- JavaScript tokenizer now identifies DIV_EQUAL and MUL_EQUAL tokens
- Improved regular expression detection in the JavaScript tokenizer
- Improve AbstractPatternSniff support so it can listen for any token type, not just weighted tokens
- Fixed Squiz DoubleQuoteUsageSniff so it works correctly with short_open_tag=Off
- Fixed bug #14409 : Output of warnings to log file
- Fixed bug #14520 : Notice: Undefined offset: 1 in /usr/share/php/PHP/CodeSniffer/File.php on line
- Fixed bug #14637 : Call to processUnknownArguments() misses second parameter $pos
  -- Thanks to Peter Buri for the patch
- Fixed bug #14889 : Lack of clarity: licence or license
- Fixed bug #15008 : Nested Parentheses in Control Structure Sniffs
- Fixed bug #15091 : pre-commit hook attempts to sniff folders
  -- Thanks to Bruce Weirdan for the patch
- Fixed bug #15124 : AbstractParser.php uses deprecated split() function
  -- Thanks to Sebastian Bergmann for the patch
- Fixed bug #15188 : PHPCS vs HEREDOC strings
- Fixed bug #15231 : Notice: Uninitialized string offset: 0 in FileCommentSniff.php on line 555
- Fixed bug #15336 : Notice: Undefined offset: 2 in /usr/share/php/PHP/CodeSniffer/File.php on line
   </notes>
  </release>
  <release>
   <version>
    <release>1.1.0</release>
    <api>1.1.0</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <date>2008-07-14</date>
   <license uri="https://github.com/squizlabs/PHP_CodeSniffer/blob/master/licence.txt">BSD License</license>
   <notes>
- PEAR FileCommentSniff now allows tag orders to be overridden in child classes
  -- Thanks to Jeff Hodsdon for the patch
- Added Generic DisallowMultipleStatementsSniff to ensure there is only one statement per line
- Squiz standard now uses DisallowMultipleStatementsSniff
- Fixed error in Zend ValidVariableNameSniff when checking vars in form: $class-&gt;{$var}
- Fixed bug #14077 : Fatal error: Uncaught PHP_CodeSniffer_Exception: $stackPtr is not a class member
- Fixed bug #14168 : Global Function -&gt; Static Method and __autoload()
- Fixed bug #14238 : Line length not checked at last line of a file
- Fixed bug #14249 : wrong detection of scope_opener
- Fixed bug #14250 : ArrayDeclarationSniff emit warnings at malformed array
- Fixed bug #14251 : --extensions option doesn&apos;t work
   </notes>
  </release>
  <release>
   <version>
    <release>1.1.0RC3</release>
    <api>1.1.0RC3</api>
   </version>
   <stability>
    <release>beta</release>
    <api>beta</api>
   </stability>
   <date>2008-07-03</date>
   <license uri="https://github.com/squizlabs/PHP_CodeSniffer/blob/master/licence.txt">BSD License</license>
   <notes>
- PEAR FileCommentSniff now allows tag orders to be overridden in child classes
  -- Thanks to Jeff Hodsdon for the patch
- Added Generic DisallowMultipleStatementsSniff to ensure there is only one statement per line
- Squiz standard now uses DisallowMultipleStatementsSniff
- Fixed error in Zend ValidVariableNameSniff when checking vars in form: $class-&gt;{$var}
- Fixed bug #14077 : Fatal error: Uncaught PHP_CodeSniffer_Exception: $stackPtr is not a class member
- Fixed bug #14168 : Global Function -&gt; Static Method and __autoload()
- Fixed bug #14238 : Line length not checked at last line of a file
- Fixed bug #14249 : wrong detection of scope_opener
- Fixed bug #14250 : ArrayDeclarationSniff emit warnings at malformed array
- Fixed bug #14251 : --extensions option doesn&apos;t work
   </notes>
  </release>
  <release>
   <version>
    <release>1.1.0RC2</release>
    <api>1.1.0RC2</api>
   </version>
   <stability>
    <release>beta</release>
    <api>beta</api>
   </stability>
   <date>2008-06-13</date>
   <license uri="https://github.com/squizlabs/PHP_CodeSniffer/blob/master/licence.txt">BSD License</license>
   <notes>
- Permission denied errors now stop script execution but still display current errors (feature request #14076)
- Added Squiz ValidArrayIndexNameSniff to ensure array indexes do not use camel case
- Squiz ArrayDeclarationSniff now ensures arrays are not declared with camel case index values
- PEAR ValidVariableNameSniff now alerts about a possible parse error for member vars inside an interface
- Fixed bug #13921 : js parsing fails for comments on last line of file
- Fixed bug #13922 : crash in case of malformed (but tokenized) php file
  -- PEAR and Squiz ClassDeclarationSniff now throw warnings for possible parse errors
  -- Squiz ValidClassNameSniff now throws warning for possible parse errors
  -- Squiz ClosingDeclarationCommentSniff now throws additional warnings for parse errors
   </notes>
  </release>
  <release>
   <version>
    <release>1.1.0RC1</release>
    <api>1.1.0RC1</api>
   </version>
   <stability>
    <release>beta</release>
    <api>beta</api>
   </stability>
   <date>2008-05-13</date>
   <license uri="https://github.com/squizlabs/PHP_CodeSniffer/blob/master/licence.txt">BSD License</license>
   <notes>
- Added support for multiple tokenizers so PHP_CodeSniffer can check more than just PHP files
  -- PHP_CodeSniffer now has a JS tokenizer for checking JavaScript files
  -- Sniffs need to be updated to work with additional tokenizers, or new sniffs written for them
   - phpcs now exits with status 2 if the tokenizer extension has been disabled (feature request #13269)
   - Added scripts/phpcs-svn-pre-commit that can be used as an SVN pre-commit hook
 -- Also reworked the way the phpcs script works to make it easier to wrap it with other functionality
 -- Thanks to Jack Bates for the contribution
   - Fixed error in phpcs error message when a supplied file does not exist
   - Fixed a cosmetic error in AbstractPatternSniff where the &quot;found&quot; string was missing some content
   - Added sniffs that implement part of the PMD rule catalog to the Generic standard
 -- Thanks to Manuel Pichler for the contribution of all these sniffs.
   - Squiz FunctionCommentThrowTagSniff no longer throws errors for function that only throw variables
   - Generic ScopeIndentSniff now has private member to enforce exact indent matching
   - Replaced Squiz DisallowCountInLoopsSniff with Squiz DisallowSizeFunctionsInLoopsSniff
 -- Thanks to Jan Miczaika for the sniff
   - Squiz BlockCommentSniff now checks inline doc block comments
   - Squiz InlineCommentSniff now checks inline doc block comments
   - Squiz BlockCommentSniff now checks for no blank line before first comment in a function
   - Squiz DocCommentAlignmentSniff now ignores inline doc block comments
   - Squiz ControlStructureSpacingSniff now ensures no blank lines at the start of control structures
   - Squiz ControlStructureSpacingSniff now ensures no blank lines between control structure closing braces
   - Squiz IncrementDecrementUsageSniff now ensures inc/dec ops are bracketed in string concats
   - Squiz IncrementDecrementUsageSniff now ensures inc/dec ops are not used in arithmetic operations
   - Squiz FunctionCommentSniff no longer throws errors if return value is mixed but function returns void somewhere
   - Squiz OperatorBracketSniff no allows function call brackets to count as operator brackets
   - Squiz DoubleQuoteUsageSniff now supports \x \f and \v (feature request #13365)
   - Squiz ComparisonOperatorUsageSniff now supports JS files
   - Squiz ControlSignatureSniff now supports JS files
   - Squiz ForLoopDeclarationSniff now supports JS files
   - Squiz OperatorBracketSniff now supports JS files
   - Squiz InlineControlStructureSniff now supports JS files
   - Generic LowerCaseConstantSniff now supports JS files
   - Generic DisallowTabIndentSniff now supports JS files
   - Generic MultipleStatementAlignmentSniff now supports JS files
   - Added Squiz ObjectMemberCommaSniff to ensure the last member of a JS object is not followed by a comma
   - Added Squiz ConstantCaseSniff to ensure the PHP constants are uppercase and JS lowercase
   - Added Squiz JavaScriptLintSniff to check JS files with JSL
 -- Set path using phpcs --config-set jsl_path /path/to/jsl
   - Added MySource FirebugConsoleSniff to ban the use of &quot;console&quot; for JS variable and function names
   - Added MySource JoinStringsSniff to enforce the use of join() to concatenate JS strings
   - Added MySource AssignThisSniff to ensure this is only assigned to a var called self
   - Added MySource DisallowNewWidgetSniff to ban manual creation of widget objects
   - Removed warning shown in Zend CodeAnalyzerSniff when the ZCA path is not set
   - Fixed error in Squiz ValidVariableNameSniff when checking vars in the form $obj-&gt;$var
   - Fixed error in Squiz DisallowMultipleAssignmentsSniff when checking vars in the form $obj-&gt;$var
   - Fixed error in Squiz InlineCommentSniff where comments for class constants were seen as inline
   - Fixed error in Squiz BlockCommentSniff where comments for class constants were not ignored
   - Fixed error in Squiz OperatorBracketSniff where negative numbers were ignored during comparisons
   - Fixed error in Squiz FunctionSpacingSniff where functions after member vars reported incorrect spacing
   - Fixed bug #13062 : Interface comments aren&apos;t handled in PEAR standard
 -- Thanks to Manuel Pichler for the path
   - Fixed bug #13119 : php minimum requirement need to be fix
   - Fixed bug #13156 : Bug in Squiz_Sniffs_PHP_NonExecutableCodeSniff
   - Fixed bug #13158 : Strange behaviour in AbstractPatternSniff
   - Fixed bug #13169 : Undefined variables
   - Fixed bug #13178 : Catch exception in File.php
   - Fixed bug #13254 : Notices output in checkstyle report causes XML issues
   - Fixed bug #13446 : crash with src of phpMyAdmin
 -- Thanks to Manuel Pichler for the path
   </notes>
  </release>
  <release>
   <version>
    <release>1.1.0a1</release>
    <api>1.1.0a1</api>
   </version>
   <stability>
    <release>alpha</release>
    <api>alpha</api>
   </stability>
   <date>2008-04-21</date>
   <license uri="https://github.com/squizlabs/PHP_CodeSniffer/blob/master/licence.txt">BSD License</license>
   <notes>
- Fixed error in PEAR ValidClassNameSniff when checking class names with double underscores
- Moved Squiz InlineControlStructureSniff into Generic standard
- PEAR standard now throws warnings for inline control structures
- Squiz OutputBufferingIndentSniff now ignores the indentation of inline HTML
- MySource IncludeSystemSniff now ignores usage of ZipArchive
- Removed &quot;function&quot; from error messages for Generic function brace sniffs (feature request #13820)
- Generic UpperCaseConstantSniff no longer throws errors for declare(ticks = ...)
  -- Thanks to Josh Snyder for the patch
- Squiz ClosingDeclarationCommentSniff and AbstractVariableSniff now throw warnings for possible parse errors
- Fixed bug #13827 : AbstractVariableSniff throws &quot;undefined index&quot;
- Fixed bug #13846 : Bug in Squiz.NonExecutableCodeSniff
- Fixed bug #13849 : infinite loop in PHP_CodeSniffer_File::findNext()
   </notes>
  </release>
  <release>
   <version>
    <release>1.0.1</release>
    <api>1.0.1</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <date>2008-02-04</date>
   <license uri="https://github.com/squizlabs/PHP_CodeSniffer/blob/master/licence.txt">BSD License</license>
   <notes>
- Squiz ArrayDeclarationSniff now throws error if the array keyword is followed by a space
- Squiz ArrayDeclarationSniff now throws error for empty multi-line arrays
- Squiz ArrayDeclarationSniff now throws error for multi-line arrays with a single value
- Squiz DocCommentAlignmentSniff now checks for a single space before tags inside docblocks
- Squiz ForbiddenFunctionsSniff now disallows is_null() to force use of (=== NULL) instead
- Squiz VariableCommentSniff now continues throwing errors after the first one is found
- Squiz SuperfluousWhitespaceSniff now throws errors for multiple blank lines inside functions
- MySource IncludedSystemSniff now checks extended class names
- MySource UnusedSystemSniff now checks extended and implemented class names
- MySource IncludedSystemSniff now supports includeWidget()
- MySource UnusedSystemSniff now supports includeWidget()
- Added PEAR ValidVariableNameSniff to check that only private member vars are prefixed with an underscore
- Added Squiz DisallowCountInLoopsSniff to check for the use of count() in FOR and WHILE loop conditions
- Added MySource UnusedSystemSniff to check for included classes that are never used
- Fixed a problem that caused the parentheses map to sometimes contain incorrect values
- Fixed bug #12767 : Cant run phpcs from dir with PEAR subdir
- Fixed bug #12773 : Reserved variables are not detected in strings
  -- Thanks to Wilfried Loche for the patch
- Fixed bug #12832 : Tab to space conversion does not work
- Fixed bug #12888 : extra space indentation = Notice: Uninitialized string offset...
- Fixed bug #12909 : Default generateDocs function does not work under linux
  -- Thanks to Paul Smith for the patch
- Fixed bug #12957 : PHP 5.3 magic method __callStatic
  -- Thanks to Manuel Pichler for the patch
   </notes>
  </release>
  <release>
   <version>
    <release>1.0.0</release>
    <api>1.0.0</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <date>2007-12-21</date>
   <license uri="https://github.com/squizlabs/PHP_CodeSniffer/blob/master/licence.txt">BSD License</license>
   <notes>
- You can now specify the full path to a coding standard on the command line (feature request #11886)
  -- This allows you to use standards that are stored outside of PHP_CodeSniffer&apos;s own Standard dir
  -- You can also specify full paths in the CodingStandard.php include and exclude methods
  -- Classes, dirs and files need to be names as if the standard was part of PHP_CodeSniffer
  -- Thanks to Dirk Thomas for the doc generator patch and testing
- Modified the scope map to keep checking after 3 lines for some tokens (feature request #12561)
  -- Those tokens that must have an opener (like T_CLASS) now keep looking until EOF
  -- Other tokens (like T_FUNCTION) still stop after 3 lines for performance
- You can now escape commas in ignore patterns so they can be matched in file names
  -- Thanks to Carsten Wiedmann for the patch
- Config data is now cached in a global var so the file system is not hit so often
  -- You can also set config data temporarily for the script if you are using your own external script
  -- Pass TRUE as the third argument to PHP_CodeSniffer::setConfigData()
- PEAR ClassDeclarationSniff no longer throws errors for multi-line class declarations
- Squiz ClassDeclarationSniff now ensures there is one blank line after a class closing brace
- Squiz ClassDeclarationSniff now throws errors for a missing end PHP tag after the end class tag
- Squiz IncrementDecrementUsageSniff no longer throws errors when -= and += are being used with vars
- Squiz SwitchDeclarationSniff now throws errors for switch statements that do not contain a case statement
  -- Thanks to Sertan Danis for the patch
- MySource IncludeSystemSniff no longer throws errors for the Util package
- Fixed bug #12621 : &quot;space after AS&quot; check is wrong
  -- Thanks to Satoshi Oikawa for the patch
- Fixed bug #12645 : error message is wrong
  -- Thanks to Renoiv for the patch
- Fixed bug #12651 : Increment/Decrement Operators Usage at -1
   </notes>
  </release>
  <release>
   <version>
    <release>1.0.0RC3</release>
    <api>1.0.0RC3</api>
   </version>
   <stability>
    <release>beta</release>
    <api>beta</api>
   </stability>
   <date>2007-11-30</date>
   <license uri="https://github.com/squizlabs/PHP_CodeSniffer/blob/master/licence.txt">BSD License</license>
   <notes>
- Added new command line argument --tab-width that will convert tabs to spaces before testing
  -- This allows you to use the existing sniffs that check for spaces even when you use tabs
  -- Can also be set via a config var: phpcs --config-set tab_width 4
  -- A value of zero (the default) tells PHP_CodeSniffer not to replace tabs with spaces
- You can now change the default report format from &quot;full&quot; to something else
    -- Run: phpcs --config-set report_format [format]
- Improved performance by optimising the way the scope map is created during tokenising
- Added new Squiz DisallowInlineIfSniff to disallow the usage of inline IF statements
- Fixed incorrect errors being thrown for nested switches in Squiz SwitchDeclarationSniff
- PEAR FunctionCommentSniff no longer complains about missing comments for @throws tags
- PEAR FunctionCommentSniff now throws error for missing exception class name for @throws tags
- PHP_CodeSniffer_File::isReference() now correctly returns for functions that return references
- Generic LineLengthSniff no longer warns about @version lines with CVS or SVN id tags
- Generic LineLengthSniff no longer warns about @license lines with long URLs
- Squiz FunctionCommentThrowTagSniff no longer complains about throwing variables
- Squiz ComparisonOperatorUsageSniff no longer throws incorrect errors for inline IF statements
- Squiz DisallowMultipleAssignmentsSniff no longer throws errors for assignments in inline IF statements
- Fixed bug #12455 : CodeSniffer treats content inside heredoc as PHP code
- Fixed bug #12471 : Checkstyle report is broken
- Fixed bug #12476 : PHP4 destructors are reported as error
- Fixed bug #12513 : Checkstyle XML messages need to be utf8_encode()d
  -- Thanks to Sebastian Bergmann for the patch.
- Fixed bug #12517 : getNewlineAfter() and dos files
   </notes>
  </release>
  <release>
   <version>
    <release>1.0.0RC2</release>
    <api>1.0.0RC2</api>
   </version>
   <stability>
    <release>beta</release>
    <api>beta</api>
   </stability>
   <date>2007-11-14</date>
   <license uri="https://github.com/squizlabs/PHP_CodeSniffer/blob/master/licence.txt">BSD License</license>
   <notes>
- Added a new Checkstyle report format
  -- Like the current XML format but modified to look like Checkstyle output
  -- Thanks to Manuel Pichler for helping get the format correct
- You can now hide warnings by default
    -- Run: phpcs --config-set show_warnings 0
    -- If warnings are hidden by default, use the new -w command line argument to override
- Added new command line argument --config-delete to delete a config value and revert to the default
- Improved overall performance by optimising tokenising and next/prev methods (feature request #12421)
  -- Thanks to Christian Weiske for the patch
- Added FunctionCallSignatureSniff to Squiz standard
- Added @subpackage support to file and class comment sniffs in PEAR standard (feature request #12382)
  -- Thanks to Carsten Wiedmann for the patch
- An error is now displayed if you use a PHP version less than 5.1.0 (feature request #12380)
  -- Thanks to Carsten Wiedmann for the patch
- phpcs now exits with status 2 if it receives invalid input (feature request #12380)
  -- This is distinct from status 1, which indicates errors or warnings were found
- Added new Squiz LanguageConstructSpacingSniff to throw errors for additional whitespace after echo etc.
- Removed Squiz ValidInterfaceNameSniff
- PEAR FunctionCommentSniff no longer complains about unknown tags
- Fixed incorrect errors about missing function comments in PEAR FunctionCommentSniff
- Fixed incorrect function docblock detection in Squiz FunctionCommentSniff
- Fixed incorrect errors for list() in Squiz DisallowMultipleAssignmentsSniff
- Errors no longer thrown if control structure is followed by a CASE&apos;s BREAK in Squiz ControlStructureSpacingSniff
- Fixed bug #12368 : Autoloader cannot be found due to include_path override
  -- Thanks to Richard Quadling for the patch
- Fixed bug #12378 : equal sign alignments problem with while()
   </notes>
  </release>
  <release>
   <version>
    <release>1.0.0RC1</release>
    <api>1.0.0RC1</api>
   </version>
   <stability>
    <release>beta</release>
    <api>beta</api>
   </stability>
   <date>2007-11-01</date>
   <license uri="https://github.com/squizlabs/PHP_CodeSniffer/blob/master/licence.txt">BSD License</license>
   <notes>
- Main phpcs script can now be run from a CVS checkout without installing the package
- Added a new CSV report format
  -- Header row indicates what position each element is in
  -- Always use the header row to determine positions rather than assuming the format, as it may change
- XML and CSV report formats now contain information about which column the error occurred at
  -- Useful if you want to highlight the token that caused the error in a custom application
- Square bracket tokens now have bracket_opener and bracket_closer set
- Added new Squiz SemicolonSpacingSniff to throw errors if whitespace is found before a semicolon
- Added new Squiz ArrayBracketSpacingSniff to throw errors if whitespace is found around square brackets
- Added new Squiz ObjectOperatorSpacingSniff to throw errors if whitespace is found around object operators
- Added new Squiz DisallowMultipleAssignmentsSniff to throw errors if multiple assignments are on the same line
- Added new Squiz ScopeKeywordSpacingSniff to throw errors if there is not a single space after a scope modifier
- Added new Squiz ObjectInstantiationSniff to throw errors if new objects are not assigned to a variable
- Added new Squiz FunctionDuplicateArgumentSniff to throw errors if argument is declared multiple times in a function
- Added new Squiz FunctionOpeningBraceSpaceSniff to ensure there are no blank lines after a function open brace
- Added new Squiz CommentedOutCodeSniff to warn about comments that looks like they are commented out code blocks
- Added CyclomaticComplexitySniff to Squiz standard
- Added NestingLevelSniff to Squiz standard
- Squiz ForbiddenFunctionsSniff now recommends echo() instead of print()
- Squiz ValidLogicalOperatorsSniff now recommends ^ instead of xor
- Squiz SwitchDeclarationSniff now contains more checks
  -- A single space is required after the case keyword
  -- No space is allowed before the colon in a case or default statement
  -- All switch statements now require a default case
  -- Default case must contain a break statement
  -- Empty default case must contain a comment describing why the default is ignored
  -- Empty case statements are not allowed
  -- Case and default statements must not be followed by a blank line
  -- Break statements must be followed by a blank line or the closing brace
  -- There must be no blank line before a break statement
- Squiz standard is now using the PEAR IncludingFileSniff
- PEAR ClassCommentSniff no longer complains about unknown tags
- PEAR FileCommentSniff no longer complains about unknown tags
- PEAR FileCommentSniff now accepts multiple @copyright tags
- Squiz BlockCommentSniff now checks that comment starts with a capital letter
- Squiz InlineCommentSniff now has better checking to ensure comment starts with a capital letter
- Squiz ClassCommentSniff now checks that short and long comments start with a capital letter
- Squiz FunctionCommentSniff now checks that short, long and param comments start with a capital letter
- Squiz VariableCommentSniff now checks that short and long comments start with a capital letter
- Fixed error with multi-token array indexes in Squiz ArrayDeclarationSniff
- Fixed error with checking shorthand IF statements without a semicolon in Squiz InlineIfDeclarationSniff
- Fixed error where constants used as default values in function declarations were seen as type hints
- Fixed bug #12316 : PEAR is no longer the default standard
- Fixed bug #12321 : wrong detection of missing function docblock
   </notes>
  </release>
  <release>
   <version>
    <release>0.9.0</release>
    <api>0.9.0</api>
   </version>
   <stability>
    <release>beta</release>
    <api>beta</api>
   </stability>
   <date>2007-09-24</date>
   <license uri="https://github.com/squizlabs/PHP_CodeSniffer/blob/master/licence.txt">BSD License</license>
   <notes>
- Added a config system for setting config data across phpcs runs
- You can now change the default coding standard from PEAR to something else
  -- Run: phpcs --config-set default_standard [standard]
- Added new Zend coding standard to check code against the Zend Framework standards
  -- The complete standard is not yet implemented
  -- Specify --standard=Zend to use
  -- Thanks to Johann-Peter Hartmann for the contribution of some sniffs
  -- Thanks to Holger Kral for the Code Analyzer sniff
   </notes>
  </release>
  <release>
   <version>
    <release>0.8.0</release>
    <api>0.8.0</api>
   </version>
   <stability>
    <release>beta</release>
    <api>beta</api>
   </stability>
   <date>2007-08-08</date>
   <license uri="https://github.com/squizlabs/PHP_CodeSniffer/blob/master/licence.txt">BSD License</license>
   <notes>
- Added new XML report format; --report=xml (feature request #11535)
  -- Thanks to Brett Bieber for the patch
- Added new command line argument --ignore to specify a list of files to skip (feature request #11556)
- Added PHPCS and MySource coding standards into the core install
- Scope map no longer gets confused by curly braces that act as string offsets
- Removed CodeSniffer/SniffException.php as it is no longer used
- Unit tests can now be run directly from a CVS checkout
- Made private vars and functions protected in PHP_CodeSniffer class so this package can be overridden
- Added new Metrics category to Generic coding standard
  -- Contains Cyclomatic Complexity and Nesting Level sniffs
  -- Thanks to Johann-Peter Hartmann for the contribution
- Added new Generic DisallowTabIndentSniff to throw errors if tabs are used for indentation (feature request #11738)
  -- PEAR and Squiz standards use this new sniff to throw more specific indentation errors
- Generic MultipleStatementAlignmentSniff has new private var to set a padding size limit (feature request #11555)
- Generic MultipleStatementAlignmentSniff can now handle assignments that span multiple lines (feature request #11561)
- Generic LineLengthSniff now has a max line length after which errors are thrown instead of warnings
  -- BC BREAK: Override the protected member var absoluteLineLimit and set it to zero in custom LineLength sniffs
  -- Thanks to Johann-Peter Hartmann for the contribution
- Comment sniff errors about incorrect tag orders are now more descriptive (feature request #11693)
- Fixed bug #11473 : Invalid CamelCaps name when numbers used in names
   </notes>
  </release>
  <release>
   <version>
    <release>0.7.0</release>
    <api>0.7.0</api>
   </version>
   <stability>
    <release>beta</release>
    <api>beta</api>
   </stability>
   <date>2007-07-02</date>
   <license uri="https://github.com/squizlabs/PHP_CodeSniffer/blob/master/licence.txt">BSD License</license>
   <notes>
- BC BREAK: EOL character is now auto-detected and used instead of hard-coded \n
  -- Pattern sniffs must now specify &quot;EOL&quot; instead of &quot;\n&quot; or &quot;\r\n&quot; to use auto-detection
  -- Please use $phpcsFile-&gt;eolChar to check for newlines instead of hard-coding &quot;\n&quot; or &quot;\r\n&quot;
  -- Comment parser classes now require you to pass $phpcsFile as an additional argument
- BC BREAK: Included and excluded sniffs now require .php extension
  -- Please update your coding standard classes and add &quot;.php&quot; to all sniff entries
  -- See CodeSniffer/Standards/PEAR/PEARCodingStandard.php for an example

- Fixed error where including a directory of sniffs in a coding standard class did not work
- Coding standard classes can now specify a list of sniffs to exclude as well as include (feature request #11056)
- Two uppercase characters can now be placed side-by-side in class names in Squiz ValidClassNameSniff
- SVN tags now allowed in PEAR file doc blocks (feature request #11038)
  -- Thanks to Torsten Roehr for the patch
- Private methods in commenting sniffs and comment parser are now protected (feature request #11087)
- Added Generic LineEndingsSniff to check the EOL character of a file
- PEAR standard now only throws one error per file for incorrect line endings (eg. /r/n)
- Command line arg -v now shows number of registered sniffs
- Command line arg -vvv now shows list of registered sniffs
- Squiz ControlStructureSpacingSniff no longer throws errors if the control structure is at the end of the script
- Squiz FunctionCommentSniff now throws error for &quot;return void&quot; if function has return statement
- Squiz FunctionCommentSniff now throws error for functions that return void but specify something else
- Squiz ValidVariableNameSniff now allows multiple uppercase letters in a row
- Squiz ForEachLoopDeclarationSniff now throws error for AS keyword not being lowercase
- Squiz SwitchDeclarationSniff now throws errors for CASE/DEFAULT/BREAK keywords not being lowercase
- Squiz ArrayDeclarationSniff now handles multi-token array values when checking alignment
- Squiz standard now enforces a space after cast tokens
- Generic MultipleStatementAlignmentSniff no longer gets confused by assignments inside FOR conditions
- Generic MultipleStatementAlignmentSniff no longer gets confused by the use of list()
- Added Generic SpaceAfterCastSniff to ensure there is a single space after a cast token
- Added Generic NoSpaceAfterCastSniff to ensure there is no whitespace after a cast token
- Added PEAR ClassDeclarationSniff to ensure the opening brace of a class is on the line after the keyword
- Added Squiz ScopeClosingBraceSniff to ensure closing braces are aligned correctly
- Added Squiz EvalSniff to discourage the use of eval()
- Added Squiz LowercaseDeclarationSniff to ensure all declaration keywords are lowercase
- Added Squiz LowercaseClassKeywordsSniff to ensure all class declaration keywords are lowercase
- Added Squiz LowercaseFunctionKeywordsSniff to ensure all function declaration keywords are lowercase
- Added Squiz LowercasePHPFunctionsSniff to ensure all calls to inbuilt PHP functions are lowercase
- Added Squiz CastSpacingSniff to ensure cast statements dont contain whitespace
- Errors no longer thrown when checking 0 length files with verbosity on
- Fixed bug #11105 : getIncludedSniffs() not working anymore
  -- Thanks to Blair Robertson for the patch
- Fixed bug #11120 : Uninitialized string offset in AbstractParser.php on line 200
   </notes>
  </release>
  <release>
   <version>
    <release>0.6.0</release>
    <api>0.6.0</api>
   </version>
   <stability>
    <release>beta</release>
    <api>beta</api>
   </stability>
   <date>2007-05-15</date>
   <license uri="https://github.com/squizlabs/PHP_CodeSniffer/blob/master/licence.txt">BSD License</license>
   <notes>
- The number of errors and warnings found is now shown for each file while checking the file if verbosity is enabled
- Now using PHP_EOL instead of hard-coded \n so output looks good on Windows (feature request #10761)
  - Thanks to Carsten Wiedmann for the patch.
- phpcs now exits with status 0 (no errors) or 1 (errors found) (feature request #10348)
- Added new -l command line argument to stop recursion into directories (feature request #10979)
- Fixed variable name error causing incorrect error message in Squiz ValidVariableNameSniff
- Fixed bug #10757 : Error in ControlSignatureSniff
- Fixed bugs #10751, #10777 : Sniffer class paths handled incorrectly in Windows
  - Thanks to Carsten Wiedmann for the patch.
- Fixed bug #10961 : Error &quot;Last parameter comment requires a blank newline after it&quot; thrown
- Fixed bug #10983 : phpcs outputs notices when checking invalid PHP
- Fixed bug #10980 : Incorrect warnings for equals sign
   </notes>
  </release>
  <release>
   <version>
    <release>0.5.0</release>
    <api>0.5.0</api>
   </version>
   <stability>
    <release>beta</release>
    <api>beta</api>
   </stability>
   <date>2007-04-17</date>
   <license uri="https://github.com/squizlabs/PHP_CodeSniffer/blob/master/licence.txt">BSD License</license>
   <notes>
- BC BREAK: Coding standards now require a class to be added so PHP_CodeSniffer can get information from them
  - Please read the end user docs for info about the new class required for all coding standards

- Coding standards can now include sniffs from other standards, or whole standards, without writing new sniff files
- PHP_CodeSniffer_File::isReference() now correctly returns for references in function declarations
- PHP_CodeSniffer_File::isReference() now returns false if you don&apos;t pass it a T_BITWISE_AND token
- PHP_CodeSniffer_File now stores the absolute path to the file so sniffs can check file locations correctly
- Fixed undefined index error in AbstractVariableSniff for variables inside an interface function definition
- Added MemberVarSpacingSniff to Squiz standard to enforce one-line spacing between member vars
- Add FunctionCommentThrowTagSniff to Squiz standard to check that @throws tags are correct
- Fixed problems caused by references and type hints in Squiz FunctionDeclarationArgumentSpacingSniff
- Fixed problems with errors not being thrown for some misaligned @param comments in Squiz FunctionCommentSniff
- Fixed badly spaced comma error being thrown for &quot;extends&quot; class in Squiz ClassDeclarationSniff
- Errors no longer thrown for class method names in Generic ForbiddenFunctionsSniff
- Errors no longer thrown for type hints in front of references in Generic UpperCaseConstantNameSniff
- Errors no longer thrown for correctly indented buffered lines in Squiz ScopeIndexSniff
- Errors no longer thrown for user-defined functions named as forbidden functions in Generic ForbiddenFunctionsSniff
- Errors no longer thrown on __autoload functions in PEAR ValidFunctionNameSniff
- Errors now thrown for __autoload methods in PEAR ValidFunctionNameSniff
- Errors now thrown if constructors or destructors have @return tags in Squiz FunctionCommentSniff
- Errors now thrown if @throws tags dont start with a capital and end with a full stop in Squiz FunctionCommentSniff
- Errors now thrown for invalid @var tag values in Squiz VariableCommentSniff
- Errors now thrown for missing doc comment in Squiz VariableCommentSniff
- Errors now thrown for unspaced operators in FOR loop declarations in Squiz OperatorSpacingSniff
- Errors now thrown for using ob_get_clean/flush functions to end buffers in Squiz OutputBufferingIndentSniff
- Errors now thrown for all missing member variable comments in Squiz VariableCommentSniff
   </notes>
  </release>
  <release>
   <version>
    <release>0.4.0</release>
    <api>0.4.0</api>
   </version>
   <stability>
    <release>beta</release>
    <api>beta</api>
   </stability>
   <date>2007-02-19</date>
   <license uri="https://github.com/squizlabs/PHP_CodeSniffer/blob/master/licence.txt">BSD License</license>
   <notes>
- Standard name specified with --standard command line argument is no longer case sensitive
- Long error and warning messages are now wrapped to 80 characters in the full error report (thanks Endre Czirbesz)
- Shortened a lot of error and warning messages so they don&apos;t take up so much room
- Squiz FunctionCommentSniff now checks that param comments start with a capital letter and end with a full stop
- Squiz FunctionSpacingSniff now reports incorrect lines below function on closing brace, not function keyword
- Squiz FileCommentSniff now checks that there are no blank lines between the open PHP tag and the comment
- PHP_CodeSniffer_File::isReference() now returns correctly when checking refs on right side of =&gt;
- Fixed incorrect error with switch closing brace in Squiz SwitchDeclarationSniff
- Fixed missing error when multiple statements are not aligned correctly with object operators
- Fixed incorrect errors for some PHP special variables in Squiz ValidVariableNameSniff
- Fixed incorrect errors for arrays that only contain other arrays in Squiz ArrayDeclarationSniff
- Fixed bug #9844 : throw new Exception(\n accidentally reported as error but it ain&apos;t
   </notes>
  </release>
  <release>
   <version>
    <release>0.3.0</release>
    <api>0.3.0</api>
   </version>
   <stability>
    <release>beta</release>
    <api>beta</api>
   </stability>
   <date>2007-01-11</date>
   <license uri="https://github.com/squizlabs/PHP_CodeSniffer/blob/master/licence.txt">BSD License</license>
   <notes>
- Updated package.xml to version 2
- Specifying coding standard on command line is now optional, even if you have multiple standards installed
  - PHP_CodeSniffer uses the PEAR coding standard by default if no standard is specified
- New command line option, --extensions, to specify a comma separated list of file extensions to check
- Converted all unit tests to PHPUnit 3 format
- Added new coding standard, Squiz, that can be used as an alternative to PEAR
  - also contains more examples of sniffs
  - some may be moved into the Generic coding standard if required
- Added MultipleStatementAlignmentSniff to Generic standard
- Added ScopeIndentSniff to Generic standard
- Added ForbiddenFunctionsSniff to Generic standard
- Added FileCommentSniff to PEAR standard
- Added ClassCommentSniff to PEAR standard
- Added FunctionCommentSniff to PEAR standard
- Change MultipleStatementSniff to MultipleStatementAlignmentSniff in PEAR standard
- Replaced Methods directory with Functions directory in Generic and PEAR standards
  - also renamed some of the sniffs in those directories
- Updated file, class and method comments for all files
- Fixed bug #9274 : nested_parenthesis element not set for open and close parenthesis tokens
- Fixed bug #9411 : too few pattern characters cause incorrect error report
   </notes>
  </release>
  <release>
   <version>
    <release>0.2.1</release>
    <api>0.2.1</api>
   </version>
   <stability>
    <release>alpha</release>
    <api>alpha</api>
   </stability>
   <date>2006-11-09</date>
   <license uri="https://github.com/squizlabs/PHP_CodeSniffer/blob/master/licence.txt">BSD License</license>
   <notes>
- Fixed bug #9274 : nested_parenthesis element not set for open and close parenthesis tokens
   </notes>
  </release>
  <release>
   <version>
    <release>0.2.0</release>
    <api>0.2.0</api>
   </version>
   <stability>
    <release>alpha</release>
    <api>alpha</api>
   </stability>
   <date>2006-10-13</date>
   <license uri="https://github.com/squizlabs/PHP_CodeSniffer/blob/master/licence.txt">BSD License</license>
   <notes>
- Added a generic standards package that will contain generic sniffs to be used in specific coding standards
  - thanks to Frederic Poeydomenge for the idea
- Changed PEAR standard to use generic sniffs where available
- Added LowerCaseConstantSniff to Generic standard
- Added UpperCaseConstantSniff to Generic standard
- Added DisallowShortOpenTagSniff to Generic standard
- Added LineLengthSniff to Generic standard
- Added UpperCaseConstantNameSniff to Generic standard
- Added OpeningMethodBraceBsdAllmanSniff to Generic standard (contrib by Frederic Poeydomenge)
- Added OpeningMethodBraceKernighanRitchieSniff to Generic standard (contrib by Frederic Poeydomenge)
- Added framework for core PHP_CodeSniffer unit tests
- Added unit test for PHP_CodeSniffer:isCamelCaps method
- ScopeClosingBraceSniff now checks indentation of BREAK statements
- Added new command line arg (-vv) to show developer debug output
- Fixed some coding standard errors
- Fixed bug #8834 : Massive memory consumption
- Fixed bug #8836 : path case issues in package.xml
- Fixed bug #8843 : confusion on nested switch()
- Fixed bug #8841 : comments taken as whitespace
- Fixed bug #8884 : another problem with nested switch() statements
   </notes>
  </release>
  <release>
   <version>
    <release>0.1.1</release>
    <api>0.1.1</api>
   </version>
   <stability>
    <release>alpha</release>
    <api>alpha</api>
   </stability>
   <date>2006-09-25</date>
   <license uri="https://github.com/squizlabs/PHP_CodeSniffer/blob/master/licence.txt">BSD License</license>
   <notes>
- Added unit tests for all PEAR sniffs
- Exception class now extends from PEAR_Exception
- Fixed summary report so files without errors but with warnings are not shown when warnings are hidden
   </notes>
  </release>
  <release>
   <version>
    <release>0.1.0</release>
    <api>0.1.0</api>
   </version>
   <stability>
    <release>alpha</release>
    <api>alpha</api>
   </stability>
   <date>2006-09-19</date>
   <license uri="https://github.com/squizlabs/PHP_CodeSniffer/blob/master/licence.txt">BSD License</license>
   <notes>
- Reorganised package contents to conform to PEAR standards
- Changed version numbering to conform to PEAR standards
- Removed duplicate require_once() of Exception.php from CodeSniffer.php
   </notes>
  </release>
  <release>
   <version>
    <release>0.0.5</release>
    <api>0.0.5</api>
   </version>
   <stability>
    <release>alpha</release>
    <api>alpha</api>
   </stability>
   <date>2006-09-18</date>
   <license uri="https://github.com/squizlabs/PHP_CodeSniffer/blob/master/licence.txt">BSD License</license>
   <notes>
- Fixed .bat file for situation where php.ini cannot be found so include_path is not set
   </notes>
  </release>
  <release>
   <version>
    <release>0.0.4</release>
    <api>0.0.4</api>
   </version>
   <stability>
    <release>alpha</release>
    <api>alpha</api>
   </stability>
   <date>2006-08-28</date>
   <license uri="https://github.com/squizlabs/PHP_CodeSniffer/blob/master/licence.txt">BSD License</license>
   <notes>
- Added .bat file for easier running of PHP_CodeSniffer on Windows
- Sniff that checks method names now works for PHP4 style code where there is no scope keyword
- Sniff that checks method names now works for PHP4 style constructors
- Sniff that checks method names no longer incorrectly reports error with magic methods
- Sniff that checks method names now reports errors with non-magic methods prefixed with __
- Sniff that checks for constant names no longer incorrectly reports errors with heredoc strings
- Sniff that checks for constant names no longer incorrectly reports errors with created objects
- Sniff that checks indentation no longer incorrectly reports errors with heredoc strings
- Sniff that checks indentation now correctly reports errors with improperly indented multi-line strings
- Sniff that checks function declarations now checks for spaces before and after an equals sign for default values
- Sniff that checks function declarations no longer incorrectly reports errors with multi-line declarations
- Sniff that checks included code no longer incorrectly reports errors when return value is used conditionally
- Sniff that checks opening brace of function no longer incorrectly reports errors with multi-line declarations
- Sniff that checks spacing after commas in function calls no longer reports too many errors for some code
- Sniff that checks control structure declarations now gives more descriptive error message
   </notes>
  </release>
  <release>
   <version>
    <release>0.0.3</release>
    <api>0.0.3</api>
   </version>
   <stability>
    <release>alpha</release>
    <api>alpha</api>
   </stability>
   <date>2006-08-22</date>
   <license uri="https://github.com/squizlabs/PHP_CodeSniffer/blob/master/licence.txt">BSD License</license>
   <notes>
- Added sniff to check for invalid class and interface names
- Added sniff to check for invalid function and method names
- Added sniff to warn if line is greater than 85 characters
- Added sniff to check that function calls are in the correct format
- Fixed error where comments were not allowed on the same line as a control structure declaration
- Added command line arg to print current version (--version)
   </notes>
  </release>
  <release>
   <version>
    <release>0.0.2</release>
    <api>0.0.2</api>
   </version>
   <stability>
    <release>alpha</release>
    <api>alpha</api>
   </stability>
   <date>2006-07-25</date>
   <license uri="https://github.com/squizlabs/PHP_CodeSniffer/blob/master/licence.txt">BSD License</license>
   <notes>
- Removed the including of checked files to stop errors caused by parsing them
- Removed the use of reflection so checked files do not have to be included
- Memory usage has been greatly reduced
- Much faster tokenising and checking times
- Reworked the PEAR coding standard sniffs (much faster now)
- Fix some bugs with the PEAR scope indentation standard
- Better checking for installed coding standards
- Can now accept multiple files and dirs on the command line
- Added an option to list installed coding standards
- Added an option to print a summary report (number of errors and warnings shown for each file)
- Added an option to hide warnings from reports
- Added an option to print verbose output (so you know what is going on)
- Reordered command line args to put switches first (although order is not enforced)
- Switches can now be specified together (eg. php -nv) as well as separately (phpcs -n -v)
   </notes>
  </release>
  <release>
   <version>
    <release>0.0.1</release>
    <api>0.0.1</api>
   </version>
   <stability>
    <release>alpha</release>
    <api>alpha</api>
   </stability>
   <date>2006-07-19</date>
   <license uri="https://github.com/squizlabs/PHP_CodeSniffer/blob/master/licence.txt">BSD License</license>
   <notes>
Initial preview release.
   </notes>
  </release>
 </changelog>
</package>
